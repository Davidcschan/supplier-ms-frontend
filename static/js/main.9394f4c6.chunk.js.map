{"version":3,"sources":["containers/DashboardPage/Title.js","utils/loadable.js","containers/NotFoundPage/Loadable.js","containers/Layout/AppBar.js","containers/Layout/Sidebar.js","containers/Layout/Workflow.js","components/Breadcrumb/index.js","containers/Layout/index.js","containers/MonthlyReportPage/Loadable.js","containers/QuarterReportPage/Loadable.js","containers/AnnualReportPage/Loadable.js","containers/StockTransfer/ItemListForm.js","components/Inputs/WarehouseAutocomplete.js","containers/StockTransfer/index.js","containers/StockDispose/ItemListForm.js","containers/StockDispose/index.js","containers/Labelling/ItemListForm.js","containers/Labelling/index.js","components/BilingualField/index.js","containers/Inventory/ExpectedQuantityField.js","containers/Inventory/MonthDiffField.js","redux/breadcrumbs.js","containers/Inventory/index.js","components/Inputs/PurchaseOrderAutocomplete.js","utils/sequentialNumber.js","containers/Inventory/AddStock.js","containers/Xero/index.js","containers/Xero/callback.js","containers/DeliveryItem/index.js","routes.js","../../ra-data-prisma/src/buildQuery.js","../../ra-data-prisma/src/getFinalType.js","../../ra-data-prisma/src/isList.js","../../ra-data-prisma/src/buildVariables.js","../../ra-data-prisma/src/isRequired.js","../../ra-data-prisma/src/buildGqlQuery.js","../../ra-data-prisma/src/getResponseParser.js","../../ra-data-prisma/src/index.js","dataProvider/index.js","dataProvider/authProvider.js","resources/Warehouse/index.js","resources/Supplier/index.js","resources/ReceivePayment/index.js","components/Shows/ShowText.js","resources/DeliveryNote/Create/1_InvoiceSelector.js","resources/DeliveryNote/Create/ItemAutocomplete.js","resources/DeliveryNote/Create/ProductAutocomplete.js","resources/DeliveryNote/Create/2_QuantityCheckForm.js","resources/DeliveryNote/Create/3_BoxingForm.js","resources/DeliveryNote/Create/4_Review.js","resources/DeliveryNote/Create/index.js","utils/capitalizeFirstLetter.js","utils/generateSC.js","utils/generateDN.js","resources/DeliveryNote/Show.js","components/Inputs/CustomerAutocomplete.js","resources/DeliveryNote/index.js","resources/DeliveryItem/index.js","resources/DeliveryItem/Create/index.js","components/Inputs/SalesOrderAutocomplete.js","resources/Invoice/Create/SalesOrderSelector.js","resources/Invoice/Create/Review.js","resources/Invoice/Create/BasicForm.js","resources/Invoice/Create/index.js","utils/generateINV.js","resources/Invoice/Show.js","resources/Invoice/index.js","resources/SalesOrder/Create/ProductListHeader.js","resources/SalesOrder/Create/TablePaginationActions.js","resources/SalesOrder/Create/ProductListPagination.js","resources/SalesOrder/Create/ProductListToolbar.js","resources/SalesOrder/Create/ProductSelectModal.js","resources/SalesOrder/Create/ProductSelector.js","components/Inputs/CustomerShopAutocomplete.js","resources/SalesOrder/Create/BasicForm.js","resources/SalesOrder/Create/Review.js","resources/SalesOrder/Create/index.js","resources/SalesOrder/Show.js","resources/SalesOrder/Edit.js","resources/SalesOrder/index.js","components/Inputs/SupplierAutocomplete.js","resources/PurchaseOrder/constants.js","resources/PurchaseOrder/Create/BasicForm.js","resources/PurchaseOrder/Create/Review.js","resources/PurchaseOrder/Create/ProductImport.js","resources/PurchaseOrder/Create/index.js","resources/PurchaseOrder/Show.js","resources/PurchaseOrder/index.js","resources/Shipping/Create/PurchaseOrderSelector.js","resources/Shipping/Create/QuantityCheckRow.js","resources/Shipping/Create/QuantityCheckTable.js","resources/Shipping/Create/Review.js","utils/uniqueLabelCheck.js","resources/Shipping/Create/QuantityCheckForm.js","resources/Shipping/Create/QuantityCheck.js","resources/Shipping/Create/index.js","resources/Shipping/Show.js","resources/Shipping/index.js","resources/Product/Show.js","resources/Product/index.js","resources/Customer/index.js","resources/User/index.js","resources/UserGroup/index.js","resources/CustomerGroup/index.js","resources/CustomerShop/index.js","resources/ProductCategory/index.js","i18n/en.js","i18nProvider.js","resources/PurchaseOrderItem/index.js","resources/ShippingItem/index.js","resources/SalesOrderItem/index.js","App.js","serviceWorker.js","index.js","../../webpack/bootstrap","../../external \"react\"","../../external \"@material-ui/core/styles\"","../../external \"@material-ui/core/Stepper\"","../../external \"@material-ui/core/StepConnector\"","../../external \"lodash/snakeCase\"","../../external \"@material-ui/core/styles/makeStyles\"","../../external \"@material-ui/core/Step\"","../../external \"@material-ui/core/StepLabel\"","../../external \"@material-ui/icons/Storefront\"","../../external \"@material-ui/icons/AddShoppingCart\"","../../external \"@material-ui/icons/Flight\"","../../external \"@material-ui/icons/House\"","../../external \"@material-ui/icons/InsertDriveFile\"","../../external \"@material-ui/icons/LocationCity\"","../../external \"@material-ui/icons/ShoppingCart\"","../../external \"@material-ui/icons/Money\"","../../external \"@material-ui/icons/LocalShipping\"","../../external \"@material-ui/icons/Equalizer\"","../../external \"@material-ui/icons/Folder\"","../../external \"clsx\"","../../external \"@material-ui/core/IconButton\"","../../external \"@material-ui/core\"","../../external \"@material-ui/core/colors/red\"","../../external \"@material-ui/core/colors/pink\"","../../external \"@material-ui/core/colors/purple\"","../../external \"@material-ui/core/colors/indigo\"","../../external \"@material-ui/core/colors/blue\"","../../external \"@material-ui/core/colors/cyan\"","../../external \"@material-ui/core/colors/teal\"","../../external \"@material-ui/core/colors/green\"","../../external \"@material-ui/core/colors/lime\"","../../external \"@material-ui/core/colors/brown\"","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../lib/components/Workflow/index.js","../lib/components/Workflow/WorkflowIcons.js","../lib/components/Workflow/constants.js","../lib/components/Workflow/WorkflowColors.js","../lib/components/Workflow/ColorStepIcon.js","../lib/components/Workflow/WorkflowItem.js","../lib/index.js","containers/DashboardPage/index.js","resources/PurchaseOrder/Create/template.csv","containers/DashboardPage/boards/ProfitChart/Chart.js","containers/DashboardPage/boards/ProfitChart/index.js","containers/DashboardPage/boards/ProfitNumSum/Deposits.js","containers/DashboardPage/boards/ProfitNumSum/index.js","containers/DashboardPage/boards/PurchasingForecast/Orders.js","containers/DashboardPage/boards/PurchasingForecast/index.js","containers/DashboardPage/boards/SalesOrderChart/Chart.js","containers/DashboardPage/boards/SalesOrderChart/index.js","containers/DashboardPage/boards/SalesOrderNumSum/Deposits.js","containers/DashboardPage/boards/SalesOrderNumSum/index.js","containers/DashboardPage/boards/SalesOrderRecent/Orders.js","containers/DashboardPage/boards/SalesOrderRecent/index.js","containers/DashboardPage/boards/PurchaseOrderRecent/Orders.js","containers/DashboardPage/boards/PurchaseOrderRecent/index.js","containers/DashboardPage/boards/DeliveryNoteWaiting/Orders.js","containers/DashboardPage/boards/DeliveryNoteWaiting/index.js"],"names":["Title","props","component","variant","color","gutterBottom","children","loadable","importFunc","fallback","LazyComponent","lazy","useStyles","makeStyles","theme","toolbar","paddingRight","spacing","backgroundColor","palette","primary","main","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginLeft","marginRight","menuButtonIconClosed","transform","menuButtonIconOpen","title","flex","textOverflow","whiteSpace","overflow","name","xeroStyle","MyAppBar","classesOverride","classes","className","logout","logo","open","rest","userMenu","translate","useTranslate","dispatch","useDispatch","isXSmall","useMediaQuery","breakpoints","down","useState","settingsMenu","setSettingsMenu","uMenu","setUserMenu","handleSettingsClose","event","HideOnScroll","Toolbar","disableGutters","IconButton","aria-label","onClick","toggleSidebar","classNames","root","Typography","to","style","aria-controls","aria-haspopup","currentTarget","id","anchorEl","keepMounted","Boolean","onClose","MenuItemLink","primaryText","leftIcon","LocationCity","Storefront","AccountCircle","localStorage","getItem","drawerPaper","marginTop","withRouter","location","history","useSelector","state","admin","ui","sidebarOpen","paths","pathname","split","isActive","type","length","pluralize","singular","handleClick","push","Supplier","active","PurchaseOrder","Shipping","Inventory","SalesOrder","Invoice","DeliveryNote","Customer","ReceivePayment","Report","breadcrumb","paddingLeft","paddingTop","paddingBottom","Breadcrumb","breadcrumbs","links","last","pop","linkStyle","textDecoration","hover","map","bc","key","url","label","display","flexDirection","zIndex","minHeight","background","default","position","minWidth","width","appFrame","up","contentWithSidebar","flexGrow","content","flexBasis","padding","Layout","dashboard","useEffect","setSidebarVisibility","ThemeProvider","Workflow","hasDashboard","Notification","GET_ITEM_LIST","gql","table","ItemListForm","labelFrom","onChange","useQuery","variables","where","warehouse","label_contains","loading","data","Loading","loadingPrimary","inventoryItems","Box","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","code","expiryDate","GET_WAREHOUSES","WarehouseAutocomplete","defaultValue","fetching","React","setOpen","options","setOptions","warehouses","obj","Autocomplete","onOpen","evt","value","find","getOptionLabel","option","renderInput","params","TextField","InputProps","endAdornment","Fragment","CircularProgress","size","card","margin","StepperConnector","withStyles","alternativeLabel","top","backgroundImage","completed","line","height","border","borderRadius","StepConnector","StockTransfer","warehouseId","setWarehouseId","mr","Card","Stepper","connector","Step","StepLabel","StepIconComponent","House","textAlign","Button","console","log","itemGroups","Object","values","reduce","results","item","brand","sku","expiryDay","price","unit","quantity","cur","parseInt","forEach","itemGroup","labelTo","BilingualField","source","record","handleExpectedSales","expectedSalesDate","expectedSales","monthlySalesOnAverage","dayjs","diff","Math","floor","toFixed","NumberField","setBreadcrumbs","payload","addBreadcrumbs","initialState","previousState","isArray","breadcrumbBase","staticContext","permissions","usePermissions","add","setExpectedSalesDate","useHistory","SearchFilter","Filter","TextInput","alwaysOn","StatusEditButton","EditButton","basePath","List","resource","hasCreate","hasEdit","hasShow","hasList","exporter","products","postsForExport","product","nameChi","stock","avg","incoming","incomingQuantity","nextShipment","jsonExport","headers","err","csv","downloadCSV","filters","Datagrid","ReferenceField","reference","link","sortable","FunctionField","render","MonthDiffField","ExpectedQuantityField","Grid","container","justify","alignItems","DatePicker","inputVariant","openTo","views","GET_PURCHASE_ORDER","PurchaseOrderAutocomplete","state_in","orderBy","purchaseOrders","po","fullWidth","alphaNumericIncrementer","str","invNum","replace","index","toUpperCase","substr","char","String","fromCharCode","charCodeAt","invoiceNumber","increment","Error","array","lastSegment","priorSegment","indexOf","nextNumber","Array","result","useStyle","autocomplete","poAutocomplete","Xero","XeroCallback","match","QUERY_ITEM","DELETE_DELIVERY_ITEM","TRANSFER","buildVariablesImpl","buildGqlQueryImpl","getResponseParserImpl","exact","path","MonthlyReportPage","QuarterReportPage","AnnualReportPage","productId","initialValues","purchaseOrder","cost","formData","setFormData","notify","useNotify","INWAREHOUSE","useMutation","inWarehouse","Product","useGetOne","error","SimpleForm","inventoryItemlist","currentLabel","connect","purchaseOrderId","sequentialNumber","x","then","catch","message","Save","redirect","alignContent","e","target","InputLabelProps","shrink","FormDataConsumer","setLabelFrom","Label","DeleteForever","deleteDeliveryItem","transfer","itemData","inventoryItem","handleSave","a","toWarehouseId","inventoryItemIds","fromWarehouseIds","go","direction","disabled","xs","name_not_in","getFinalType","kind","TypeKind","NON_NULL","LIST","ofType","isList","sanitizeValue","parseFloat","prepareParams","queryType","introspectionResults","keys","param","arg","args","File","types","inputFields","Number","castType","buildCreateVariables","aorFetchType","acc","includes","endsWith","isDate","toISOString","every","isString","isNumber","set","v","previousData","previousValue","slice","deleteMany","updateMany","pv","i","isObject","buildUpdateVariables","differences","changes","object","base","_","isEqual","isRequired","getArgType","required","gqlTypes","buildArgs","query","inputType","validVariables","filter","k","sanitizeResource","startsWith","dataKey","undefined","d","buildQueryFactory","preparedParams","GET_LIST","id_in","t","filter_acc","parts","resourceField","fields","f","skip","pagination","page","perPage","first","sort","field","order","buildGetListVariables","GET_MANY","ids","GET_MANY_REFERENCE","isPlural","GET_ONE","DELETE","CREATE","UPDATE","argName","typeName","getInputObjectForType","metaVariables","sortField","sortOrder","apolloArgs","buildApolloArgs","metaArgs","buildFields","OBJECT","INTERFACE","resources","r","linkedType","QUERY_TYPES","response","items","total","aggregate","count","knownResources","resourceName","join","parseResponse","defaultOptions","buildQuery","defaultBuildQuery","introspection","operationNames","camelCase","convertFileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","rawFile","onload","onerror","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","watchQuery","fetchPolicy","errorPolicy","apolloClient","getDataProvider","buildDataProvider","merge","defaultDataProvider","fetchType","DELETE_MANY","otherParams","all","UPDATE_MANY","provider","images","imagesIds","newPictures","p","formerPictures","base64Pictures","picture64","src","transformedNewPictures","GET_USER","authProvider","login","username","password","AND","loginUser","users","setItem","permission","toLowerCase","JSON","stringify","group","removeItem","checkAuth","checkError","status","getPermissions","role","WarehouseCreate","Create","validate","RadioButtonGroupInput","choices","WarehouseEdit","Edit","WarehouseList","rowClick","DeleteButton","WarehouseShow","ShowController","controllerProps","Show","SimpleShowLayout","SupplierCreate","email","multiline","SupplierEdit","SupplierShow","EmailField","DateField","SupplierList","ReceivePaymentCreate","ReferenceInput","SelectInput","optionText","DateInput","ReceivePaymentShow","ReceivePaymentList","text","hint","ShowText","InvoiceSelector","formProps","renderInvoiceDetails","invoiceId","sm","ReferenceFieldController","referenceRecord","salesOrderId","renderCustomerInput","customerId","input","handleChange","FormControl","InputLabel","Select","MenuItem","currency","ReferenceArrayField","addLabel","renderSalesOrderDetails","filterToQuery","searchText","code_contains","subscription","GET_ITEMS","InventoryItemAutocomplete","setLabel","productId_in","name_not","autoSelect","autoComplete","autoHighlight","onInputChange","getOptionSelected","GET_PRODUCT_ID","GET_ITEM","ProductAutocomplete","productIds","setCode","onCompleted","productData","useLazyQuery","itemId","GET_INVOICE","ChipsArrayField","onDelete","Chip","productCode","productNameEn","nameEn","productNameChi","boxNum","handleDeleteChange","invoice","salesOrder","other","selected","selectedNum","placeholder","currentSort","BoxSelectField","maxBox","labelId","range","setMaxBox","Review","format","layout","paper","marginBottom","stepper","SaveWithNoteButton","useCreate","redirectTo","useRedirect","formState","useFormState","res","useCallback","others","onSuccess","newRecord","smart_count","onFailure","SaveButton","handleSubmitWithRedirect","activeStep","setActiveStep","steps","handleNext","handleBack","FormWithRedirect","justifyContent","capitalizeFirstLetter","splitStr","charAt","substring","SCGenerator","dataArray","now","translator","T2W","doc","jsPDF","internal","pageSize","getWidth","getHeight","beforePageContent","getNumberOfPages","toString","putTotalPages","setFontSize","setFontStyle","shop","deliverAddress","customer","phone","shippingDate","setLineWidth","setDrawColor","afterPageContent","columnStyles","columnWidth","no","des","qty","amount","halign","headStyles","fillColor","textColor","cellWidth","bottom","horizontal","b","totalPrice","autoTable","header","previous","finalY","subtotal","discountAmount","grandTotal","toWords","strings","save","DNGenerator","deliveryNote","shipmentDate","exDate","groupedItems","lodash","groupBy","itemA","itemB","abs","GET_DN","toEditItem","toDeleteItem","isPaid","Print","actions","referece","Add","ReferenceManyField","GET_CUSTOMER","CustomerAutocomplete","initialValue","customers","setValue","o","DeliveryNoteEdit","StatusButton","loaded","DeliveryNoteList","UPDATEDELIVERY","DeliveryItemEdit","updateDeliveryNote","useLocation","selectedProduct","setSelectedProduct","EditSaveButton","update","DeliveryEditItemToolbar","submitOnEnter","OptionRenderer","choice","handleOnChange","AutocompleteInput","inputText","matchSuggestion","filterValue","suggestion","tempProduct","renderLable","CREATE_DELIVERY_ITEM","SaveItemButton","createDeliveryItem","valid","DeliveryItemCreateToolbar","DeliveryItemCreate","NumberInput","GET_SALES_ORDER","SalesOrderAutocomplete","salesOrders","SalesOrderSelector","salesOrderCode","contactPerson","customerShop","scope","colSpan","BasicForm","minDate","defaultDay","week","deliveryDay","Date","getHours","setDate","getDate","matchCaseWeek","day","nextWeekDay","noValidate","newDate","buttons","button","GET_LAST_INVOICE","ADD_INVOICE","addInvoice","lastInvoice","invoices","paymentStatus","INVGenerator","setFillColor","rect","InvoiceShow","InvoiceEdit","InvoiceList","filterDefaultValues","state_not","ProductListHeader","onSort","setOrderBy","desc","setDesc","createOrderBy","TableSortLabel","useStyles1","flexShrink","TablePaginationActions","useTheme","rowsPerPage","onChangePage","ceil","max","ProductListPagination","totalRows","setPage","setRowsPerPage","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","ActionsComponent","GET_PRODUCT_CATEGORIES","iconButton","divider","chips","flexWrap","ProductListToolbar","setWhere","search","setSearch","selectedCategories","setSelectedCategories","timeConstraint","setTimeConstraint","categories","productCategories","code_starts_with","w","Divider","orientation","onSubmit","preventDefault","InputBase","Search","tc","splice","categoryId","c","ProductSelectModal","onCancel","openProp","wholeSalePriceList","wholeSalePrice1","wholeSalePrice2","wholeSalePrice3","wholeSalePrice4","wholeSalePrice5","discount","percent","productWholeSalesPriceList","minOrderQuantity","wholesalePlan","selectBtn","setSelectBtn","handleClose","handleWholeSalePrice","Dialog","aria-labelledby","DialogTitle","DialogContent","helperText","ButtonGroup","DialogActions","GET_PRODUCTS","visuallyHidden","clip","image","img","maxWidth","maxHeight","ProductSelector","onSelected","rows","productsConnection","edges","node","emptyRows","min","selectedIds","s","handleSelected","Remove","customerShops","setCustomerShops","shops","newValue","fontWeight","expectedDeliveryAt","subTotal","ADD_SALES_ORDER","GET_LAST_SALES_ORDER","GET_FIRST_CUSTOMER","addPO","loadingPO","lastPO","loadingCustomer","firstCustomer","Badge","float","badgeContent","ShoppingCart","currentIds","shopId","GET_SC","SalesOrderShow","MySaveButton","useUpdate","edit","formValues","undoable","MyToolbar","SalesOrderEdit","StatusDeleteButton","SalesOrderList","GET_SUPPLIER","SupplierAutocomplete","suppliers","creditLine","PO_FREEZE_STATE","supplier","toDate","GET_SUPPLIER_PO","end","start","createdAt_gt","createdAt_lt","supplierId","supplierPO","supplierLine","supplierCreditLine","canCredit","TableContainer","ProductImport","importSuccess","arr","shift","backendData","onFileLoaded","href","csvTemplate","ADD_PURCHASE_ORDER","GET_LAST_PURCHASE_ORDER","GET_FIRST_SUPPLIER","isNextBtnDisable","loadingSupplier","firstSupplier","PurchaseOrderShow","setState","onFetchState","PurchaseOrderEdit","PurchaseOrderList","PurchaseOrderSelector","exactQuantity","renderPurchaseOrderDetails","useRowStyles","borderBottom","onRowClick","onRemoveChecked","checked","totalExactQuantity","sum","KeyboardArrowUp","KeyboardArrowDown","Collapse","in","timeout","unmountOnExit","detail","filterItemId","records","QuantityCheckRow","QuantityCheckTable","uniqueLabelCheck","dataBool","QUERY_SHIPPING_LABEL","defaultLabel","setDefaultLabel","labelList","setLabelList","shippingItems","form","checking","setTimeout","reset","handleSubmit","submitting","pristine","handleRowClick","change","handleRemoveChecked","QuantityCheck","setCheckSuccess","QuantityCheckForm","ADD_SHIPPING","addShipping","checkedProducts","handleClickOpen","aria-describedby","DialogContentText","autoFocus","checkQuantity","deliveryAt","expectedQuantity","ShippingShow","ShippingEdit","ShippingList","ProductShow","SingleFieldList","ChipField","ProductCreate","ImageInput","accept","multiple","ImageField","ProductEdit","ReferenceArrayInput","SelectArrayInput","ProductList","CustomerCreate","CustomerEdit","CustomerShow","state_not_in","CustomerList","UserCreate","parse","PasswordInput","UserEdit","UserShow","UserList","permission_not","UserGroupCreate","UserGroupEdit","UserGroupShow","UserGroupList","CustomerGroupCreate","CustomerGroupEdit","CustomerGroupShow","CustomerGroupList","optionRenderer","CustomerShopCreate","CheckboxGroupInput","CustomerShopEdit","CustomerShopShow","dayNum","getWeekDay","CustomerShopList","ProductCategoryCreate","ProductCategoryEdit","ProductCategoryShow","ProductCategoryList","softwareName","menu","home","replenish","sale","settings","reports","shipment","inventory","customerGroup","user","userGroup","productCategory","salesShipping","receivePayment","monthly","quarterly","annual","warehousing","labelling","shipping","packing","stockCheck","stockTransfer","stockDispose","noNeedThisProduct","delivery","wholeSalePrice","expiredIn6Months","selectProducts","createPurchaseOrder","editPurchaseOrder","drafts","waitingShipment","basicInfo","productName","review","purchaseOrderDetails","createSalesOrder","editSalesOrder","salesOrderDetails","productList","shippingDelivery","needToUpdatePO","clickHere","unlabelledItem","selectPurchaseOrder","quantityCheck","selectWarehouse","allTheFollowing","changeAll","changeThisOnly","newOrders","selectSalesOrder","shippingDetails","invoiceDetails","trash","productItem","countryOfOrigin","listView","heatMapView","selectInvoice","quantityNeed","packingBox","deliveryDate","labelNo","salesSummary","mobile","tel","shippingAddress","billingAddress","readMore","common","addNew","list","approved","new","date","draft","confirm","confirmed","deleted","cancel","assign","from","next","prev","information","pending","sent","acked","shipped","arrived","received","packed","delivered","paid","print","salesman","delete","pageNotFound","i18nProvider","polyglotI18nProvider","locale","englishMessages","en","messages","chineseTraditionalMessages","PurchaseOrderItemCreateToolbar","PurchaseOrderItemCreate","initialsValue","PurchaseOrderItemEdit","ShippingItemEdit","SalesOrderItemCreateToolbar","SalesOrderItemCreate","customerPlan","setSelectProduct","renderBtnGroup","UPDATE_SALES_ORDER_ITEM","SaveEditButton","subPrice","SalesOrderItemEditToolBar","SalesOrderItemEdit","createMuiTheme","sidebar","closedWidth","createHistory","App","dataProvider","setDataProvider","dp","utils","DayjsUtils","Admin","DashboardPage","catchAll","NotFoundPage","customRoutes","routes","customReducers","breadcrumbReducer","Resource","show","DeliveryNoteCreate","DeliveryNoteShow","InvoiceCreate","SalesOrderCreate","PurchaseOrderCreate","ShippingCreate","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","installedModules","__webpack_require__","moduleId","exports","module","l","modules","call","m","getter","defineProperty","enumerable","get","Symbol","toStringTag","mode","__esModule","ns","bind","n","property","prototype","hasOwnProperty","require","_objectWithoutProperties","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Connector","vertical","instructions","padLeft","adjustHeight","minimize","childrenWithProps","Children","cloneElement","child","iconOnly","nonLinear","defaultProps","AddShoppingCart","Flight","InsertDriveFile","LocalShipping","Money","Equalizer","FLOW","WORKFLOW","SUPPLIER","PURCHASE_ORDER","SHIPPING","INVENTORY","SALES_ORDER","INVOICE","DELIVERY_NOTE","CUSTOMER","RECEIVE_PAYMENT","REPORT","full","purchase","sales","locations","WorkflowType","PURCHASE","SALES","FULL","allColors","red","pink","purple","indigo","blue","cyan","teal","green","lime","brown","flowItem","useColorStepIconStyles","icon","bigButton","smallButton","bigIcon","fontSize","smallIcon","borderWidth","borderStyle","borderColor","black","colors","WorkflowColors","ColorStepIcon","icons","WorkflowIcons","clsx","WorkflowItem","Folder","snakeCase","StepIconProps","ResponsiveReactGridLayout","WidthProvider","Responsive","originalLayouts","ls","global","getFromLS","layouts","setLayouts","dashboards","data-grid","h","y","minW","minH","renderProfitChart","renderProfitNumSum","renderPurchasingForecast","renderSalesOrderChart","renderSalesOrderNumSum","renderSalesOrderRecent","renderPurchaseOrderRecent","renderDeliveryNoteWaiting","cols","lg","md","xxs","rowHeight","onLayoutChange","createData","time","Chart","right","left","stroke","secondary","angle","textAnchor","fill","dot","ProfitChart","depositContext","Deposits","Link","ProfitNumSum","shipTo","paymentMethod","seeMore","Orders","PurchasingForecast","SalesOrderChart","SalesOrderNumSum","SalesOrderRecent","PurchaseOrderRecent","DeliveryNoteWaiting"],"mappings":"8HAAA,8DAIe,SAASA,EAAMC,GAC5B,OACE,kBAAC,IAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUC,cAAY,GACjEJ,EAAMK,Y,iMCKEC,EAVE,SAACC,GAA0D,IAAD,yDAAvB,CAAEC,SAAU,MAAW,IAA3CA,gBAA2C,MAAhC,KAAgC,EACnEC,EAAgBC,eAAKH,GAE3B,OAAO,SAAAP,GAAK,OACV,kBAAC,WAAD,CAAUQ,SAAUA,GAClB,kBAACC,EAAkBT,MCDVM,KAAS,kBAAM,kC,0YCyBxBK,GAAYC,aAChB,SAACC,GAAD,MAAY,CACVC,QAAS,CACPC,aAAcF,EAAMG,QAAQ,GAC5BC,gBAAiBJ,EAAMK,QAAQC,QAAQC,KACvCC,WAAYR,EAAMS,YAAYC,OAAO,CAAC,oBAAqB,CACzDC,OAAQX,EAAMS,YAAYE,OAAOC,MACjCC,SAAUb,EAAMS,YAAYI,SAASC,iBAGzCC,WAAY,CACVC,WAAY,QACZC,YAAa,SAEfC,qBAAsB,CACpBV,WAAYR,EAAMS,YAAYC,OAAO,CAAC,aAAc,CAClDC,OAAQX,EAAMS,YAAYE,OAAOC,MACjCC,SAAUb,EAAMS,YAAYI,SAASC,gBAEvCK,UAAW,gBAEbC,mBAAoB,CAClBZ,WAAYR,EAAMS,YAAYC,OAAO,CAAC,aAAc,CAClDC,OAAQX,EAAMS,YAAYE,OAAOC,MACjCC,SAAUb,EAAMS,YAAYI,SAASC,gBAEvCK,UAAW,kBAEbE,MAAO,CACLC,KAAM,EACNC,aAAc,WACdC,WAAY,SACZC,SAAU,aAGd,CAAEC,KAAM,aAGJC,GAAY,CAChBrC,MAAO,SAiKMsC,GA9JE,SAAC,GAUZ,EATJpC,SASK,IARIqC,EAQL,EARJC,QACAC,EAOI,EAPJA,UAEAC,GAKI,EANJC,KAMI,EALJD,QACAE,EAII,EAJJA,KAGGC,GACC,EAHJd,MAGI,EAFJe,SAEI,6FACEC,EAAYC,cACZC,EAAWC,cACXV,EAAUhC,GAAU,CAAEgC,QAASD,IAC/BY,EAAWC,aAAc,SAAC1C,GAAD,OAAWA,EAAM2C,YAAYC,KAAK,SAJ7D,EAKoCC,mBAAS,MAL7C,mBAKGC,EALH,KAKiBC,EALjB,OAMyBF,mBAAS,MANlC,mBAMGG,EANH,KAMUC,EANV,KAWEC,EAAsB,SAACC,GAC3BJ,EAAgB,OASlB,OACE,kBAACK,EAAA,EAAD,KACE,kBAAC,IAAD,eAAWrB,UAAWA,EAAWzC,MAAM,WAAc6C,GACnD,kBAACkB,EAAA,EAAD,CACEC,gBAAc,EACdjE,QAASoD,EAAW,UAAY,QAChCV,UAAWD,EAAQ7B,SAEnB,kBAACsD,EAAA,EAAD,CACEjE,MAAM,UACNkE,aAAW,cACXC,QAAS,kBAAMlB,EAASmB,gBACxB3B,UAAW4B,IAAW7B,EAAQf,aAE9B,kBAAC,KAAD,CACEe,QAAS,CACP8B,KAAM1B,EACFJ,EAAQV,mBACRU,EAAQZ,yBAIlB,kBAAC2C,EAAA,EAAD,CAAYxE,QAAQ,KAAK0C,UAAWD,EAAQT,OACzCgB,EAAU,iBAEb,kBAAC,KAAD,CAAMyB,GAAG,QAAQC,MAAOpC,IACtB,kBAAC4B,EAAA,EAAD,CAAYjE,MAAM,WAChB,kBAAC,IAAD,QAGJ,kBAACiE,EAAA,EAAD,CACEC,aAAW,WACXQ,gBAAc,YACdC,gBAAc,OACd3E,MAAM,UACNmE,QAhDkB,SAACN,GAC3BJ,EAAgBI,EAAMe,iBAiDd,kBAAC,IAAD,OAEF,kBAAC,IAAD,CACEC,GAAG,cACHC,SAAUtB,EACVuB,aAAW,EACXnC,KAAMoC,QAAQxB,GACdyB,QAASrB,GAET,kBAACsB,EAAA,EAAD,CACEV,GAAG,WACHW,YAAapC,EAAU,qBACvBqC,SAAU,kBAAC,IAAD,MACVjB,QAASP,IAEX,kBAACsB,EAAA,EAAD,CACEV,GAAG,YACHW,YAAapC,EAAU,sBACvBqC,SAAU,kBAACC,GAAA,EAAD,MACVlB,QAASP,IAEX,kBAACsB,EAAA,EAAD,CACEV,GAAG,YACHW,YAAapC,EAAU,sBACvBqC,SAAU,kBAACE,GAAA,EAAD,MACVnB,QAASP,IAEX,kBAACsB,EAAA,EAAD,CACEV,GAAG,aACHW,YAAapC,EAAU,uBACvBqC,SAAU,kBAAC,IAAD,MACVjB,QAASP,IAEX,kBAACsB,EAAA,EAAD,CACEV,GAAG,mBACHW,YAAapC,EAAU,6BACvBqC,SAAU,kBAAC,IAAD,MACVjB,QAASP,IAEX,kBAACsB,EAAA,EAAD,CACEV,GAAG,iBACHW,YAAapC,EAAU,2BACvBqC,SAAU,kBAAC,IAAD,MACVjB,QAASP,IAEX,kBAACsB,EAAA,EAAD,CACEV,GAAG,gBACHW,YAAapC,EAAU,0BACvBqC,SAAU,kBAAC,KAAD,MACVjB,QAASP,IAEX,kBAACsB,EAAA,EAAD,CACEV,GAAG,QACHW,YAAapC,EAAU,kBACvBqC,SAAU,kBAAC,IAAD,MACVjB,QAASP,IAEX,kBAACsB,EAAA,EAAD,CACEV,GAAG,aACHW,YAAapC,EAAU,uBACvBqC,SAAU,kBAAC,KAAD,MACVjB,QAASP,KAGb,kBAACK,EAAA,EAAD,CACEC,aAAW,cACXQ,gBAAc,YACdC,gBAAc,OACd3E,MAAM,UACNmE,QAjHc,SAACN,GACvBF,EAAYE,EAAMe,iBAkHV,kBAACW,GAAA,EAAD,MAPF,OASE,kBAAChB,EAAA,EAAD,KAAaiB,aAAaC,QAAQ,WAEpC,kBAAC,IAAD,CACEZ,GAAG,YACHC,SAAUpB,EACVqB,aAAW,EACXnC,KAAMoC,QAAQtB,GACduB,QAzHc,SAACpB,GACvBF,EAAY,QA0HHjB,O,WC3NKjC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,YAAa,CACXC,UAAW,EACXzE,WAAYR,EAAMS,YAAYC,OAAO,SAAU,CAC7CC,OAAQX,EAAMS,YAAYE,OAAOC,MACjCC,SAAUb,EAAMS,YAAYI,SAASC,qB,OCuB5BoE,iBAzBF,SAAC,GAGO,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,QAERlD,EAAOmD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,GAAGC,eAC3CC,EAAQP,EAASQ,SAASC,MAAM,KAChCC,EAAW,SAACC,GAAD,OAAUJ,EAAMK,OAAS,GAAKC,IAAUC,SAASP,EAAM,MAAQI,GAC1EI,EAAc,SAACJ,GAAD,OAAU,kBAAMV,EAAQe,KAAR,WAAiBL,MACrD,OAAK5D,EAEH,kBAAC,WAAD,CAAUA,MAAI,GACZ,kBAAC,eAAakE,SAAd,CAAuB3C,QAASyC,EAAY,YAAaG,OAAQR,EAAS,cAC1E,kBAAC,eAAaS,cAAd,CAA4B7C,QAASyC,EAAY,iBAAkBG,OAAQR,EAAS,mBACpF,kBAAC,eAAaU,SAAd,CAAuB9C,QAASyC,EAAY,YAAaG,OAAQR,EAAS,cAC1E,kBAAC,eAAaW,UAAd,CAAwB/C,QAASyC,EAAY,aAAcG,OAAQR,EAAS,eAC5E,kBAAC,eAAaY,WAAd,CAAyBhD,QAASyC,EAAY,cAAeG,OAAQR,EAAS,gBAC9E,kBAAC,eAAaa,QAAd,CAAsBjD,QAASyC,EAAY,WAAYG,OAAQR,EAAS,aACxE,kBAAC,eAAac,aAAd,CAA2BlD,QAASyC,EAAY,gBAAiBG,OAAQR,EAAS,kBAClF,kBAAC,eAAae,SAAd,CAAuBnD,QAASyC,EAAY,YAAaG,OAAQR,EAAS,cAC1E,kBAAC,eAAagB,eAAd,CAA6BpD,QAASyC,EAAY,kBAAmBG,OAAQR,EAAS,oBACtF,kBAAC,eAAaiB,OAAd,CAAqBrD,QAASyC,EAAY,UAAWG,OAAQR,EAAS,aAZxD,Q,wCCRd/F,GAAYC,MAAW,SAAAC,GAAK,MAAK,CACrC+G,WAAY,CACVC,YAAahH,EAAMG,QAAQ,GAC3BD,aAAcF,EAAMG,QAAQ,GAC5B8G,WAAYjH,EAAMG,QAAQ,GAC1B+G,cAAelH,EAAMG,QAAQ,QAiClBgH,GA7BI,WACjB,IAAMC,EAAc/B,aAAY,SAAAC,GAAK,OAAIA,EAAMyB,cACzCjF,EAAUhC,KAEVuH,EAAK,aAAOD,GACdE,EAAOD,EAAME,MAEXC,EAAY,CAChBC,eAAgB,OAChBnI,MAAO,OACPoI,MAAO,CACLD,eAAgB,cAIpB,OACE,kBAAC,KAAD,CAAgBjE,aAAW,aAAazB,UAAWD,EAAQiF,YACxDM,EAAMM,KAAI,SAAAC,GAAE,OACX,kBAAC,KAAD,CAAMC,IAAG,gBAAWD,EAAGE,KAAOhE,GAAI8D,EAAGE,IAAK/D,MAAOyD,GAC9CI,EAAGG,UAGPT,GACC,kBAACzD,EAAA,EAAD,CAAYvE,MAAM,eAAegI,EAAKS,SC1BxCjI,GAAYC,aAAW,SAAAC,GAAK,YAAK,CACrC4D,KAAM,CACJoE,QAAS,OACTC,cAAe,SACfC,OAAQ,EACRC,UAAW,QACX/H,gBAAiBJ,EAAMK,QAAQ+H,WAAWC,QAC1CC,SAAU,WACVC,SAAU,cACVC,MAAO,QAETC,UAAQ,GACNT,QAAS,OACTC,cAAe,UAFT,cAGLjI,EAAM2C,YAAY+F,GAAG,MAAQ,CAC5BzD,UAAWjF,EAAMG,QAAQ,KAJrB,cAMLH,EAAM2C,YAAYC,KAAK,MAAQ,CAC9BqC,UAAWjF,EAAMG,QAAQ,KAPrB,GAURwI,mBAAoB,CAClBX,QAAS,OACTC,cAAe,SACfW,SAAU,GAEZC,QAAQ,aACNb,QAAS,OACTC,cAAe,SACfW,SAAU,EACVE,UAAW,EACXC,QAAS/I,EAAMG,QAAQ,GACvB8G,WAAYjH,EAAMG,QAAQ,IACzBH,EAAM2C,YAAYC,KAAK,MAAQ,CAC9BmG,QAAS,QAmEAC,GA9DA,SAAC,GAMT,IALLxJ,EAKI,EALJA,SACAyJ,EAII,EAJJA,UACAjH,EAGI,EAHJA,OAEAhC,GACI,EAFJqB,MAEI,EADJrB,OAEM8B,EAAUhC,KACVyC,EAAWC,cACXN,EAAOmD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,GAAGC,eAyBjD,OAJAyD,qBAAU,WACR3G,EAAS4G,aAAqB,MAC7B,CAAC5G,IAGF,kBAAC6G,EAAA,EAAD,CAAepJ,MAAOA,GACpB,yBAAK+B,UAAWD,EAAQ8B,MACtB,yBAAK7B,UAAWD,EAAQ2G,UACtB,kBAAC,GAAD,CAAQvG,KAAMA,EAAMF,OAAQA,IAC5B,0BAAMD,UAAWD,EAAQ6G,oBACvB,kBAACU,GAAD,CAAUrH,OAAQA,EAAQsH,eAAgBL,IAC1C,kBAAC,GAAD,MACA,yBAAKlH,UAAWD,EAAQ+G,SACrBrJ,IAGL,kBAAC+J,EAAA,EAAD,UC1FK9J,MAAS,kBAAM,wDCAfA,MAAS,kBAAM,kCCAfA,MAAS,kBAAM,kC,gdCK9B,IAAM+J,GAAgBC,KAAH,MAoBb3J,GAAYC,KAAW,CAC3B2J,MAAO,CACLnB,SAAU,OAIC,SAASoB,GAAT,GAAoD,IAA5BxF,EAA2B,EAA3BA,GAC/BrC,GAD0D,EAAvB8H,UAAuB,EAAZC,SACpC/J,MACVuC,EAAYC,cAF8C,EAGtCwH,aAASN,GAAe,CAAEO,UAAW,CAAEC,MAAO,CAAEC,UAAW,CAAE9F,MAAM+F,eAAgB,OAArGC,EAHwD,EAGxDA,QAASC,EAH+C,EAG/CA,KAEjB,GAAID,EAAS,OAAO,kBAACE,EAAA,EAAD,CAASC,eAAe,sBALoB,IAOxDC,EAAmBH,EAAnBG,eAER,OACE,kBAACC,GAAA,EAAD,CAAKpL,UAAWqL,MACd,kBAACC,GAAA,EAAD,CAAO3I,UAAWD,EAAQ4H,MAAOlG,aAAW,gBAC1C,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAYxI,EAAU,kBACtB,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,8BACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,8BACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,yBAGxC,kBAAC0I,GAAA,EAAD,KACGR,EAAe5C,KAAI,SAAAqD,GAAG,OACrB,kBAACJ,GAAA,EAAD,CAAU/C,IAAKmD,EAAIC,MACjB,kBAACJ,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAIjD,OAC9B,kBAAC8C,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAIC,MAC9B,kBAACJ,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAItJ,MAC9B,kBAACmJ,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAIE,mB,2UCzD5C,IAAMC,GAAiB1B,KAAH,MAUL,SAAS2B,GAAT,GAA8G,IAA7EvB,EAA4E,EAA5EA,SAAUwB,EAAkE,EAAlEA,aAActJ,EAAoD,EAApDA,UAAoD,IAAzCiI,aAAyC,MAAjC,CAAEA,MAAO,CAAElE,KAAM,WAAgB,EACpHzD,EAAYC,cADwG,EAEtFwH,aAASqB,GAAgB,CAC3DpB,UAAWC,IADIsB,EAFyG,EAElHnB,QAAmBC,EAF+F,EAE/FA,KAF+F,EAKlGmB,IAAM1I,UAAS,GALmF,mBAKnHX,EALmH,KAK7GsJ,EAL6G,OAM5FD,IAAM1I,SAAS,IAN6E,mBAMnH4I,EANmH,KAM1GC,EAN0G,KAOpHvB,EAAUmB,GAAapJ,GAA2B,IAAnBuJ,EAAQ1F,OAE7CwF,IAAMrC,WAAU,WACd,GAAKiB,GAIDC,EAAM,CAAC,IACDuB,EAAevB,EAAfuB,WACRD,EAAWC,EAAWhE,KAAI,SAACiE,GAAD,MAAU,CAAEzH,GAAIyH,EAAIzH,GAAIzC,KAAMkK,EAAIlK,aAE7D,CAACyI,EAASC,IAEbmB,IAAMrC,WAAU,WACThH,GACHwJ,EAAW,MAEZ,CAACxJ,IAOJ,OACE,kBAAC2J,GAAA,EAAD,CACE9J,UAAWA,EACXG,KAAMA,EACN4J,OAAQ,WACNN,GAAQ,IAEVjH,QAAS,WACPiH,GAAQ,IAEV3B,SAfiB,SAACkC,EAAKC,GAAW,IAC5BL,EAAevB,EAAfuB,WACR9B,EAAS8B,EAAWM,MAAK,SAAChC,GAAD,OAAeA,EAAU9F,KAAO6H,EAAM7H,QAc7D+H,eAAgB,SAACC,GAAD,OAAYA,EAAOzK,MACnC+J,QAASA,EACTtB,QAASA,EACT6B,MAAOX,GAAgB,CAAElH,GAAIkH,EAAalH,GAAIzC,KAAM2J,EAAa3J,MACjE0K,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEtE,MAAO1F,EAAU,qBACjBhD,QAAQ,SACRkN,WAAU,gBACLF,EAAOE,WADF,CAERC,aACE,kBAAC,IAAMC,SAAP,KACGtC,EAAU,kBAACuC,GAAA,EAAD,CAAkBpN,MAAM,UAAUqN,KAAM,KAAS,KAC3DN,EAAOE,WAAWC,sBC1DnC,IAAM1M,GAAYC,MAAW,SAAAC,GAAK,MAAK,CACrC4M,KAAM,CACJC,OAAQ7M,EAAMG,QAAQ,GACtB4I,QAAS/I,EAAMG,QAAQ,QAIrB2M,GAAmBC,KAAW,CAClCC,iBAAkB,CAChBC,IAAK,IAEP5G,OAAQ,CACN,UAAW,CACT6G,gBACE,uFAGNC,UAAW,CACT,UAAW,CACTD,gBACE,uFAGNE,KAAM,CACJC,OAAQ,EACRC,OAAQ,EACRlN,gBAAiB,UACjBmN,aAAc,IApBOR,CAsBtBS,MAEY,SAASC,KACtB,IAAMpL,EAAYC,cACZR,EAAUhC,KAFsB,EAGA+C,qBAHA,mBAG/B6K,EAH+B,KAGlBC,EAHkB,KAMtC,OACE,kBAAC,IAAMlB,SAAP,KACE,kBAACjC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAAC/J,EAAA,EAAD,CAAYxE,QAAQ,MAAMgD,EAAU,4BACpC,kBAACwL,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAACkB,GAAA,EAAD,CAASd,kBAAgB,EAACe,UAAW,kBAACjB,GAAD,OACnC,kBAACkB,GAAA,EAAD,CAAMnG,IAAKxF,EAAU,wBACnB,kBAAC4L,GAAA,EAAD,CAAWC,kBAAmBC,KAAQ9L,EAAU,uBAAhD,IAAyEA,EAAU,mBAM7F,kBAACwL,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAACpC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAACxC,GAAD,CAAuBvB,SAAU8D,EAAgB5F,MAAO1F,EAAU,uBAAyB,IAAMA,EAAU,kBAE7G,kBAACmI,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAACxC,GAAD,CAAuBvB,SAAU8D,EAAgB5F,MAAO1F,EAAU,uBAAyB,IAAMA,EAAU,kBAIhHqL,GACC,kBAAC,IAAMjB,SAAP,KACE,kBAACjC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAACC,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAAC/I,EAAA,EAAD,CAAYxE,QAAQ,MAAMgD,EAAU,0BACpC,kBAACsH,GAAD,CAAcxF,GAAIuJ,OAIxB,kBAACG,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAACpC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,QAAQ7J,MAAO,CAAEqK,UAAW,UAC3C,kBAACC,GAAA,EAAD,CAAQ/O,MAAM,UAAUD,QAAQ,YAAYoE,QAtCvC,kBAAM6K,QAAQC,MAsC+ClM,EAAU,yB,+VC5E5F,IAAMmH,GAAgBC,KAAH,MAoBb3J,GAAYC,KAAW,CAC3B2J,MAAO,CACLnB,SAAU,OAIC,SAASoB,GAAT,GAAoD,IAA5BxF,EAA2B,EAA3BA,GAAIyF,EAAuB,EAAvBA,UACnC9H,GAD0D,EAAZ+H,SACpC/J,MACVuC,EAAYC,cAF8C,EAGtCwH,aAASN,GAAe,CAAEO,UAAW,CAAEC,MAAO,CAAEC,UAAW,CAAE9F,MAAM+F,eAAgB,OAArGC,EAHwD,EAGxDA,QAASC,EAH+C,EAG/CA,KAEjB,GAAID,EAAS,OAAO,kBAACE,EAAA,EAAD,CAASC,eAAe,sBALoB,IAOxDC,EAAmBH,EAAnBG,eACFiE,EAAaC,OAAOC,OAAOnE,EAAeoE,QAAO,SAACC,EAASC,GAAU,IACjEnN,EAA6CmN,EAA7CnN,KAAMoN,EAAuCD,EAAvCC,MAAOC,EAAgCF,EAAhCE,IAAKC,EAA2BH,EAA3BG,UAAWC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,KAG5C,OAFKN,EAAQG,KAAMH,EAAQG,GAAO,CAAErN,OAAMoN,QAAOC,MAAKC,YAAWC,QAAOC,OAAMC,SAAU,IACxFP,EAAQG,GAAKI,WACNP,IACN,KAECQ,EAAMC,SAASzF,EAAW,IAW9B,OAVA4E,EAAWc,SAAQ,SAAAC,GACjBA,EAAU3F,UAAYwF,EACtBG,EAAUC,QAAUJ,EAAMG,EAAUJ,SACpCC,EAAMA,EAAMG,EAAUJ,SAAW,KAQjC,kBAAC3E,GAAA,EAAD,CAAKpL,UAAWqL,MACd,kBAACC,GAAA,EAAD,CAAO3I,UAAWD,EAAQ4H,MAAOlG,aAAW,gBAC1C,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAYxI,EAAU,8BACtB,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,8BACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,uBACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,qBACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,uBACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,uBAGxC,kBAAC0I,GAAA,EAAD,KACGyD,EAAW7G,KAAI,SAAAqD,GAAG,OACjB,kBAACJ,GAAA,EAAD,CAAU/C,IAAKmD,EAAIC,MACjB,kBAACJ,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAIC,MAC9B,kBAACJ,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAItJ,MAC9B,kBAACmJ,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAIE,YAC9B,kBAACL,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAImE,UAC9B,kBAACtE,GAAA,EAAD,CAAWC,MAAM,SAAQ,kBAACwB,GAAA,EAAD,CAAWvE,MAAM,SAAS1I,QAAQ,SAASgM,aAAcL,EAAIpB,aACtF,kBAACiB,GAAA,EAAD,CAAWC,MAAM,SAAQ,kBAACwB,GAAA,EAAD,CAAWvE,MAAM,SAAS1I,QAAQ,SAASgM,aAAcL,EAAIwE,kB,yBCtE9F1P,GAAYC,MAAW,SAAAC,GAAK,MAAK,CACrC4M,KAAM,CACJC,OAAQ7M,EAAMG,QAAQ,GACtB4I,QAAS/I,EAAMG,QAAQ,QAIrB2M,GAAmBC,KAAW,CAClCC,iBAAkB,CAChBC,IAAK,IAEP5G,OAAQ,CACN,UAAW,CACT6G,gBACE,uFAGNC,UAAW,CACT,UAAW,CACTD,gBACE,uFAGNE,KAAM,CACJC,OAAQ,EACRC,OAAQ,EACRlN,gBAAiB,UACjBmN,aAAc,IApBOR,CAsBtBS,M,+VChCH,IAAMhE,GAAgBC,KAAH,MAoBb3J,GAAYC,KAAW,CAC3B2J,MAAO,CACLnB,SAAU,OAIC,SAASoB,GAAT,GAAoD,IAA5BxF,EAA2B,EAA3BA,GAAIyF,EAAuB,EAAvBA,UACnC9H,GAD0D,EAAZ+H,SACpC/J,MACVuC,EAAYC,cAF8C,EAGtCwH,aAASN,GAAe,CAAEO,UAAW,CAAEC,MAAO,CAAEC,UAAW,CAAE9F,MAAM+F,eAAgB,OAArGC,EAHwD,EAGxDA,QAASC,EAH+C,EAG/CA,KAEjB,GAAID,EAAS,OAAO,kBAACE,EAAA,EAAD,CAASC,eAAe,sBALoB,IAOxDC,EAAmBH,EAAnBG,eACFiE,EAAaC,OAAOC,OAAOnE,EAAeoE,QAAO,SAACC,EAASC,GAAU,IACjEnN,EAA6CmN,EAA7CnN,KAAMoN,EAAuCD,EAAvCC,MAAOC,EAAgCF,EAAhCE,IAAKC,EAA2BH,EAA3BG,UAAWC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,KAG5C,OAFKN,EAAQG,KAAMH,EAAQG,GAAO,CAAErN,OAAMoN,QAAOC,MAAKC,YAAWC,QAAOC,OAAMC,SAAU,IACxFP,EAAQG,GAAKI,WACNP,IACN,KAECQ,EAAMC,SAASzF,EAAW,IAO9B,OANA4E,EAAWc,SAAQ,SAAAC,GACjBA,EAAU3F,UAAYwF,EACtBG,EAAUC,QAAUJ,EAAMG,EAAUJ,SACpCC,EAAMA,EAAMG,EAAUJ,SAAW,KAIjC,kBAAC3E,GAAA,EAAD,CAAKpL,UAAWqL,MACd,kBAACC,GAAA,EAAD,CAAO3I,UAAWD,EAAQ4H,MAAOlG,aAAW,gBAC1C,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAYxI,EAAU,8BACtB,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,8BACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,uBACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,qBACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,uBACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,uBAGxC,kBAAC0I,GAAA,EAAD,KACGyD,EAAW7G,KAAI,SAAAqD,GAAG,OACjB,kBAACJ,GAAA,EAAD,CAAU/C,IAAKmD,EAAIC,MACjB,kBAACJ,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAIC,MAC9B,kBAACJ,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAItJ,MAC9B,kBAACmJ,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAIE,YAC9B,kBAACL,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAImE,UAC9B,kBAACtE,GAAA,EAAD,CAAWC,MAAM,SAAQ,kBAACwB,GAAA,EAAD,CAAWvE,MAAM,SAAS1I,QAAQ,SAASgM,aAAcL,EAAIpB,aACtF,kBAACiB,GAAA,EAAD,CAAWC,MAAM,SAAQ,kBAACwB,GAAA,EAAD,CAAWvE,MAAM,SAAS1I,QAAQ,SAASgM,aAAcL,EAAIwE,kB,yBCjE9F1P,GAAYC,MAAW,SAAAC,GAAK,MAAK,CACrC4M,KAAM,CACJC,OAAQ7M,EAAMG,QAAQ,GACtB4I,QAAS/I,EAAMG,QAAQ,QAIrB2M,GAAmBC,KAAW,CAClCC,iBAAkB,CAChBC,IAAK,IAEP5G,OAAQ,CACN,UAAW,CACT6G,gBACE,uFAGNC,UAAW,CACT,UAAW,CACTD,gBACE,uFAGNE,KAAM,CACJC,OAAQ,EACRC,OAAQ,EACRlN,gBAAiB,UACjBmN,aAAc,IApBOR,CAsBtBS,M,8KC5BYiC,GAfQ,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAiC,IAAzBC,cAAyB,MAAhB,GAAgB,IAAZ5H,MAC7C,OACE,kBAAClE,EAAA,EAAD,CAAYxE,QAAQ,SACjBsQ,EAAO,GAAD,OAAID,EAAJ,QAAiB,6BACvBC,EAAO,GAAD,OAAID,EAAJ,SCJN,SAASE,GAAT,EAAwDC,GAAoB,IAE3EC,EAF0E,EAA5CC,sBAClBC,KAAMH,GAAmBI,KAAKD,OAAS,SACG,KAC5D,OAAIE,KAAKC,MAAML,GAAiB,EACvB,EAEAI,KAAKC,MAAML,GAAeM,QAAQ,GAI9B,mBAAiC,IAA9BrI,EAA6B,EAA7BA,MACViE,EAAQ4D,GAD+B,EAAtBD,OAAsB,EAAdlE,QACmBoE,mBAElD,OACE,kBAACQ,GAAA,EAAD,CAAatI,MAAOA,EAAO4H,OAAQ,CAAE3D,SAAS0D,OAAO,WCd1C,eAAyB,IAAtB3H,EAAqB,EAArBA,MAAO0D,EAAc,EAAdA,QACjBO,EAAQgE,KAAMvE,EAAQoE,mBAAmBI,KAAKD,OAAS,SAE7D,OACE,kBAACK,GAAA,EAAD,CAAatI,MAAOA,EAAO4H,OAAQ,CAAE3D,SAAS0D,OAAO,W,+BCKlD,SAASY,GAAelJ,GAC7B,MAAO,CACLtB,KAT2B,kBAU3ByK,QAASnJ,GAIN,SAASoJ,GAAepJ,GAC7B,MAAO,CACLtB,KAf2B,kBAgB3ByK,QAASnJ,GAQN,IAAMqJ,GAAe,CAC1B,CAAE3I,IAAK,IAAKC,MAAO,cAON,cAAsD,IAArD2I,EAAoD,uDAApCD,GAAoC,yCAApB3K,EAAoB,EAApBA,KAAMyK,EAAc,EAAdA,QACpD,OAAQzK,GACN,IAnC2B,kBAoCzB,MAAM,GAAN,OAAW2K,GAAX,aAA4BF,IAC9B,IApC2B,kBAqCzB,OAAIG,EAAcA,EAAc3K,OAAS,GAAG+B,MAAQyI,EAAQzI,IACnD4I,EAEFC,KAAQJ,GAAR,uBAAuBG,GAAvB,aAAyCH,IAAzC,uBAAwDG,GAAxD,CAAuEH,IAChF,QACE,OAAOG,ICnBPE,GAAiB,CAAE9I,IAAK,aAAcC,MAAO,aA0IpCvB,OAzIf,YAAgD,EAA3BqK,cAA4B,IAAV1R,EAAS,iCACtC2R,EAAgBC,eAAhBD,YADsC,EAEIjO,mBAChDmN,OAAQgB,IAAI,EAAG,UAH6B,mBAEvCnB,EAFuC,KAEpBoB,EAFoB,KAK9BC,eACC1O,aACjBD,CAAS+N,GAAe,CAACM,MACzB,IA0CMO,EAAe,SAAChS,GAAD,OACnB,kBAACiS,GAAA,EAAWjS,EACV,kBAACkS,GAAA,EAAD,CACEtJ,MAAM,qBACN2H,OAAO,mBACP4B,UAAQ,MAIRC,EAAmB,SAAC,GAAD,IAAG5B,EAAH,EAAGA,OAAH,EAAWxQ,MAAX,MACP,UADO,EAAkB2R,YAEvC,kBAACU,GAAA,EAAD,CAAYC,SAAQ,uBAA0B9B,OAAQA,IACpD,MAEN,OACE,kBAAC,IAAMlD,SAAP,KACE,kBAACiF,GAAA,EAAD,eACEC,SAAS,UACTC,WAAW,EACXC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTN,SAAS,aACTO,SAjEW,SAACC,GAChB,IAAMC,EAAiBD,EAAStK,KAAI,SAACwK,GAQnC,MAAO,CACLlH,KAFEkH,EALFlH,KAQAvJ,KAHEyQ,EAJFC,QAQAC,MAJEF,EAHFhD,SAQAmD,IALEH,EAFFpC,sBAQAwC,SANEJ,EADFK,iBAQAC,aAAczC,KAAMH,GAAmBI,KAAKD,OAAS,SACrDF,cAAeF,GAAoBuC,EAAStC,OAGhD6C,KACER,EACA,CACES,QAAS,CACP,OACA,OACA,QACA,MACA,WACA,eACA,mBAGJ,SAACC,EAAKC,GACJC,aAAYD,EAAK,cAiCb1T,EARN,CASE4T,QAAS,kBAAC5B,EAAD,QAET,kBAAC6B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACElL,MAAM,cACN2H,OAAO,KACPwD,UAAU,UACVC,KAAM,SAAChB,EAASe,GAAV,iBAA4BA,EAA5B,YAAyCf,EAAQhO,GAAjD,WAEN,kBAAC,KAAD,CAAWuL,OAAO,UAEpB,kBAACuD,GAAA,EAAD,CACElL,MAAM,OACN2H,OAAO,KACPwD,UAAU,UACVC,KAAM,SAAChB,EAASe,GAAV,iBAA4BA,EAA5B,YAAyCf,EAAQhO,GAAjD,WAEN,kBAAC,GAAD,CAAgBuL,OAAO,UAEzB,kBAACW,GAAA,EAAD,CAAatI,MAAM,QAAQ2H,OAAO,WAAW0D,UAAU,IACvD,kBAACC,GAAA,EAAD,CACEC,OAAQ,SAAC3D,GAAD,OACN,kBAAC4B,EAAD,CACE5B,OAAQA,EACRxQ,MAAOA,EACP2R,YAAaA,KAGjBsC,UAAU,IAEZ,kBAAC/C,GAAA,EAAD,CAAaX,OAAO,wBAAwB0D,UAAU,IACtD,kBAAC/C,GAAA,EAAD,CAAaX,OAAO,mBAAmB0D,UAAU,IACjD,kBAAC/C,GAAA,EAAD,CAAaX,OAAO,mBAAmB0D,UAAU,IACjD,kBAACG,GAAD,CACExL,MAAM,4BACN0D,QAAS,CAAEoE,qBACXuD,UAAU,IAEZ,kBAACI,GAAD,CACEzL,MAAM,oCACN0D,QAAS,CAAEoE,qBACXuD,UAAU,MAIhB,kBAACK,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,WAAWC,WAAW,UAC5C,kBAAC/P,EAAA,EAAD,CAAYxE,QAAQ,UAApB,2DAC2D,KAE3D,kBAACwU,GAAA,EAAD,CACE9P,MAAO,CAAEyE,MAAO,IAAKqE,OAAQ,IAC7BiH,aAAa,SACb9H,MAAO6D,EACPkE,OAAO,OACPC,MAAO,CAAC,OAAQ,SAChBnK,SAAUoH,O,onBCzJpB,IAAMgD,GAAqBxK,KAAH,MA+BT,SAASyK,GAAT,GAIX,IAHFrK,EAGC,EAHDA,SACAwB,EAEC,EAFDA,aACAtJ,EACC,EADDA,UAEMM,EAAYC,cADjB,EAEmCwH,aAASmK,GAAoB,CAC/DlK,UAAW,CACTC,MAAO,CAAEmK,SAAU,CAAC,YAAa,aACjCC,QAAS,oBAHI9I,EAFhB,EAEOnB,QAAmBC,EAF1B,EAE0BA,KAF1B,EAQuBmB,IAAM1I,UAAS,GARtC,mBAQMX,EARN,KAQYsJ,EARZ,OAS6BD,IAAM1I,SAAS,IAT5C,mBASM4I,EATN,KASeC,EATf,KAUKvB,EAAUmB,GAAapJ,GAA2B,IAAnBuJ,EAAQ1F,OAE7CwF,IAAMrC,WAAU,WACd,GAAKiB,GAIDC,EAAM,CAAC,IACDiK,EAAmBjK,EAAnBiK,eACR3I,EAAW2I,EAAe1M,KAAI,SAACiE,GAAD,MAAU,CAAEzH,GAAIyH,EAAIzH,GAAIzC,KAAMkK,EAAIX,aAEjE,CAACd,EAASC,IAEbmB,IAAMrC,WAAU,WACThH,GACHwJ,EAAW,MAEZ,CAACxJ,IAOJ,OACE,kBAAC2J,GAAA,EAAD,CACE9J,UAAWA,EACXoC,GAAG,8BACHJ,MAAO,CAAEyE,MAAO,KAChBtG,KAAMA,EACN4J,OAAQ,WACNN,GAAQ,IAEVjH,QAAS,WACPiH,GAAQ,IAEV3B,SAjBiB,SAACkC,EAAKC,GAAW,IAC5BqI,EAAmBjK,EAAnBiK,eACRxK,EAASwK,EAAepI,MAAK,SAACqI,GAAD,OAAQA,EAAGnQ,KAAO6H,EAAM7H,QAgBnD+H,eAAgB,SAACC,GAAD,OAAYA,EAAOzK,MACnC+J,QAASA,EACTtB,QAASA,EACT6B,MAAOX,GAAgB,CAAElH,GAAIkH,EAAalH,GAAIzC,KAAM2J,EAAaJ,MACjEmB,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEtE,MAAO1F,EAAU,+BACjBkS,WAAS,EACTlV,QAAQ,SACRkN,WAAU,gBACLF,EAAOE,WADF,CAERC,aACE,kBAAC,IAAMC,SAAP,KACGtC,EACC,kBAACuC,GAAA,EAAD,CAAkBpN,MAAM,UAAUqN,KAAM,KACtC,KACHN,EAAOE,WAAWC,sBC3GnC,IASMgI,GAA0B,SAACC,GAC/B,IAAKA,GAAsB,IAAfA,EAAI1O,OACd,MAAO,GAQT,IAJA,IAAI2O,EAASD,EAAIE,QAAQ,iBAAkB,IAEvCC,GADJF,EAASA,EAAOG,eACG9O,OAAS,EAErB6O,GAAS,GAAG,CACjB,GAAgC,MAA5BF,EAAOI,OAAOF,EAAO,GACvBF,EAASA,EAAOI,OAAO,EAAGF,GAAS,IAAMF,EAAOI,OAAOF,EAAQ,QAC1D,GAAgC,MAA5BF,EAAOI,OAAOF,EAAO,GAC9BF,EAASA,EAAOI,OAAO,EAAGF,GAAS,IAAMF,EAAOI,OAAOF,EAAQ,OAC1D,CACL,IAAMG,EAAOC,OAAOC,aAAaP,EAAOQ,WAAWN,GAAS,GAC5DF,EAASA,EAAOI,OAAO,EAAGF,GAASG,EAAOL,EAAOI,OAAOF,EAAQ,GAChEA,EAAQ,EAEVA,IAEF,OAAOF,GAGM,GAlCK,SAACS,GAAkC,IAAnBC,EAAkB,uDAAN,EAC9C,IAAKD,EAAe,MAAM,IAAIE,MAAM,iCACpC,IAAMC,EAAQH,EAAcvP,MAAM,eAC5B2P,EAAcD,EAAM/N,MACpBiO,EAAeL,EAAcL,OAAO,EAAGK,EAAcM,QAAQF,IAC7DG,EAAa,aAAIC,MAAMP,IAAYzG,QAAO,SAACiH,GAAD,OAAYpB,GAAwBoB,KAASL,GAC7F,OAAOC,EAAeE,G,2MCOxB,IAAMG,GAAW9V,aAAW,SAACC,GAAD,MAAY,CACtC8V,aAAc,CACZtN,MAAO,KAETuN,eAAgB,CACdvN,MAAO,S,sZCTaiB,KAAH,MASJA,KAAH,MAMKA,KAAH,MAaDuM,OARf,WACE,OACE,6BACE,4C,iLC1BcvM,KAAH,MAYFwM,OAJf,YACE,OADyC,EAAnBC,MAAmB,EAAZ/Q,SACtB,4C,opBCNT,IAAMgR,GAAa1M,KAAH,MAYV2M,GAAuB3M,KAAH,MAQpB4M,GAAW5M,KAAH,MCdC,ICVX6M,GACAC,GACAC,G,GDQW,IACb,kBAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,UAAUtX,UAAWuX,KACvC,kBAAC,KAAD,CAAOF,OAAK,EAACC,KAAK,kBAAkBtX,UAAWwX,KAC/C,kBAAC,KAAD,CAAOH,OAAK,EAACC,KAAK,iBAAiBtX,UAAWyX,KAC9C,kBAAC,KAAD,CAAOJ,OAAK,EAACC,KAAK,aAAatX,UAAWoH,KAC1C,kBAAC,KAAD,CAAOiQ,OAAK,EAACC,KAAK,wBAAwBtX,UAAWqO,KACrD,kBAAC,KAAD,CAAOgJ,OAAK,EAACC,KAAK,mCAAmCtX,UJCxC,YAA+C,EAA3ByR,cAA4B,IACvDiG,EADsD,iCACpCZ,MAAM7J,OAAOyK,UAC/BC,EAAgB,CACpB1E,MAAO,EACP2E,cAAe,KACf/M,UAAW,KACX6M,UAAWA,EACXlN,UAAW,KACX4F,QAAS,KACTtE,WAAY,IACZ+L,KAAM,GAVoD,EAY5BpU,mBAASkU,GAZmB,mBAYrDG,EAZqD,KAY3CC,EAZ2C,KAatD5U,EAAWC,cACXH,EAAYC,cACZ8U,EAASC,eAETC,EAAc7N,KAAH,MAjB2C,EAwBtC8N,aAAYD,GAA3BE,EAxBqD,oBAyBtDC,EAAU,WAAO,IAAD,EACaC,aAAU,UAAWZ,GAA9C1M,EADY,EACZA,KAAMD,EADM,EACNA,QAASwN,EADH,EACGA,MACvB,OAAIxN,EACK,kBAACE,EAAA,EAAD,MAELsN,EACK,oCAGP,yCACW,6BAAMvN,EAAKgI,WAsFpBtQ,EAAU+T,KAChB,OACE,kBAAC,IAAMpJ,SAAP,KACE,kBAACmL,GAAA,EAAD,CACE3X,QACE,kBAACoO,GAAA,EAAD,CAAQ/O,MAAM,UAAUqN,KAAK,QAAQlJ,QAlC1B,WACjB6K,QAAQC,IAAI2I,GAGZ,IAFA,IAAMW,EAAoB,GACtBC,EAAeZ,EAAStN,UACnBgL,EAAQ,EAAGA,EAAQsC,EAAS7E,MAAOuC,IAAS,CACnD,IAAM/F,EAAO,CACXiI,UAAWI,EAASJ,UACpB7M,UAAW,CAAE8N,QAAS,CAAE5T,GAAI+S,EAASjN,UAAU9F,KAC/C6T,gBAAiBd,EAASF,cAAc7S,GACxC+G,WAAYgM,EAAShM,WACrBnD,MAAO+P,GAETA,EAAeG,GAA6BH,GAC5CD,EAAkB1R,KAAK0I,GAEzBgJ,EAAkBlQ,KAAI,SAACuQ,GAAD,OAAO5J,QAAQC,IAAI2J,MACzCV,EAAY,CACVzN,UAAW,CACTK,KAAK,GAAD,OAAMyN,MAGXM,MAAK,SAACnM,GACLsC,QAAQC,IAAI,MAAOvC,GACnBoL,EAAO,oBAERgB,OAAM,SAACT,GACNP,EAAO,UAAD,OAAWO,EAAMU,SAAW,eAQ0BtU,MAAO,CAAEkB,UAAW,KAC5E,kBAACqT,GAAA,EAAD,MADF,YAKFC,SAnHW,iBAAM,eAqHjB,kBAAC9E,GAAA,EAAD,CAAMC,WAAS,EAAC3P,MAAO,CAAEsJ,OAAQ,KAAOmL,aAAa,eAAe5E,WAAW,cAC7E,kBAAC6D,EAAD,MACA,kBAACvD,GAAD,CAA2BrK,SAhGC,SAACmN,GACnCG,EAAY,gBACPD,EADM,CAETF,oBA6FsE3L,aAAc6L,EAASF,cAAejV,UAAWD,EAAQiU,iBAC3H,kBAAC3K,GAAD,CAAuBC,aAAc6L,EAASjN,UAAWJ,SA3FjC,SAACI,GAC/BkN,EAAY,gBACPD,EADM,CAETjN,gBAwFgGlI,UAAWD,EAAQgU,eAC/G,kBAACxJ,GAAA,EAAD,CACEvE,MAAK,aACLjC,KAAK,OACLkG,MAAOkL,EAAShM,WAChB7L,QAAQ,SACRwK,SA3FuB,SAAC4O,GAChC,IAAMvN,EAAauN,EAAEC,OAAO1M,MAC5BmL,EAAY,gBACPD,EADM,CAEThM,iBAwFMyN,gBAAiB,CACfC,QAAQ,KAGZ,kBAACtM,GAAA,EAAD,CACEvE,MAAK,QACLjC,KAAK,SACL6S,gBAAiB,CACfC,QAAQ,GAEV5M,MAAOkL,EAAS7E,MAChBxI,SA5EkB,SAAC4O,GAC3B,IAAMpG,EAAQoG,EAAEC,OAAO1M,MACvBmL,EAAY,gBACPD,EADM,CAET7E,cA0EI,kBAAC/F,GAAA,EAAD,CACEvE,MAAK,UAAK1F,EAAU,iBAAf,YAAmCA,EAAU,gBAClDsW,gBAAiB,CACfC,QAAQ,GAEV5M,MAAOkL,EAAStN,UAChBC,SAxGsB,SAAC4O,GAC/B,IAAM7O,EAAY6O,EAAEC,OAAO1M,MAAM6I,cAC7BrF,EAAU,KACV5F,GAAaA,EAAU7D,OAAS,IAClCyJ,EAAUyI,GAA6BrO,EAAWsN,EAAS7E,QAE7D8E,EAAY,gBACPD,EADM,CAETtN,YACA4F,gBAiGI,kBAAClD,GAAA,EAAD,CACEvE,MAAK,UAAK1F,EAAU,iBAAf,YAAmCA,EAAU,cAClDsW,gBAAiB,CACfC,QAAQ,GAEV5M,MAAOkL,EAAS1H,QAChB3F,SApGoB,SAAC4O,GAC7B,IAAMjJ,EAAUiJ,EAAEC,OAAO1M,MAAM6I,cAC/BsC,EAAY,gBACPD,EADM,CAET1H,gBAkGI,kBAAClD,GAAA,EAAD,CACEvE,MAAK,OACLjC,KAAK,SACL6S,gBAAiB,CACfC,QAAQ,GAEV5M,MAAOkL,EAASD,KAChBpN,SA9FiB,SAAC4O,GAC1B,IAAMxB,EAAOwB,EAAEC,OAAO1M,MACtBmL,EAAY,gBACPD,EADM,CAETD,cA6FE,kBAAC4B,GAAA,EAAD,MACG,YAAkB,EAAf3B,SAOF,OANA3U,EACE+N,GAAe,CACb,CAAExI,IAAK,aAAcC,MAAO,aAC5B,CAAED,IAAI,wBAAD,OAA0BgP,GAAa/O,MAAM,iBAG/C,aI9LjB,kBAAC,KAAD,CAAO0O,OAAK,EAACC,KAAK,0BAA0BtX,UAAWqO,KACvD,kBAAC,KAAD,CAAOgJ,OAAK,EAACC,KAAK,uBAAuBtX,UZ0B5B,WACb,IAAMiD,EAAYC,cACZR,EAAUhC,KAFkB,EAGI+C,qBAHJ,mBAG3B6K,EAH2B,KAGdC,EAHc,OAIA9K,qBAJA,mBAI3B+G,EAJ2B,KAIhBkP,EAJgB,KAOlC,OACE,kBAAC,IAAMrM,SAAP,KACE,kBAACjC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAAC/J,EAAA,EAAD,CAAYxE,QAAQ,MAAMgD,EAAU,uBACpC,kBAACwL,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAACkB,GAAA,EAAD,CAASd,kBAAgB,EAACe,UAAW,kBAAC,GAAD,OACnC,kBAACC,GAAA,EAAD,CAAMnG,IAAKxF,EAAU,sBACnB,kBAAC4L,GAAA,EAAD,CAAWC,kBAAmB6K,MAAQ1W,EAAU,oBAElD,kBAAC2L,GAAA,EAAD,CAAMnG,IAAKxF,EAAU,uBACnB,kBAAC4L,GAAA,EAAD,CAAWC,kBAAmBC,KAAQ9L,EAAU,4BAM1D,kBAACwL,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAACpC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAACxC,GAAD,CAAuBvB,SAAU8D,KAEnC,kBAACnD,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAACtB,GAAA,EAAD,CAAWvE,MAAO1F,EAAU,sBAAuBhD,QAAQ,SAASwK,SAAUiP,EAAcvE,WAAS,OAI1G7G,GACC,kBAAC,IAAMjB,SAAP,KACE,kBAACjC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAACC,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAAC/I,EAAA,EAAD,CAAYxE,QAAQ,MAAMgD,EAAU,4BACpC,kBAAC,GAAD,CAAc8B,GAAIuJ,EAAa9D,UAAWA,OAIhD,kBAACiE,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAACpC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,QAAQ7J,MAAO,CAAEqK,UAAW,UAC3C,kBAACC,GAAA,EAAD,CAAQ/O,MAAM,UAAUD,QAAQ,YAAYoE,QAzCvC,kBAAM6K,QAAQC,MAyC+ClM,EAAU,iBAA5E,IAA+FA,EAAU,2BYxEvH,kBAAC,KAAD,CAAOoU,OAAK,EAACC,KAAK,0BAA0BtX,UdwB/B,WACb,IAAMiD,EAAYC,cACZR,EAAUhC,KAFqB,EAGC+C,qBAHD,mBAG9B6K,EAH8B,KAGjBC,EAHiB,KAMrC,OACE,kBAAC,IAAMlB,SAAP,KACE,kBAACjC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAAC/J,EAAA,EAAD,CAAYxE,QAAQ,MAAMgD,EAAU,2BACpC,kBAACwL,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAACkB,GAAA,EAAD,CAASd,kBAAgB,EAACe,UAAW,kBAAC,GAAD,OACnC,kBAACC,GAAA,EAAD,CAAMnG,IAAKxF,EAAU,wBACnB,kBAAC4L,GAAA,EAAD,CAAWC,kBAAmBC,KAAQ9L,EAAU,uBAAhD,IAAyEA,EAAU,iBAErF,kBAAC2L,GAAA,EAAD,CAAMnG,IAAKxF,EAAU,oBACnB,kBAAC4L,GAAA,EAAD,CAAWC,kBAAmB8K,MAAgB3W,EAAU,yBAMlE,kBAACwL,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAACpC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAACxC,GAAD,CAAuBvB,SAAU8D,EAAgB5F,MAAO1F,EAAU,uBAAyB,IAAMA,EAAU,oBAIhHqL,GACC,kBAAC,IAAMjB,SAAP,KACE,kBAACjC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,SACf,kBAACC,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAAC/I,EAAA,EAAD,CAAYxE,QAAQ,MAAMgD,EAAU,0BACpC,kBAAC,GAAD,CAAc8B,GAAIuJ,OAIxB,kBAACG,GAAA,EAAD,CAAM9L,UAAWD,EAAQ8K,MACvB,kBAACpC,GAAA,EAAD,CAAKxC,QAAQ,QACX,kBAACwC,GAAA,EAAD,CAAKlJ,KAAM,EAAGsM,GAAG,QAAQ7J,MAAO,CAAEqK,UAAW,UAC3C,kBAACC,GAAA,EAAD,CAAQ/O,MAAM,UAAUD,QAAQ,YAAYoE,QAtCvC,kBAAM6K,QAAQC,MAsC+ClM,EAAU,4BclE1F,kBAAC,KAAD,CAAOoU,OAAK,EAACC,KAAK,QAAQtX,UAAW4W,KACrC,kBAAC,KAAD,CAAOS,OAAK,EAACC,KAAK,YAAYtX,UAAW6W,KACzC,kBAAC,KAAD,CAAOQ,OAAK,EAACC,KAAK,uCAAuCtX,UDU5C,SAA4BD,GACzC,IAAMkD,EAAYC,cAEZ8U,EAASC,eAHiC,EAIVxU,qBAJU,mBAIzC6K,EAJyC,KAI5BC,EAJ4B,OAKnB4J,aAAYnB,IAAlC6C,EALyC,sBAM7B1B,aAAYlB,IAAxB6C,EANyC,oBAOxCvJ,EAAWxQ,EAAMgG,SAASG,MAA1BqK,OAPwC,EAQtB7F,aAASqM,GAAY,CAC7CpM,UAAW,CAAEC,MAAO,CAAE7F,GAAIwL,EAAOd,KAAK1K,OADhCgG,EARwC,EAQxCA,QAASC,EAR+B,EAQ/BA,KAGXhF,EAAU8L,eAKViI,EAAW/O,GAAQA,EAAKgP,cAI9B,GAHA9K,QAAQC,IAAIoB,GACZrB,QAAQC,IAAI4K,GAERhP,EACF,OAAO,0CAGT,IAAMkP,EAAU,yCAAG,uBAAAC,EAAA,+EAETL,EAAmB,CACvBlP,UAAW,CACTC,MAAO,CAAE7F,GAAIwL,EAAOxL,OAJT,uBAQT+U,EAAS,CACbnP,UAAW,CACTK,KAAM,CACJmP,cAAe7L,EAAYvJ,GAC3BqV,iBAAkB,CAACL,EAAShV,IAC5BsV,iBAAkB,CAACN,EAASlP,UAAU9F,QAGzCgU,MAAK,SAACnM,GACPsC,QAAQC,IAAI,MAAOvC,GACnBoL,EAAO,iBA5BJhS,EAAQsU,IAAI,MAUF,uDAsBftC,EAAO,UAAD,OAAW,KAAMiB,SAAW,WAtBnB,yDAAH,qDA0BhB,OACE,kBAAC5N,GAAA,EAAD,KACE,kBAACgJ,GAAA,EAAD,CACEC,WAAS,EACTiG,UAAU,SACVhG,QAAQ,gBACR5P,MAAO,CAAEsJ,OAAQ,IAAKtE,QAAS,KAE/B,mDACA,kBAAC0K,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAACvC,GAAA,EAAD,CACEnI,GAAG,KACH4D,MAAM,gBACN1I,QAAQ,SACRgM,aAAc8N,EAASpR,MACvB6R,UAAU,KAGd,kBAACnG,GAAA,EAAD,CAAMoG,GAAI,EAAGhL,MAAI,GACf,kBAACzD,GAAD,CACEvB,SAAU8D,EACV5F,MACE1F,EAAU,uBAAyB,IAAMA,EAAU,eAErD2H,MAAO,CAAEA,MAAO,CAAE8P,YAAa,SAGnC,kBAACrG,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAACR,GAAA,EAAD,CAAQhP,QAAQ,YAAYC,MAAM,UAAUmE,QAAS4V,GAArD,e,oIGrGKU,GARM,SAAfA,EAAejU,GACjB,OAAIA,EAAKkU,OAASC,KAASC,UAAYpU,EAAKkU,OAASC,KAASE,KACnDJ,EAAajU,EAAKsU,QAGtBtU,GCDIuU,GARA,SAATA,EAASvU,GACX,OAAIA,EAAKkU,OAASC,KAASC,SAChBG,EAAOvU,EAAKsU,QAGhBtU,EAAKkU,OAASC,KAASE,MCQ5BG,GAAgB,SAACxU,EAAMkG,GAC3B,MAAkB,QAAdlG,EAAKpE,KACA2N,SAASrD,EAAO,IAGP,UAAdlG,EAAKpE,KACA6Y,WAAWvO,GAGbA,GAmBHwO,GAAgB,SAAhBA,EAAiBnO,EAAQoO,EAAWC,GACxC,IAAM9E,EAAS,GAEf,OAAKvJ,GAILoC,OAAOkM,KAAKtO,GAAQiD,SAAQ,SAAAzH,GAC1B,IAAM+S,EAAQvO,EAAOxE,GACjBgT,EAAM,KAEV,GAAKD,EASL,GAJIH,GAAa9E,MAAMhF,QAAQ8J,EAAUK,QACvCD,EAAMJ,EAAUK,KAAK7O,MAAK,SAAA4C,GAAI,OAAIA,EAAKnN,OAASmG,MAG9C+S,aAAiBG,KACnBnF,EAAO/N,GAAO+S,OAIhB,GACEA,aAAiBnM,SAChBkH,MAAMhF,QAAQiK,IACfC,GACkB,iBAAlBA,EAAI/U,KAAKkU,KAJX,CAME,IAAMc,EAAOJ,EAAqBM,MAAM/O,MACtC,SAAA4C,GAAI,OACFA,EAAKmL,OAASa,EAAI/U,KAAKkU,MAAQnL,EAAKnN,OAASmZ,EAAI/U,KAAKpE,QACxDuZ,YACFrF,EAAO/N,GAAO2S,EAAcI,EAAO,CAAEE,QAAQJ,QAI3CE,aAAiBnM,SAAWkH,MAAMhF,QAAQiK,GAC5ChF,EAAO/N,GAAO2S,EAAcI,EAAOH,EAAWC,GAShD9E,EAAO/N,GALFgT,EA5DQ,SAAC7O,EAAOlG,GACvB,iBAAWA,EAAKkU,KAAhB,YAAwBlU,EAAKpE,OAC3B,IAAK,aACH,OAAOwZ,OAAOlP,GAEhB,IAAK,gBACH,OAAOgJ,OAAOhJ,GAEhB,IAAK,iBACH,OAAO1H,QAAQ0H,GAEjB,QACE,OAAOA,GAqDKmP,CAASP,EAAOC,EAAI/U,MAJlB8U,OAjCdhF,EAAO/N,GAAO+S,KAwCXhF,GAhDEvJ,GAyIL+O,GAAuB,SAC3BzJ,EACA0J,EACAhP,GAEA,IAAMtC,EAAY0E,OAAOkM,KAAKtO,EAAOjC,MAAMuE,QAAO,SAAC2M,EAAKzT,GACtD,GAAI,CAAC,KAAM,YAAa,aAAa0T,SAAS1T,IAAQA,EAAI2T,SAAS,OACjE,OAAOF,EAIT,IAAMtP,EAAQK,EAAOjC,KAAKvC,GAC1B,GAAI4T,kBAAOzP,GACT,uBACKsP,EADL,eAEGzT,EAAMmE,EAAM0P,gBAEV,GAAI/K,mBAAQ3E,GAAQ,CACzB,GAAI2P,iBAAM3P,EAAO4P,cAAaD,iBAAM3P,EAAO6P,aACzC,uBACKP,EADL,eAEGzT,EAAM,CAAEiU,IAAK9P,KAIlB,IAAM+L,EAAU,GACVrX,EAAS,GACfsL,EAAMsD,SAAQ,SAACyM,GACTA,GAAKH,oBAASG,EAAE5X,IAClB4T,EAAQ5R,KAAK,CAAEhC,GAAI4X,EAAE5X,KAErBzD,EAAOyF,KAAK4V,MAIhB,IAAMnB,EAAQ,GAEd,GAAqB,WAAjBS,GAA6BhP,EAAO2P,aAAanU,GAAK9B,OAAS,EAAG,CAEpE,IAAMkW,EAAgB5P,EAAO2P,aAAanU,GACtCnH,EAAOqF,OAASkW,EAAclW,OAChC6U,EAAMla,OAASA,EAAOwb,MAAMD,EAAclW,QACjCrF,EAAOqF,OAASkW,EAAclW,OACvC6U,EAAMuB,WAAaF,EAAcC,MAAMxb,EAAOqF,QAE9C6U,EAAMwB,WAAaH,EAActU,KAAI,SAAC0U,EAAIC,GAAL,MAAY,CAC/CtS,MAAOqS,EACPjS,KAAM1J,EAAO4b,YAMbvE,EAAQhS,OAAS,IACnB6U,EAAM7C,QAAUA,GAEdrX,EAAOqF,OAAS,IAClB6U,EAAMla,OAASA,GAInB,uBACK4a,EADL,eAEGzT,EAFH,gBAEc+S,KAET,OAAI2B,oBAASvQ,GAEd4P,oBAAS5P,EAAM7H,IACjB,gBACKmX,EADL,eAEGzT,EAAM,CAAEkQ,QAAS,CAAE5T,GAAI6H,EAAM7H,OAGhC,gBACKmX,EADL,eAEGzT,EAAM,CAAEnH,OAAQsL,KAMTnE,EAAIjC,MAAM,KACdG,OAAS,EAIVuV,EAGT,gBACKA,EADL,eAEGzT,EAAMmE,MAER,IAEH,OADAsC,QAAQC,IAAI,aAAclC,EAAQtC,GAC3BA,GAqBHyS,GAAuB,SAC3B7K,EACA0J,EAF2B,GAIxB,IADDjR,EACC,EADDA,KAAM4R,EACL,EADKA,aAEFS,EAhBN,SAASC,EAAQC,EAAQC,GACvB,OAAOC,EAAE1b,UAAUwb,GAAQ,SAAU/G,EAAQ5J,EAAOnE,GAC7CgV,EAAEC,QAAQ9Q,EAAO4Q,EAAK/U,MACzB+N,EAAO/N,GAAQgV,EAAEN,SAASvQ,IAAU6Q,EAAEN,SAASK,EAAK/U,IAAS6U,EAAQ1Q,EAAO4Q,EAAK/U,IAAQmE,MAKxF0Q,CAQwBtS,EAAM4R,GAgGrC,OA/FA1N,QAAQC,IAAI,kBAAmBnE,EAAM4R,EAAcS,GACjChO,OAAOkM,KAAK8B,GAAa9N,QAAO,SAAC2M,EAAKzT,GACtD,GAAI,CAAC,KAAM,YAAa,aAAa0T,SAAS1T,GAC5C,OAAOyT,EAGT,IAAMtP,EAAQ5B,EAAKvC,GACnB,GAAI4T,kBAAOzP,GACT,uBACKsP,EADL,eAEGzT,EAAMmE,EAAM0P,gBAEV,GAAI7T,EAAI2T,SAAS,OACtB,uBACKF,EADL,eAEGzT,EAAIiN,OAAO,EAAGjN,EAAI9B,OAAS,GAAK,CAAEgS,QAAS/L,EAAMrE,KAAI,SAACxD,GAAD,MAAS,CAAEA,YAE9D,GAAIwM,mBAAQ3E,GAAQ,CACzB,GAAI2P,iBAAM3P,EAAO4P,cAAaD,iBAAM3P,EAAO6P,aACzC,uBACKP,EADL,eAEGzT,EAAM,CAAEiU,IAAK9P,KAIlB,IAAM+L,EAAU,GACVrX,EAAS,GACfsL,EAAMsD,SAAQ,SAACyM,GACTA,GAAKH,oBAASG,EAAE5X,IAClB4T,EAAQ5R,KAAK,CAAEhC,GAAI4X,EAAE5X,KAErBzD,EAAOyF,KAAK4V,MAIhB,IAAMnB,EAAQ,GAEd,GAAqB,WAAjBS,GAA6BW,EAAanU,GAAK9B,OAAS,EAAG,CAE7D,IAAMkW,EAAgBD,EAAanU,GAC/BnH,EAAOqF,OAASkW,EAAclW,OAChC6U,EAAMla,OAASA,EAAOwb,MAAMD,EAAclW,QACjCrF,EAAOqF,OAASkW,EAAclW,OACvC6U,EAAMuB,WAAaF,EAAcC,MAAMxb,EAAOqF,QAE9C6U,EAAMwB,WAAaH,EAActU,KAAI,SAAC0U,EAAIC,GAAL,MAAY,CAC/CtS,MAAOqS,EACPjS,KAAM1J,EAAO4b,YAMbvE,EAAQhS,OAAS,IACnB6U,EAAM7C,QAAUA,GAEdrX,EAAOqF,OAAS,IAClB6U,EAAMla,OAASA,GAInB,uBACK4a,EADL,eAEGzT,EAFH,gBAEc+S,KAET,OAAI2B,oBAASvQ,IAClBsC,QAAQC,IAAI,WAAYvC,EAAO2P,iBAAM3P,EAAO6P,cAExCD,oBAAS5P,EAAM7H,IACjB,gBACKmX,EADL,eAEGzT,EAAM,CAAEkQ,QAAS,CAAE5T,GAAI6H,EAAM7H,OAGhC,gBACKmX,EADL,eAEGzT,EAAM,CAAEnH,OAAQsL,MAMTnE,EAAIjC,MAAM,KACdG,OAAS,EAIVuV,EAGT,gBACKA,EADL,eAEGzT,EAAMmE,MAER,K,SCtYU+Q,GARI,SAAbA,EAAajX,GACf,OAAIA,EAAKkU,OAASC,KAASE,KAChB4C,EAAWjX,EAAKsU,QAGpBtU,EAAKkU,OAASC,KAASC,UC2DrB8C,GAAa,SAAAnC,GACxB,IAAM/U,EAAOiU,GAAac,EAAI/U,MACxBmX,EAAWF,GAAWlC,EAAI/U,MAGhC,OAFauU,GAAOQ,EAAI/U,MAGlBmX,EACKC,YACLA,eACEA,aAAmBA,QAAcpX,EAAKpE,SAIrCwb,YAAkBA,aAAmBA,QAAcpX,EAAKpE,QAG7Dub,EACKC,eAAqBA,aAAmBA,QAAcpX,EAAKpE,QAG7Dwb,aAAmBA,QAAcpX,EAAKpE,QAGlCyb,GAAY,SAACC,EAAOrT,EAAWsT,GAE1C,GAA0B,IAAtBD,EAAMtC,KAAK/U,OACb,MAAO,GAGT,IAAMuX,EAAiB7O,OAAOkM,KAAK5Q,GAAWwT,QAC5C,SAAAC,GAAC,MAA4B,qBAAjBzT,EAAUyT,MAmDxB,OAhDIH,EACEA,EAAU3b,KAAK8Z,SAAS,eACnB,CACL0B,YACEA,QAAc,QACdA,YAAkBA,QAAc,WAG3BG,EAAU3b,KAAK8Z,SAAS,eAC1B,CACL0B,YACEA,QAAc,QACdA,YAAkBA,QAAc,UAElCA,YACEA,QAAc,SACdA,YAAkBA,QAAc,YAI7BG,EAAUpC,YACdsC,QAAO,SAAAjE,GAAC,OAAIgE,EAAe/B,SAASjC,EAAE5X,SACtCiN,QACC,SAAC2M,EAAKT,GAAN,6BACKS,GADL,CAEE4B,YACEA,QAAcrC,EAAInZ,MAClBwb,YAAkBA,QAAcrC,EAAInZ,YAGxC,IAIC0b,EAAMtC,KACVyC,QAAO,SAAAjE,GAAC,OAAIgE,EAAe/B,SAASjC,EAAE5X,SACtCiN,QACC,SAAC2M,EAAKT,GAAN,6BACKS,GADL,CAEE4B,YACEA,QAAcrC,EAAInZ,MAClBwb,YAAkBA,QAAcrC,EAAInZ,YAGxC,KC7IF+b,GAAmB,SAAnBA,EAAmBrT,GAsCvB,OArCeqE,OAAOkM,KAAKvQ,GAAMuE,QAAO,SAAC2M,EAAKzT,GAC5C,GAAIA,EAAI6V,WAAW,KACjB,OAAOpC,EAGT,IAOsC,EAPhCqC,EAAUvT,EAAKvC,GAErB,OAAgB,OAAZ8V,QAAgCC,IAAZD,EACfrC,EAGL3F,MAAMhF,QAAQgN,GACU,kBAAfA,EAAQ,GACjB,gBACKrC,GADL,mBAEGzT,EAAM8V,EAAQhW,IAAI8V,IAFrB,wBAGM5V,EAHN,OAGiB8V,EAAQhW,KAAI,SAAAkW,GAAC,OAAIA,EAAE1Z,OAHpC,IAMA,gBAAYmX,EAAZ,eAAkBzT,EAAM8V,IAIL,kBAAZA,EACT,gBACKrC,EADL,GAEMqC,GACFA,EAAQxZ,IADN,yBAEI0D,EAFJ,OAEe8V,EAAQxZ,IAJ7B,eAMG0D,EAAM4V,EAAiBE,KAI5B,gBAAYrC,EAAZ,eAAkBzT,EAAM8V,MACvB,KNuBUG,IAxDXxH,GG+YW,SAAAoE,GAAoB,OAAI,SACrC/I,EACA0J,EACAhP,EACAoO,GAGA,IAAMsD,EAAiBvD,GACrBnO,EACAoO,EACAC,GAGF,OAAQW,GACN,KAAK2C,KACH,OAjUwB,SAAAtD,GAAoB,OAAI,SACpD/I,EACA0J,EACAhP,GAEA,IAAKA,IAAWA,EAAOkR,OAAQ,MAAO,GACtC,IAAMA,EAAS9O,OAAOkM,KAAKtO,EAAOkR,QAAQ5O,QAAO,SAAC2M,EAAKzT,GACrD,GAAY,QAARA,EACF,uBAAYyT,EAAZ,CAAiB2C,MAAO5R,EAAOkR,OAAO1V,KAGxC,GAAkC,kBAAvBwE,EAAOkR,OAAO1V,IACV6S,EAAqBM,MAAM/O,MACtC,SAAAiS,GAAC,OAAIA,EAAExc,OAAF,UAAciQ,EAAS7L,KAAKpE,KAA5B,iBAEiBuZ,YAAYhP,MAAK,SAAAiS,GAAC,OAAIA,EAAExc,OAAF,UAAcmG,EAAd,YAE9B,CACd,IAAM0V,EAAS9O,OAAOkM,KAAKtO,EAAOkR,OAAO1V,IAAM8G,QAC7C,SAACwP,EAAYX,GAAb,uBACKW,EADL,yBAEMX,EAFN,OAEenR,EAAOkR,OAAO1V,GAAK2V,OAElC,IAEF,uBAAYlC,EAAZ,yBAAqBzT,EAArB,SAAkC0V,IAItC,IAAMa,EAAQvW,EAAIjC,MAAM,KAExB,GAAIwY,EAAMrY,OAAS,EAAG,CACpB,GAAiB,OAAbqY,EAAM,GAQR,OAPa1D,EAAqBM,MAAM/O,MACtC,SAAAiS,GAAC,OAAIA,EAAExc,OAAF,UAAciQ,EAAS7L,KAAKpE,KAA5B,iBAEiBuZ,YAAYhP,MAClC,SAAAiS,GAAC,OAAIA,EAAExc,OAAF,UAAc0c,EAAM,GAApB,YAIL,gBACK9C,EADL,yBAEM8C,EAAM,GAFZ,SAEwB,CAAEja,GAAIkI,EAAOkR,OAAO1V,MAI9C,gBAAYyT,EAAZ,eAAkB8C,EAAM,GAAK,CAAEja,GAAIkI,EAAOkR,OAAO1V,MAGnD,IAAMwW,EAAgB1M,EAAS7L,KAAKwY,OAAOrS,MAAK,SAAAsS,GAAC,OAAIA,EAAE7c,OAAS0c,EAAM,MAChEtY,EAAOiU,GAAasE,EAAcvY,MACxC,uBAAYwV,EAAZ,eAAkBzT,EAAMyS,GAAcxU,EAAMuG,EAAOkR,OAAO1V,MAG5D,IAAMwW,EAAgB1M,EAAS7L,KAAKwY,OAAOrS,MAAK,SAAAsS,GAAC,OAAIA,EAAE7c,OAASmG,KAEhE,GAAIwW,EAAe,CACjB,IAAMvY,EAAOiU,GAAasE,EAAcvY,MAGxC,OAFgBuU,GAAOgE,EAAcvY,MAGnC,gBACKwV,EADL,eAEGzT,EAAM8N,MAAMhF,QAAQtE,EAAOkR,OAAO1V,IAC/BwE,EAAOkR,OAAO1V,GAAKF,KAAI,SAAAqE,GAAK,OAC5BsO,GAAcxU,EAAMkG,MAEpBsO,GAAcxU,EAAM,CAACuG,EAAOkR,OAAO1V,OAI3C,gBAAYyT,EAAZ,eAAkBzT,EAAMyS,GAAcxU,EAAMuG,EAAOkR,OAAO1V,MAG5D,uBAAYyT,EAAZ,eAAkBzT,EAAMwE,EAAOkR,OAAO1V,OACrC,IAEH,MAAO,CACL2W,KAAMnP,UAAUhD,EAAOoS,WAAWC,KAAO,GAAKrS,EAAOoS,WAAWE,SAChEC,MAAOvP,SAAShD,EAAOoS,WAAWE,SAClCvK,QAAS,GAAF,OAAK/H,EAAOwS,KAAKC,MAAjB,YAA0BzS,EAAOwS,KAAKE,OAC7C/U,MAAOuT,IA+OEyB,CAAsBtE,EAAtBsE,CACLrN,EACA0J,EACA0C,EACAtD,GAGJ,KAAKwE,KACH,MAAO,CACLjV,MAAO,CAAEiU,MAAOF,EAAemB,IAAInZ,OAAS,GAAKwW,oBAASwB,EAAemB,IAAI,IAAMnB,EAAemB,IAAIvX,KAAI,SAAAoU,GAAC,OAAIA,EAAE5X,MAAM4Z,EAAemB,MAE1I,KAAKC,KACH,IAAMf,EAAQL,EAAerF,OAAO9S,MAAM,KACpCoE,EAAQoV,oBAAShB,EAAM,IAAf,yBAA2BA,EAAM,GAAjC,SAA6C,CAAEja,GAAIkI,EAAOlI,KAA1D,eAAsEia,EAAM,GAAK,CAAEja,GAAIkI,EAAOlI,KAC5G,MAAO,CACLqa,KAAMnP,UAAUhD,EAAOoS,WAAWC,KAAO,GAAKrS,EAAOoS,WAAWE,SAChEC,MAAOvP,SAAShD,EAAOoS,WAAWE,SAClCvK,QAAS,GAAF,OAAK/H,EAAOwS,KAAKC,MAAjB,YAA0BzS,EAAOwS,KAAKE,OAC7C/U,SAGJ,KAAKqV,KACL,KAAKC,KACH,MAAO,CACLtV,MAAO,CACL7F,GAAI4Z,EAAe5Z,KAGzB,KAAKob,KACH,MAAO,CACLnV,KAAMgR,GACJzJ,EACA0J,EACA0C,IAKN,KAAKyB,KACH,MAAO,CACLpV,KAAMoS,GACJ7K,EACA0J,EACA0C,GAGF/T,MAAO,CACL7F,GAAI4Z,EAAe5Z,QH5czBoS,GK2NW,SAAAmE,GAAoB,OAAI,SACrC/I,EACA0J,EACAZ,EACA1Q,GAEA,IAAMsT,EAtB6B,SACnC3C,EACA5U,EACAuV,GAEA,IACIoE,EADEC,EAAW5Z,EAAKpE,KAQtB,OANI2Z,IAAiBkE,OACnBE,EAAU,GAAH,OAAMC,EAAN,gBAELrE,IAAiBmE,OACnBC,EAAU,GAAH,OAAMC,EAAN,gBAEFhF,EAAqBM,MAAM/O,MAAK,SAAA4O,GAAG,OAAIA,EAAInZ,OAAS+d,KASzCE,CAChBjF,EACA/I,EAAS7L,KACTuV,GAE+BuE,GAAkB7V,EAA3C8V,UAA2C9V,EAAhC+V,UANhB,YAMgD/V,EANhD,4BAOGgW,EAvFuB,SAAC3C,EAAOrT,EAAWsT,EAAW1L,GAC3D,GAA0B,IAAtByL,EAAMtC,KAAK/U,OACb,MAAO,GAGT,IAMI+U,EANEwC,EAAiB7O,OAAOkM,KAAK5Q,GAAWwT,QAC5C,SAAAC,GAAC,MAA4B,qBAAjBzT,EAAUyT,MAmDxB,OA7CIH,GACF/O,QAAQC,IAAI,YAAa8O,GAEvBvC,EADEuC,EAAU3b,KAAK8Z,SAAS,eACnB,CAAC0B,sBACNA,YAAkBA,QAAc,SAChCA,eAAqBA,aAAmBA,QAAcG,EAAU3b,UAEzD2b,EAAU3b,KAAK8Z,SAAS,eAC1B,CACL0B,sBACEA,YAAkBA,QAAc,SAChCA,eAAqBA,aAAmBA,QAAcG,EAAU3b,SAElEwb,sBACEA,YAAkBA,QAAc,UAChCA,eAAqBA,aAAmBA,QAAA,UAAiBvL,EAAS7L,KAAKpE,KAA/B,yBAIrC2b,EAAUpC,YACdsC,QAAO,SAAAjE,GAAC,OAAIgE,EAAe/B,SAASjC,EAAE5X,SACtCiN,QAAO,SAAC2M,EAAKT,GACZ,6BACKS,GADL,CAEE4B,sBACEA,YAAkBA,QAAcrC,EAAInZ,OACpCsb,GAAWnC,QAGd,KAGPC,EAAOsC,EAAMtC,KACVyC,QAAO,SAAAjE,GAAC,OAAIgE,EAAe/B,SAASjC,EAAE5X,SACtCiN,QAAO,SAAC2M,EAAKT,GACZ,6BACKS,GADL,CAEE4B,sBACEA,YAAkBA,QAAcrC,EAAInZ,OACpCsb,GAAWnC,QAGd,IAGAC,EA8BYkF,CAAgBvF,EAAW1Q,EAAWsT,EAAW1L,GAC9DmJ,EAAOqC,GAAU1C,EAAW1Q,EAAWsT,GACvC4C,EAAW9C,GAAU1C,EAAWmF,GAChCtB,EAvOmB,SAAd4B,EAAexF,GAAD,IAAuBhE,EAAvB,uDAA8B,GAA9B,OAAqC,SAAA4H,GAAM,OACpEA,EAAO3P,QAAO,SAAC2M,EAAKwD,GAClB,IAAMhZ,EAAOiU,GAAa+E,EAAMhZ,MAEhC,GAAIA,EAAKpE,KAAKgc,WAAW,KACvB,OAAOpC,EAGT,GAAIxV,EAAKkU,OAASC,KAASkG,QAAUra,EAAKkU,OAASC,KAASmG,UAC1D,6BAAW9E,GAAX,CAAgB4B,SAAeA,QAAc4B,EAAMpd,SAOrD,GAJuBgZ,EAAqB2F,UAAUpU,MACpD,SAAAqU,GAAC,OAAIA,EAAExa,KAAKpE,OAASoE,EAAKpE,QAI1B,6BACK4Z,GADL,CAEE4B,SACEA,QAAc4B,EAAMpd,MACpB,KACA,KACA,KACAwb,gBAAsB,CAACA,SAAeA,QAAc,YAK1D,IAAMqD,EAAa7F,EAAqBM,MAAM/O,MAC5C,SAAAiS,GAAC,OAAIA,EAAExc,OAASoE,EAAKpE,QAGvB,OAAI6e,IAAe7J,EAAK6E,SAASgF,EAAW7e,OAC1CgV,EAAKvQ,KAAKoa,EAAW7e,MAErB,uBACK4Z,GADL,CAEE4B,SACEA,QAAc4B,EAAMpd,MACpB,KACA,KACA,KACAwb,gBACEgD,EAAYxF,EAAsBhE,EAAlCwJ,CACEK,EAAWjC,aASdhD,IACN,KAgLY4E,CAAYxF,EAAZwF,CAAkCvO,EAAS7L,KAAKwY,QAE/D,OACEjD,IAAiB2C,MACjB3C,IAAiB4D,MACjB5D,IAAiB8D,MAEjB7Q,QAAQC,IAAI,uBAAwB8M,EAAcP,EAAMmF,EAAS1C,QAAO,SAAA1C,GAAG,OAAK,CAAC,OAAQ,SAASU,SAASV,EAAInZ,KAAKsK,WAC7GkR,YAAkB,CACvBA,uBACE,QACAA,gBAAsB,CACpBA,SACEA,QAAczC,EAAU/Y,MACxBwb,QAAc,SACdpC,EACA,KACAoC,gBAAsBoB,IAExBpB,SACEA,QAAA,UAAiBzC,EAAU/Y,KAA3B,eACAwb,QAAc,SACd+C,EAAS1C,QAAO,SAAA1C,GAAG,OAAK,CAAC,OAAQ,SAASU,SAASV,EAAInZ,KAAKsK,UAC5D,KACAkR,gBAAsB,CACpBA,SACEA,QAAc,aACd,KACA,KACA,KACAA,gBAAsB,CAACA,SAAeA,QAAc,kBAK5DA,QAAczC,EAAU/Y,MACxBqe,MAKF1E,IAAiBiE,KACZpC,YAAkB,CACvBA,uBACE,WACAA,gBAAsB,CACpBA,SACEA,QAAczC,EAAU/Y,MACxBwb,QAAc,QACdpC,EACA,KACAoC,gBAAsB,CACpBA,SAAeA,QAAc,YAInCA,QAAczC,EAAU/Y,MACxBqe,KAKF1E,IAAiBgE,KACZnC,YAAkB,CACvBA,uBACE,QACAA,gBAAsB,CACpBA,SACEA,QAAczC,EAAU/Y,MACxBwb,QAAc,QACdpC,EACA,KACAoC,gBAAsBoB,MAG1BpB,QAAczC,EAAU/Y,MACxBqe,KAKF1E,IAAiBmE,MAAUnE,IAAiBkE,KACvCrC,YAAkB,CACvBA,uBACE,WACAA,gBAAsB,CACpBA,SACEA,QAAczC,EAAU/Y,MACxBwb,QAAc,QACdpC,EACA,KACAoC,gBAAsBoB,MAG1BpB,QAAczC,EAAU/Y,MACxBqe,KAKC7C,YAAkB,CACvBA,uBACEsD,KAAYjF,SAASF,GAAgB,QAAU,WAC/C6B,gBAAsB,CACpBA,SACEA,QAAczC,EAAU/Y,MACxBwb,QAAc,QACdpC,EACA,KACAoC,gBAAsBoB,MAG1BpB,QAAczC,EAAU/Y,MACxBqe,OL1VFvJ,GMoCW,SAAAkE,GAAoB,OAAI,SAAAW,GAAY,OAAI,SAAAoF,GACrD,IAAMrW,EAAOqW,EAASrW,KAGtB,OAFAkE,QAAQC,IAAI,gBAAiBnE,EAAMiR,GAGjCA,IAAiB2C,MACjB3C,IAAiB4D,MACjB5D,IAAiB8D,MAEjB7Q,QAAQC,IAAI,CACVnE,KAAMqW,EAASrW,KAAKsW,MAAM/Y,IAAI8V,IAC9BkD,MAAOF,EAASrW,KAAKuW,MAAMC,UAAUC,QAEhC,CACLzW,KAAMqW,EAASrW,KAAKsW,MAAM/Y,IAAI8V,IAC9BkD,MAAOF,EAASrW,KAAKuW,MAAMC,UAAUC,QAIlC,CAAEzW,KAAMqT,GAAiBrT,EAAKA,UNtDlC,SAAAsQ,GACD,IAAMoG,EAAiBpG,EAAqB2F,UAAU1Y,KAAI,SAAA2Y,GAAC,OAAIA,EAAExa,KAAKpE,QAGtE,OAFA4M,QAAQC,IAAI,iBAAkBuS,GAEvB,SAACzF,EAAc0F,EAAc1U,GAChC,IAAMsF,EAAW+I,EAAqB2F,UAAUpU,MAC5C,SAAAqU,GAAC,OAAIA,EAAExa,KAAKpE,OAASqf,KAGzB,IAAKpP,EACD,MAAM,IAAI0D,MAAJ,2BACkB0L,EADlB,4FACkHD,EAAeE,KAC/H,QAKZ,IAAMvG,EAAY9I,EAAS0J,GAE3B,IAAKZ,EACD,MAAM,IAAIpF,MAAJ,mDAC0CgG,EAD1C,wCAEE1J,EAAS7L,KAAKpE,OAK1B,IAAMqI,EAAYuM,GAAmBoE,EAAnBpE,CACd3E,EACA0J,EACAhP,EACAoO,GAcJ,MAAO,CACH2C,MAbU7G,GAAkBmE,EAAlBnE,CACV5E,EACA0J,EACAZ,EACA1Q,GAUAA,YACAkX,cATkBzK,GAAsBkE,EAAtBlE,CAClB6E,EACA1J,EACA8I,OO1CNyG,GAAiB,CACrBC,WAAYC,GACZC,cAAe,CACbC,gBAAc,qBACXtD,MAAW,SAAArM,GACV,gBAAU3L,KAAUub,KAAU5P,EAASjQ,WAF7B,eAIX2d,MAAU,SAAA1N,GAAQ,gBAAO4P,KAAU5P,EAASjQ,UAJjC,eAKXud,MAAW,SAAAtN,GAAQ,gBAAO3L,KAAUub,KAAU5P,EAASjQ,WAL5C,eAMXyd,MAAqB,SAAAxN,GAAQ,gBAAO3L,KAAUub,KAAU5P,EAASjQ,WANtD,eAOX6d,MAAS,SAAA5N,GAAQ,sBAAaA,EAASjQ,SAP5B,eAQX8d,MAAS,SAAA7N,GAAQ,sBAAaA,EAASjQ,SAR5B,eASX4d,MAAS,SAAA3N,GAAQ,sBAAaA,EAASjQ,SAT5B,MCAZ8f,GAAsB,SAACC,GAAD,OAC1B,IAAIC,SAAQ,SAACC,EAASC,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,EAAKO,SAE1BH,EAAOI,OAAS,kBAAMN,EAAQE,EAAOjM,SACrCiM,EAAOK,QAAUN,MAafzO,GAAO,IAAIgP,KAAS,CAExBC,IAAK,8BAGDC,GAAS,IAAIC,KAAa,CAC9BnP,QACAoP,MAAO,IAAIC,KACXtB,eAlBqB,CACrBuB,WAAY,CACVC,YAAa,WACbC,YAAa,UAEfvF,MAAO,CACLsF,YAAa,WACbC,YAAa,UAcJC,GAAe,IAAIN,KAAaD,IAEhCQ,GAAe,yCAAG,6BAAAvJ,EAAA,+EDhBhB7N,ECkBiC,CAAE4W,OAAQO,IDjBjDE,aAAkBC,KAAM,GAAI7B,GAAgBzV,IAAU0M,MAC3D,SAAA6K,GACE,OAAO,SAACC,EAAWtR,EAAUtF,GAG3B,GAAI4W,IAAcC,KAAa,KACrBhE,EAAwB7S,EAAxB6S,IAAQiE,EADa,YACG9W,EADH,SAE7B,OAAOqV,QAAQ0B,IACblE,EAAIvX,KAAI,SAAAxD,GAAE,OACR6e,EAAoB1D,KAAQ3N,EAAT,cACjBxN,MACGgf,QAGPhL,MAAK,SAAAvJ,GAML,MAAO,CAAExE,KALIwE,EAAQD,QACnB,SAAC2M,EAAD,OAAQlR,EAAR,EAAQA,KAAR,6BAAuBkR,GAAvB,CAA4BlR,EAAKjG,OACjC,QAQN,GAAI8e,IAAcI,KAAa,KACrBnE,EAA8B7S,EAA9B6S,IAAK9U,EAAyBiC,EAAzBjC,KAAS+Y,EADO,YACS9W,EADT,gBAE7B,OAAOqV,QAAQ0B,IACblE,EAAIvX,KAAI,SAAAxD,GAAE,OACR6e,EAAoBxD,KAAQ7N,EAAT,cACjBvH,KAAM,cACJjG,MACGiG,IAEF+Y,QAGPhL,MAAK,SAAAvJ,GAML,MAAO,CAAExE,KALIwE,EAAQD,QACnB,SAAC2M,EAAD,OAAQlR,EAAR,EAAQA,KAAR,6BAAuBkR,GAAvB,CAA4BlR,EAAKjG,OACjC,QAON,OAAO6e,EAAoBC,EAAWtR,EAAUtF,OChCzB,cAErBiX,EAFqB,0BAGpB,SAACL,EAAWtR,EAAUtF,GAC3B,GACe,YAAbsF,IACCtF,EAAOjC,OACPiC,EAAOjC,KAAKmZ,QACiB,IAA9BlX,EAAOjC,KAAKmZ,OAAOxd,OAEnB,OAAOud,EAASL,EAAWtR,EAAUtF,GAGvC,GAAkB,WAAd4W,EAAwB,QACnB5W,EAAOjC,KAAKoZ,UAMnB,IAAMC,EAAcpX,EAAOjC,KAAKmZ,OAAOhG,QACrC,SAACmG,GAAD,OAAOA,EAAE1B,mBAAmBjH,QAExB4I,EAAiBtX,EAAOjC,KAAKmZ,OAAOhG,QACxC,SAACmG,GAAD,QAASA,EAAE1B,mBAAmBjH,SAGhC,OAAO2G,QAAQ0B,IAAIK,EAAY9b,IAAI6Z,KAChCrJ,MAAK,SAACyL,GAAD,OACJA,EAAejc,KAAI,SAACkc,GAAD,MAAgB,CACjCC,IAAKD,EACLxiB,MAAM,GAAD,OAAKgL,EAAOjC,KAAK1I,KAAjB,aAA0B2K,EAAOjC,KAAKa,KAAtC,YAGRkN,MAAK,SAAC4L,GAAD,OACJT,EAAS,SAAU3R,EAAX,gBACHtF,EADG,CAENjC,KAAK,gBACAiC,EAAOjC,KADR,CAEFmZ,OAAO,GAAD,oBAAMI,GAAN,aAAyBI,YAIlC,GAAkB,WAAdd,EAAwB,CAEjC,IAAMQ,EAAcpX,EAAOjC,KAAKmZ,OAAOhG,QACrC,SAACmG,GAAD,OAAOA,EAAE1B,mBAAmBjH,QAG9B,OAAO2G,QAAQ0B,IAAIK,EAAY9b,IAAI6Z,KAChCrJ,MAAK,SAACyL,GAAD,OACJA,EAAejc,KAAI,SAACkc,GAAD,MAAgB,CACjCC,IAAKD,EACLxiB,MAAM,GAAD,OAAKgL,EAAOjC,KAAK1I,KAAjB,aAA0B2K,EAAOjC,KAAKa,KAAtC,YAGRkN,MAAK,SAAC4L,GAAD,OACJT,EAAS,SAAU3R,EAAX,gBACHtF,EADG,CAENjC,KAAK,gBACAiC,EAAOjC,KADR,CAEFmZ,OAAQQ,UAKhB,OAAOT,EAASL,EAAWtR,EAAUtF,MAlEd,gCAsE3BiC,QAAQqJ,MAAM,KAAEU,SAtEW,kCDhBhB,IAAA5M,ICgBgB,oBAAH,qD,qQCvC5B,IAAMuY,GAAWva,KAAH,MAyECwa,GA1DM,CACnBC,MAAM,WAAD,8BAAE,oCAAA5K,EAAA,6DAAS6K,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,SAAnB,SACkBxB,GAAaxF,MAAM,CACxCA,MAAO4G,GACPja,UAAW,CACTC,MAAO,CACLqa,IAAK,CACH,CACE3iB,KAAMyiB,GAER,CACEC,SAAUA,QAVf,UACC3D,EADD,OAgBC6D,EAAY7D,EAASrW,KAAKma,MAAM,GACH,IAA/B9D,EAASrW,KAAKma,MAAMxe,OAjBnB,sBAkBG,IAAIsP,MAAM,eAlBb,cAoBLvQ,aAAa0f,QAAQ,QAASF,EAAU5iB,MACxCoD,aAAa0f,QAAQ,cAAeF,EAAUG,WAAWC,eACzD5f,aAAa0f,QACX,QACAG,KAAKC,UAAU,CACbljB,KAAM4iB,EAAUO,MAAMnjB,KACtByC,GAAImgB,EAAUO,MAAM1gB,MA1BnB,kBA6BEud,QAAQC,QAAQ2C,IA7BlB,4CAAF,mDAAC,GAgCNtiB,OAAQ,WAIN,OAHA8C,aAAaggB,WAAW,SACxBhgB,aAAaggB,WAAW,eACxBhgB,aAAaggB,WAAW,SACjBpD,QAAQC,WAEjBoD,UAAW,WAET,OADAzW,QAAQC,IAAI,YAAazJ,aAAaC,QAAQ,UACvCD,aAAaC,QAAQ,SAAW2c,QAAQC,UAAYD,QAAQE,UAErEoD,WAAY,SAACrN,GACXrJ,QAAQC,IAAI,aAAcoJ,GAC1B,IAAMsN,EAAStN,EAAMsN,OACrB,OAAe,MAAXA,GAA6B,MAAXA,GACpBngB,aAAaggB,WAAW,SACjBpD,QAAQE,UAEVF,QAAQC,WAEjBuD,eAAgB,WACd,IAAMC,EAAOrgB,aAAaC,QAAQ,eAClC,OAAOogB,EAAOzD,QAAQC,QAAQwD,GAAQzD,QAAQE,W,uFCjD5CrJ,GAAW,iBAAM,cACjB3H,GAAiB,CAAE9I,IAAK,aAAcC,MAAO,aAEtCqd,GAAkB,SAAAjmB,GAM7B,OALiBqD,aACjBD,CAAS+N,GAAe,CACtBM,GACA,CAAE9I,IAAK,oBAAqBC,MAAO,iBAGnC,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAavY,QAAQ,WAAWkZ,SAAUA,IACxC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,iBACnC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,gBAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,YAClB,kBAAC6V,GAAA,EAAD,CAAuB7V,OAAO,OAAO8V,QAAS,CAC5C,CAAErhB,GAAI,SAAUzC,KAAM,UACtB,CAAEyC,GAAI,YAAazC,KAAM,mBAOtB+jB,GAAgB,SAAAtmB,GAC3B,IAAMoD,EAAWC,cACjB,OACE,kBAACkjB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAavY,QAAQ,WAAWkZ,SAAUA,IACxC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,iBACnC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,gBAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,YAClB,kBAAC6V,GAAA,EAAD,CAAuB7V,OAAO,OAAO8V,QAAS,CAC5C,CAAErhB,GAAI,SAAUzC,KAAM,UACtB,CAAEyC,GAAI,YAAazC,KAAM,gBAE3B,kBAACmX,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAEF,OADA3U,EAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAI,cAAD,OAAgBoP,EAAS/S,IAAM4D,MAAM,SAAD,OAAWmP,EAASxV,UAC/F,WAQNikB,GAAgB,SAAAxmB,GAG3B,OAFiBqD,aACjBD,CAAS+N,GAAe,CAACM,MAEvB,kBAACc,GAAA,EAASvS,EACR,kBAAC6T,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,SAClB,kBAAC,KAAD,CAAWA,OAAO,gBAClB,kBAAC,KAAD,CAAWA,OAAO,SAElB,kBAAC8B,GAAA,EAAD,MACA,kBAACqU,GAAA,EAAD,SAMKC,GAAgB,SAAA3mB,GAC3B,IAAMoD,EAAWC,cACjB,OACE,kBAACujB,GAAA,EAAmB5mB,GACjB,SAAA6mB,GACC,IAAMje,EAAQie,EAAgBrW,OAASqW,EAAgBrW,OAAOjO,KAAO,GAC/DyC,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAEhE,OADA5B,EAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAI,kBAAD,OAAoB3D,EAApB,SAA+B4D,MAAM,YAAD,OAAcA,OAE9F,kBAACke,GAAA,EAAD,iBAAc9mB,EAAW6mB,GACvB,kBAACE,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,OAClB,kBAAC,KAAD,CAAWA,OAAO,SAClB,kBAAC,KAAD,CAAWA,OAAO,gBAClB,kBAAC,KAAD,CAAWA,OAAO,YAClB,kBAAC,KAAD,CAAWA,OAAO,e,sBClG1B6I,GAAW,iBAAM,aACjB3H,GAAiB,CAAE9I,IAAK,YAAaC,MAAO,YAErCoe,GAAiB,SAAChnB,GAG7B,OAFiBqD,aACjBD,CAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAK,mBAAoBC,MAAO,iBAEzE,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,iBACnC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,QAAQ4V,SAAUc,iBACpC,kBAAC/U,GAAA,EAAD,CAAW3B,OAAO,YAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,UAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,QAClB,kBAAC2B,GAAA,EAAD,CAAWgV,WAAS,EAAC3W,OAAO,iBAC5B,kBAAC2B,GAAA,EAAD,CAAWgV,WAAS,EAAC3W,OAAO,kBAMvB4W,GAAe,SAACnnB,GAC3B,IAAMoD,EAAWC,cACjB,OACE,kBAACkjB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,iBACnC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,QAAQ4V,SAAUc,iBACpC,kBAAC/U,GAAA,EAAD,CAAW3B,OAAO,YAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,UAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,QAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,iBAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,eAClB,kBAACmJ,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAEF,OADA3U,EAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAI,aAAD,OAAeoP,EAAS/S,IAAM4D,MAAM,SAAD,OAAWmP,EAASxV,UAC9F,WAQN6kB,GAAe,SAACpnB,GAC3B,IAAMoD,EAAWC,cACjB,OACE,kBAACujB,GAAA,EAAmB5mB,GACjB,SAAC6mB,GACA,IAAMje,EAAQie,EAAgBrW,OAASqW,EAAgBrW,OAAOjO,KAAO,GAC/DyC,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAEhE,OADA5B,EAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAI,aAAD,OAAe3D,EAAf,SAA0B4D,MAAM,YAAD,OAAcA,OAEzF,kBAACke,GAAA,EAAD,iBAAc9mB,EAAW6mB,GACvB,kBAACE,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,SAClB,kBAAC8W,GAAA,EAAD,CAAY9W,OAAO,UACnB,kBAAC,KAAD,CAAWA,OAAO,YAClB,kBAAC,KAAD,CAAWA,OAAO,UAClB,kBAAC,KAAD,CAAWA,OAAO,QAClB,kBAAC,KAAD,CAAWA,OAAO,iBAClB,kBAAC,KAAD,CAAWA,OAAO,eAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,oBASnBgX,GAAe,SAACvnB,GAG3B,OAFiBqD,aACjBD,CAAS+N,GAAe,CAACM,MAEvB,kBAACc,GAAA,EAAD,iBAAUvS,EAAV,CAAiB0f,KAAM,CAAEC,MAAO,YAAaC,MAAO,UAClD,kBAAC/L,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,SAClB,kBAAC8W,GAAA,EAAD,CAAY9W,OAAO,UACnB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAElB,kBAAC8B,GAAA,EAAD,MACA,kBAACqU,GAAA,EAAD,S,iCC/DFtN,I,QAAW,iBAAM,oBACjB3H,GAAiB,CAAE9I,IAAK,kBAAmBC,MAAO,mBAE3C4e,GAAuB,SAACxnB,GAQnC,OAPiBqD,aACjBD,CACE+N,GAAe,CACbM,GACA,CAAE9I,IAAK,yBAA0BC,MAAO,iBAI1C,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAYW,SAAUA,IACpB,kBAACqO,GAAA,EAAD,CACE7e,MAAM,UACN2H,OAAO,YACPwD,UAAU,UACV2L,KAAM,CAAEC,MAAO,YAAaC,MAAO,SAEnC,kBAAC8H,GAAA,EAAD,CAAaC,WAAW,OAAO/e,MAAM,yBAEvC,kBAAC8e,GAAA,EAAD,CACEnX,OAAO,gBACP4V,SAAUrI,eACVuI,QAAS,CACP,CAAErhB,GAAI,MAAOzC,KAAM,oBACnB,CAAEyC,GAAI,SAAUzC,KAAM,UACtB,CAAEyC,GAAI,QAASzC,KAAM,YAGzB,kBAACqlB,GAAA,EAAD,CAAWrX,OAAO,SAAS4V,SAAUrI,oBAwChC+J,GAAqB,SAAC7nB,GACjC,IAAMoD,EAAWC,cACjB,OACE,kBAACujB,GAAA,EAAmB5mB,GACjB,SAAC6mB,GACA,IACM7hB,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAOhE,OANA5B,EACE+N,GAAe,CACbM,GACA,CAAE9I,IAAI,kBAAD,OAAoB3D,EAApB,SAA+B4D,MAAM,YAAD,OAL/B,eASZ,kBAACke,GAAA,EAAD,iBAAc9mB,EAAW6mB,GACvB,kBAACE,GAAA,EAAD,KACE,kBAACjT,GAAA,EAAD,CACElL,MAAM,UACNmL,UAAU,UACVxD,OAAO,cAEP,kBAAC,KAAD,CAAWA,OAAO,OAAO3H,MAAM,yBAEjC,kBAAC0e,GAAA,EAAD,CAAW/W,OAAO,WAClB,kBAAC,KAAD,CAAWA,OAAO,kBAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,oBASnBuX,GAAqB,SAAC9nB,GAGjC,OAFiBqD,aACjBD,CAAS+N,GAAe,CAACM,MAEvB,kBAACc,GAAA,EAAD,iBAAUvS,EAAV,CAAiB0f,KAAM,CAAEC,MAAO,YAAaC,MAAO,UAClD,kBAAC/L,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC3S,GAAA,EAAD,CAAgBlL,MAAM,UAAUmL,UAAU,UAAUxD,OAAO,cACzD,kBAAC,KAAD,CAAWA,OAAO,OAAO3H,MAAM,yBAEjC,kBAAC0e,GAAA,EAAD,CAAW/W,OAAO,WAClB,kBAAC,KAAD,CAAWA,OAAO,kBAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAACmW,GAAA,EAAD,S,qFC5IF/lB,GAAYC,MAAW,SAAAC,GAAK,MAAK,CACrC+H,MAAO,CACLgB,QAAS/I,EAAMG,QAAQ,GACvB+G,cAAe,EACf5H,MAAOU,EAAMK,QAAQ6mB,KAAKC,MAE5BD,KAAM,CACJne,QAAS/I,EAAMG,QAAQ,GACvB8G,WAAY,EACZ3H,MAAOU,EAAMK,QAAQ6mB,KAAK5mB,aAuBf8mB,OAnBf,YAAwC,IAApBrf,EAAmB,EAAnBA,MAAOvI,EAAY,EAAZA,SACnBsC,EAAUhC,KAChB,OACE,kBAAC,IAAM2M,SAAP,KACE,yBAAK1K,UAAWD,EAAQiG,OACtB,kBAAClE,EAAA,EAAD,CAAYxE,QAAQ,WAAW0I,IAEjC,yBAAKhG,UAAWD,EAAQolB,MACtB,kBAACrjB,EAAA,EAAD,CAAYxE,QAAQ,WAAWG,M,wCC2OxB6nB,OAzOf,YAAwC,EAAbC,UAAc,IACjCjlB,EAAYC,cAsKZilB,EAAuB,SAACrQ,EAAUC,GAChBD,EAAdsQ,UACR,OACE,kBAAC,IAAM/a,SAAP,KACE,kBAACgH,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACxU,GAAA,EAAD,CACEtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,YACPwD,UAAU,UACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAACuU,GAAA,EAAD,CACEhY,OAAO,gBACPwD,UAAU,aACVvD,OAAQuH,EACR/D,MAAM,IAEL,gBAAGwU,EAAH,EAAGA,gBAAH,OACC,kBAACd,GAAA,EAAD,CACEtS,WAAS,EACTlJ,aAAcsc,GAAmBA,EAAgBxjB,GACjDyV,UAAQ,EACR4L,QACEmC,GAAmB,CACjB,CAAExjB,GAAIwjB,EAAgBxjB,GAAIzC,KAAMimB,EAAgB1c,OAGpDyE,OAAO,sBAMhBwH,EAAS0Q,cArHY,SAAC1Q,GAC3B,OACE,kBAACzD,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACxU,GAAA,EAAD,CACEtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,eACPwD,UAAU,aACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAACuU,GAAA,EAAD,CACEhY,OAAO,UACPwD,UAAU,eACVvD,OAAQuH,EACR/D,MAAM,IAEL,gBAAGwU,EAAH,EAAGA,gBAAH,OACC,kBAACd,GAAA,EAAD,CACEtS,WAAS,EACTiR,QACEmC,GAAmB,CACjB,CACExjB,GAAIwjB,EAAgBxjB,GACpBzC,KAAK,GAAD,OAAKimB,EAAgBvV,QAArB,aAAiCuV,EAAgB1c,KAAjD,OAIVI,aAAcsc,GAAmBA,EAAgBxjB,GACjDyV,UAAQ,EACRlK,OAAO,oBAuFWmY,CAAoB3Q,GAC7CA,EAAS4Q,YA7EZ,kBAAC,KAAD,CAAOpmB,KAAK,UACT,YAAgB,IAAbqmB,EAAY,EAAZA,MACM/b,EAA0B+b,EAA1B/b,MAAanC,GAAake,EAAnBrmB,KAAmBqmB,EAAble,UAChBmC,GACHnC,EAAS,QAGX,IAAMme,EAAe,SAAC1iB,GACpBuE,EAASvE,IAEX,OACE,kBAACmO,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACQ,GAAA,EAAD,CAAa5oB,QAAQ,SAASkV,WAAS,GACrC,kBAAC2T,GAAA,EAAD,CAAY/jB,GAAG,cACZ9B,EAAU,qBAEb,kBAAC8lB,GAAA,EAAD,CACEpgB,MAAM,aACN8B,SAAU,SAAC4O,GAAD,OAAOuP,EAAavP,EAAEC,OAAO1M,QACvC3K,MAAM,SACNgK,aAAa,QAEZ,CACC,CAAElH,GAAI,OAAQzC,KAAM,QACpB,CAAEyC,GAAI,SAAUzC,KAAM,UACtB,CAAEyC,GAAI,SAAUzC,KAAM,UACtB,CAAEyC,GAAI,YAAazC,KAAM,cACzBiG,KAAI,SAACkW,GAAD,OACJ,kBAACuK,GAAA,EAAD,CAAUvgB,IAAG,YAAOgW,EAAE1Z,IAAM6H,MAAO6R,EAAE1Z,IAClC0Z,EAAEnc,eAiDhBwV,EAAS4Q,YAzMgB,SAAC5Q,GAC/B,OACE,kBAAC,IAAMzK,SAAP,KACE,kBAACgH,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,uBACzB,kBAAC4Q,GAAA,EAAD,CACEtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,YACPwD,UAAU,UACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAAC9C,GAAA,EAAD,CACEX,OAAO,aACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,YAKhD,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,kBACzB,kBAAC4Q,GAAA,EAAD,CACEtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,YACPwD,UAAU,UACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAAC,KAAD,CAAWzD,OAAO,aAIxB,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAAC5G,GAAA,EAAD,CACEtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,eACPwD,UAAU,aACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAACmV,GAAA,EAAD,CACEpV,UAAU,iBACVxD,OAAO,cACP6Y,UAAU,GAEV,kBAACvV,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACElL,MAAM,IACN2H,OAAO,aACPwD,UAAU,UACVC,KAAK,QAEL,kBAAC,KAAD,CAAWzD,OAAO,OAAO3H,MAAM,iBAEjC,kBAACkL,GAAA,EAAD,CACElL,MAAM,eACN2H,OAAO,aACPwD,UAAU,UACVC,KAAK,QAEL,kBAAC,GAAD,CAAgBzD,OAAO,UAEzB,kBAACW,GAAA,EAAD,CACEX,OAAO,QACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAC,KAAD,CAAW3Y,OAAO,aAClB,kBAACW,GAAA,EAAD,CACEX,OAAO,aACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,cAiI1BG,CAAwBtR,KAKtD,OACE,kBAACzD,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACb,GAAA,EAAD,CACE7e,MAAM,iBACN2H,OAAO,YACPwD,UAAU,UACVvB,SAAS,eACT2T,SAAUrI,eACVwL,cAAe,SAACC,GAAD,MAAiB,CAAEC,cAAeD,IACjD7J,KAAM,CAAEC,MAAO,YAAaC,MAAO,SAEnC,kBAAC8H,GAAA,EAAD,CAAaC,WAAW,OAAOvS,WAAS,EAACxM,MAAM,kBAGnD,kBAAC8Q,GAAA,EAAD,CAAkB+P,aAAc,CAAEla,QAAQ,KACvC,YAA8B,IAA3BwI,EAA0B,EAA1BA,SAA0B,4BAC5B,OAAOA,EAASsQ,WAAaD,EAAqBrQ,Q,+TCrP5D,IAAM2R,GAAYpf,KAAH,MAgBA,SAASqf,GAAT,GAIX,IAHFjf,EAGC,EAHDA,SACAwB,EAEC,EAFDA,aACA4G,EACC,EADDA,SAEA3D,QAAQC,IAAI0D,EAAStK,KAAI,SAACwK,GAAD,OAAaA,EAAQA,QAAQhO,OADrD,MAEyBtB,mBAAS,IAFlC,mBAEMkF,EAFN,KAEaghB,EAFb,QAGiBzmB,cACkBwH,aAAS+e,GAAW,CACtD9e,UAAW,CACTC,MAAO,CACLE,eAAgBnC,EAChBihB,aAAc/W,EAAStK,KAAI,SAAC+b,GAAD,OAAOA,EAAEvR,QAAQhO,MAC5C8F,UAAW,CAAEgf,SAAU,YALZ3d,EAJhB,EAIOnB,QAAmBC,EAJ1B,EAI0BA,KAJ1B,EAauBmB,IAAM1I,UAAS,GAbtC,mBAaMX,EAbN,KAaYsJ,EAbZ,OAc6BD,IAAM1I,SAAS,IAd5C,mBAcM4I,EAdN,KAceC,EAdf,KAeKvB,EAAUmB,GAAapJ,GAA2B,IAAnBuJ,EAAQ1F,OAE7CwF,IAAMrC,WAAU,WACd,GAAKiB,GAIDC,EAAM,CACRkE,QAAQC,IAAI,cAAenE,GADnB,IAEAG,EAAmBH,EAAnBG,eACcA,EAAegT,QAAO,SAAC1O,GAAD,OAC1CoD,EAAStK,KAAI,SAAC+b,GAAD,OAAOA,EAAEvR,QAAQlH,QAAMsQ,SAAS1M,EAAKsD,QAAQlH,SAQ5DS,EACEnB,EAAe5C,KAAI,SAACiE,GAAD,MAAU,CAC3BzH,GAAIyH,EAAIzH,GACRzC,KAAK,IAAD,OAAMkK,EAAI7D,MAAV,cAAqB6D,EAAIuG,QAAQlH,KAAjC,YAAyCW,EAAIuG,QAAQC,QAArD,aAIT,CAACjI,EAASC,IAEbmB,IAAMrC,WAAU,WACThH,GACHwJ,EAAW,MAEZ,CAACxJ,IAeJ,OACE,kBAAC2J,GAAA,EAAD,CACE1H,GAAG,8BACH+kB,YAAU,EACVC,cAAY,EACZC,eAAa,EACblnB,KAAMA,EACN4J,OAAQ,WACNN,GAAQ,IAEVjH,QAAS,WACPiH,GAAQ,IAEV3B,SA1BiB,SAACkC,EAAKC,GAAW,IAC5BzB,EAAmBH,EAAnBG,eACHyB,IAGLnC,EAASU,EAAe0B,MAAK,SAACL,GAAD,OAASA,EAAIzH,KAAO6H,EAAM7H,OACvD4kB,EAAS,MAqBPM,cAlBsB,SAAC5Q,EAAGzM,GAC5B+c,EAAS/c,IAkBPE,eAAgB,SAACC,GAAD,OAAYA,EAAOzK,MACnC4nB,kBAAmB,SAACnd,GAAD,OAAYA,EAAOhI,IACtCsH,QAASA,EACTtB,QAASA,EACT6B,MAAOX,GAAgB,CAAElH,GAAIkH,EAAalH,GAAIzC,KAAM2J,EAAaJ,MACjEmB,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEtE,MAAM,qBACNwM,WAAS,EACTlV,QAAQ,SACRkN,WAAU,gBACLF,EAAOE,WADF,CAERC,aACE,kBAAC,IAAMC,SAAP,KACGtC,EACC,kBAACuC,GAAA,EAAD,CAAkBpN,MAAM,UAAUqN,KAAM,KACtC,KACHN,EAAOE,WAAWC,sB,i9BClHd/C,KAAH,MAAlB,IAyBM8f,GAAiB9f,KAAH,MAQd+f,GAAW/f,KAAH,MAmBC,SAASggB,GAAT,GAA+D,IAAhC5f,EAA+B,EAA/BA,SAAUmC,EAAqB,EAArBA,MAAO0d,EAAc,EAAdA,WAAc,EACnD7mB,mBAAS,IAD0C,mBACpEoI,EADoE,KAC9D0e,EAD8D,OAEzC9mB,mBAAS,IAFgC,gCAGjCiH,aAASyf,GAAgB,CACjExf,UAAW,CACTC,MAAO,CAAEiU,MAAOyL,EAAYf,cAAe1d,IAE7C2e,YAAa,SAAC5d,GACZjH,EAAQ,CACNgF,UAAW,CACTC,MAAO,CACLgf,aACEhd,EAAMiG,SAASlM,QAAU,EAAIiG,EAAMiG,SAAS,GAAG9N,GAAK,WAZW,KAGnEgG,QAHmE,EAGjD0f,YAgBqBC,uBAAaN,GAAU,CACpEI,YAAa,SAAC5d,GACZ,IAEM6C,GAFmB7C,EAAQA,EAAMzB,eAAiB,IAGrDgT,QAAO,SAAC1O,GAAD,MAAkC,QAAxBA,EAAK5E,UAAUvI,QAChCiN,QAAO,SAACC,EAASC,GAUhB,OATAD,EAAO,uBACFA,GADE,CAEL,CACEzK,GAAG,GAAD,OAAK0K,EAAKsD,QAAQhO,GAAlB,YAAwB0K,EAAK1K,IAC/BzC,KAAK,GAAD,OAAKmN,EAAKsD,QAAQlH,KAAlB,YAA0B4D,EAAKsD,QAAQC,QAAvC,aACFvD,EAAK9G,OAAS,WADZ,UAMP,IAEL2D,EAAWmD,OAtC4D,mBAmBpE9J,EAnBoE,YAmBhDuG,EAnBgD,EAmBzDnB,QAAmBC,EAnBsC,EAmBtCA,KAnBsC,EAyCnDmB,IAAM1I,UAAS,GAzCoC,mBAyCpEX,EAzCoE,KAyC9DsJ,EAzC8D,OA0C7CD,IAAM1I,SAAS,IA1C8B,mBA0CpE4I,EA1CoE,KA0C3DC,EA1C2D,KA2CrEvB,EAAUmB,GAAapJ,GAA2B,IAAnBuJ,EAAQ1F,OA+B7CwF,IAAMrC,WAAU,WACThH,GACHwJ,EAAW,MAEZ,CAACxJ,IAgBJ,OACE,kBAAC2J,GAAA,EAAD,CACE1H,GAAG,uBACHjC,KAAMA,EACN4J,OAAQ,WACNN,GAAQ,IAEVjH,QAAS,WACPiH,GAAQ,IAEV3B,SAxBiB,SAACkC,EAAKC,GAAW,IAAD,EACPA,EAAQA,EAAM7H,GAAGyB,MAAM,KAAO,GADvB,mBACjBmkB,GADiB,WAE3Bxf,EAAmBH,EAAnBG,eACHA,IAGLV,EAASU,EAAe0B,MAAK,SAACL,GAAD,OAASA,EAAIzH,KAAO4lB,MACjDJ,EAAQ,MAkBNN,cAfsB,SAAC5Q,EAAGzM,GAC5B2d,EAAQ3d,IAeNE,eAAgB,SAACC,GAAD,OAAYA,EAAOzK,MACnC4nB,kBAAmB,SAACnd,GAAD,OAAYA,EAAOhI,IACtCsH,QAASA,EACTtB,QAASA,EACT6B,MAAOA,EACPI,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEtE,MAAM,4BACNwM,WAAS,EACTlV,QAAQ,SACRkN,WAAU,gBACLF,EAAOE,WADF,CAERC,aACE,kBAAC,IAAMC,SAAP,KACGtC,EACC,kBAACuC,GAAA,EAAD,CAAkBpN,MAAM,UAAUqN,KAAM,KACtC,KACHN,EAAOE,WAAWC,sB,sZCrKnC,IAAMwd,GAAcvgB,KAAH,MAoBXwgB,GAAkB,SAAC,GAA8C,IAA5Cva,EAA2C,EAA3CA,OAA2C,IAAnCC,cAAmC,MAA1B,GAA0B,EAAfua,GAAe,EAAtBniB,MAAsB,EAAfmiB,UACrD,OACE,kBAAC,IAAMzd,SAAP,KACGkD,EAAOD,IACNC,EAAOD,GAAQ/H,KAAI,SAACkH,GAAD,OACjB,kBAACsb,GAAA,EAAD,CACEtiB,IAAG,eAAUgH,EAAKkb,QAElBhiB,MAAK,UAAK8G,EAAK9G,OAAS,YACxBmiB,SAAU,kBAAMA,EAASrb,IACzBvP,MAAM,iBAOH,cACb,OACE,kBAAC,KAAD,CAAOoC,KAAK,UACT,YAAgB,IAAbqmB,EAAY,EAAZA,MACI1lB,EAAYC,cACV0J,EAA0B+b,EAA1B/b,MAAanC,GAAake,EAAnBrmB,KAAmBqmB,EAAble,UAChBmC,GACHnC,EAAS,IAEX,IAAMme,EAAe,SAAC5O,GAEhBpN,EAAMrE,KAAI,SAACoU,GAAD,OAAOA,EAAEgO,UAAQxO,SAASnC,EAAcjV,KAGtD0F,EAAS,GAAD,oBACHmC,GADG,CAEN,CACE+d,OAAQ3Q,EAAcjV,GACtB2S,UAAWsC,EAAcjH,QAAQhO,GACjCimB,YAAahR,EAAcjH,QAAQlH,KACnCof,cAAejR,EAAcjH,QAAQmY,OACrCC,eAAgBnR,EAAcjH,QAAQC,QAGtCrK,MAAOqR,EAAcrR,MACrBmD,WAAYkO,EAAclO,WAC1Bsf,OAAQ,OAKRC,EAAqB,SAAC5b,GAC1BhF,EAASmC,EAAMuR,QAAO,SAACxB,GAAD,OAAOA,EAAEgO,SAAWlb,EAAKkb,YAGjD,OACE,kBAAClR,GAAA,EAAD,CAAkB+P,aAAc,CAAEla,QAAQ,KACvC,YAAmB,IAAhBwI,EAAe,EAAfA,SACF5I,QAAQC,IAAI,WAAY2I,GADP,IAETsQ,EAAqBtQ,EAArBsQ,UAAW9G,EAAUxJ,EAAVwJ,MACbtJ,EAASC,eAEPjN,EAASN,aAASkgB,GAAa,CACrCjgB,UAAW,CAAEC,MAAO,CAAE7F,GAAIqjB,MADpBpd,KAIF6H,EAAW7H,EAAOA,EAAKsgB,QAAQC,WAAW1Y,SAAW,GAC3D3D,QAAQC,IAAI,sBAAuB0D,GACnC,IAAMtC,EAASsC,EAAStD,QAAO,SAACC,EAAS8U,GAAM,IAErCvR,EAAsBuR,EAAtBvR,QAAYyY,EAFyB,YAEflH,EAFe,aAI7C,OADA9U,EAAQuD,EAAQhO,IAAhB,gBAA2BgO,EAA3B,GAAuCyY,GAChChc,IACN,IAcH,OAZA8R,EAAMpR,SAAQ,SAACT,GAAU,IACfiI,EAAcjI,EAAdiI,UACR,GAAKnH,EAAOmH,GAAZ,CAIA,IAAM+T,EAAWlb,EAAOmH,GAAW+T,UAAY,GAC/Clb,EAAOmH,GAAW+T,SAAlB,uBAAiCA,GAAjC,CAA2Chc,IAC3Cc,EAAOmH,GAAWgU,YAChBnb,EAAOmH,GAAW+T,SAAS9kB,YAN3BqR,EAAO,iCAAkC,WAU3C,kBAAC3D,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACb,kBAAC,GAAD,CAAU9R,MAAO1F,EAAU,kBACzB,kBAAC,GAAD,CACEwH,SAAUme,EACV+C,YAAY,qBACZ9Y,SAAUA,MAIhB,kBAACwB,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG9V,MAAO,CAAEkB,UAAW,KACpC,kBAACwkB,GAAD,CACE5f,SAAUme,EACV+C,YAAY,0BACZrB,WAAYjb,OAAOkM,KAAKhL,MAG5B,kBAAC8D,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAAC7G,GAAA,EAAD,CACE5I,KAAMuF,EACNuP,IAAKzQ,OAAOkM,KAAKhL,GACjBgC,SAAS,eACTF,SAAS,gBACTuZ,YAAa,CAAElM,MAAO,OAAQC,MAAO,QAErC,kBAAC,KAAD,CAAWrP,OAAO,OAAO3H,MAAM,sBAC/B,kBAAC,GAAD,CAAgB2H,OAAO,SACvB,kBAACW,GAAA,EAAD,CAAaX,OAAO,aACpB,kBAAC,GAAD,CACEA,OAAO,WACPwa,SAAUO,IAEZ,kBAACpa,GAAA,EAAD,CACEX,OAAO,cACP3H,MAAM,gC,qBChJxBkjB,GAAiB,SAAC,GAAsD,IAApDvb,EAAmD,EAAnDA,OAAmD,IAA3CC,cAA2C,MAAlC,GAAkC,EAAvB9F,GAAuB,EAA9B9B,MAA8B,EAAvB8B,UAAUqhB,EAAa,EAAbA,OACxDV,EAAS7a,EAAOD,GAItB,OACE,kBAACuY,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAY/jB,GAAG,4BAAf,OACA,kBAACgkB,GAAA,EAAD,CACEgD,QAAQ,2BACRhnB,GAAG,qBACH6H,MAAOwe,EACP3gB,SAVe,SAAC4O,GACpB5O,EAAS4O,EAAEC,OAAO1M,MAAO2D,EAAOoa,UAW3BqB,KAAMF,EAAS,GAAGvjB,KAAI,SAAA2U,GAAC,OACtB,kBAAC8L,GAAA,EAAD,CAAUvgB,IAAG,iBAAY8H,EAAOoa,OAAnB,YAA6BzN,EAAI,GAAKtQ,MAAOsQ,EAAI,GAA9D,OAAsEA,EAAI,SAOrE,cAAO,IAAD,EACSzZ,mBAAS,GADlB,mBACZqoB,EADY,KACJG,EADI,KAEnB,OACE,kBAAC,KAAD,CAAO3pB,KAAK,UACT,YAAgB,IAAbqmB,EAAY,EAAZA,MAEM/b,GADU1J,cACgBylB,EAA1B/b,OAAanC,GAAake,EAAnBrmB,KAAmBqmB,EAAble,UACrByE,QAAQC,IAAI,oBAAqBvC,GAEjC,IAYM2D,EAAS3D,EAAM2C,QAAO,SAAC2R,EAAGvE,GAE9B,OADAuE,EAAEvE,EAAEgO,QAAUhO,EACPuE,IACN,IAEH,OACE,kBAAC7M,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAAC7G,GAAA,EAAD,CACE5I,KAAMuF,EACNuP,IAAKzQ,OAAOkM,KAAKhL,GACjBgC,SAAS,eACTF,SAAS,gBACTuZ,YAAa,CAAElM,MAAO,OAAQC,MAAO,QAErC,kBAAC,KAAD,CAAWrP,OAAO,gBAClB,kBAAC,GAAD,CAAgBA,OAAO,gBACvB,kBAACW,GAAA,EAAD,CAAaX,OAAO,UACpB,kBAAC,GAAD,CAAgBA,OAAO,SAAS7F,SA9BnB,SAAC2gB,EAAQT,GAEf/d,EAAMC,MAAK,SAAA8P,GAAC,OAAIA,EAAEgO,SAAWA,KACrCS,OAASA,EAEd3gB,EAAS,aAAImC,IACTwe,EAASU,GACXG,EAAUb,IAuBkDU,OAAQA,WCqKjEI,OArOf,YAAgC,IAAdhE,EAAa,EAAbA,UACVjlB,EAAYC,cAGlB,OAFAgM,QAAQC,IAAI+Y,GAGV,kBAACzO,GAAA,EAAD,CAAkB+P,aAAc,CAAEla,QAAQ,KACvC,YAAmB,IAAhBwI,EAAe,EAAfA,SAEIvH,GADiDuH,EAA/CsQ,UAA+CtQ,EAApC0Q,aAAoC1Q,EAAtB4Q,WAAsB5Q,EAAVwJ,MAC9BxJ,EAASwJ,MAAM/R,QAAO,SAAC2R,EAAGhE,GAEvC,OADAgE,EAAEhE,EAAEyN,QAAUzN,EACPgE,IACN,KACH,OACE,kBAAC,IAAM7T,SAAP,KACE,kBAACgH,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACb,kBAAC,GAAD,CAAU9R,MAAO1F,EAAU,6BAC3B,kBAAC4Q,GAAA,EAAD,CACItB,SAAS,eACTF,SAAS,gBACT/B,OAAO,eAAewD,UAAU,aAChCvD,OAAQuH,EACR/D,MAAM,GAET,kBAACF,GAAA,EAAD,CACGtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,UACPwD,UAAU,eACVvD,OAAQuH,EACR/D,MAAM,GAGN,kBAAC,KAAD,CAAWzD,OAAO,sBAItB,kBAAC,GAAD,CAAU3H,MAAM,SACf,kBAACkL,GAAA,EAAD,CACGtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,eAAewD,UAAU,aAChCvD,OAAQuH,EACR/D,MAAM,GAET,kBAACF,GAAA,EAAD,CACGtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,UACPwD,UAAU,eACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAACF,GAAA,EAAD,CACAtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,cACPwD,UAAU,WACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAAC,KAAD,CAAWzD,OAAO,gBAKtB,kBAAC,GAAD,CAAU3H,MAAM,SAChB,kBAACkL,GAAA,EAAD,CACItB,SAAS,eACTF,SAAS,gBACT/B,OAAO,eAAewD,UAAU,aAChCvD,OAAQuH,EACR/D,MAAM,GAET,kBAACF,GAAA,EAAD,CACGtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,UACPwD,UAAU,eACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAACF,GAAA,EAAD,CACAtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,cACPwD,UAAU,WACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAAC,KAAD,CAAWzD,OAAO,eAKtB,kBAAC,GAAD,CAAU3H,MAAO1F,EAAU,4BAC3B,kBAAC4Q,GAAA,EAAD,CACItB,SAAS,eACTF,SAAS,gBACT/B,OAAO,eAAewD,UAAU,aAChCvD,OAAQuH,EACR/D,MAAM,GAET,kBAACF,GAAA,EAAD,CACGtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,UACPwD,UAAU,eACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAACF,GAAA,EAAD,CACAtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,cACPwD,UAAU,WACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAAC,KAAD,CAAWzD,OAAO,uBAKtB,kBAAC,GAAD,CAAU3H,MAAM,SAChB,kBAACkL,GAAA,EAAD,CACItB,SAAS,eACTF,SAAS,gBACT/B,OAAO,eAAewD,UAAU,aAChCvD,OAAQuH,EACR/D,MAAM,GAET,kBAACF,GAAA,EAAD,CACGtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,UACPwD,UAAU,eACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAACF,GAAA,EAAD,CACAtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,cACPwD,UAAU,WACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAAC,KAAD,CAAWzD,OAAO,gBAKtB,kBAAC,GAAD,CAAU3H,MAAM,SAChB,kBAACkL,GAAA,EAAD,CACItB,SAAS,eACTF,SAAS,gBACT/B,OAAO,eAAewD,UAAU,aAChCvD,OAAQuH,EACR/D,MAAM,GAET,kBAACF,GAAA,EAAD,CACGtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,UACPwD,UAAU,eACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAACF,GAAA,EAAD,CACAtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,cACPwD,UAAU,WACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAAC,KAAD,CAAWzD,OAAO,gBAMxB,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACb,kBAAC,GAAD,CAAU9R,MAAO1F,EAAU,gBACxB2N,OAAQub,OAAO,eAElB,kBAAC,GAAD,CAAUxjB,MAAM,QACd,kBAACkL,GAAA,EAAD,CACEtB,SAAS,eACTF,SAAS,gBACT/B,OAAO,YACPwD,UAAU,UACVvD,OAAQuH,EACR/D,MAAM,GAEN,kBAAC,KAAD,CAAWzD,OAAO,OAAO3H,MAAM,wBAGnC,kBAAC,GAAD,CAAUA,MAAO1F,EAAU,8BACzB,kBAAC,KAAD,CAAWqN,OAAO,eAAeC,OAAQuH,KAE3C,kBAAC,GAAD,CAAUnP,MAAO1F,EAAU,oBAA3B,cAIF,kBAACoR,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAAC7G,GAAA,EAAD,CACE5I,KAAMuF,EACNuP,IAAKzQ,OAAOkM,KAAKhL,GACjBgC,SAAS,eACTF,SAAS,gBACTuZ,YAAa,CAAElM,MAAO,OAAQC,MAAO,QAErC,kBAAC,KAAD,CAAWrP,OAAO,gBAClB,kBAAC,GAAD,CAAgBA,OAAO,gBACvB,kBAACW,GAAA,EAAD,CAAaX,OAAO,UACpB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,eAClB,kBAAC,KAAD,CAAW3H,MAAM,UAAU2H,OAAO,mB,qKC3MpD,IAAM5P,GAAYC,MAAW,SAACC,GAAD,MAAY,CACvCwrB,OAAQ,CACNhjB,MAAO,OACPxH,WAAYhB,EAAMG,QAAQ,GAC1Bc,YAAajB,EAAMG,QAAQ,IAE7BsrB,MAAO,CACLxmB,UAAWjF,EAAMG,QAAQ,GACzBurB,aAAc1rB,EAAMG,QAAQ,GAC5B4I,QAAS/I,EAAMG,QAAQ,IAEzBwrB,QAAS,CACP5iB,QAAS/I,EAAMG,QAAQ,EAAG,EAAG,QAG3B6pB,GAAcvgB,KAAH,MAQXmiB,GAAqB,SAACzsB,GAAW,IAAD,EACnB0sB,aAAU,gBAApBnrB,EAD6B,oBAE9BorB,EAAaC,eACb3U,EAASC,eACT2U,EAAYC,eACVxa,EAAuBtS,EAAvBsS,SAAU8G,EAAapZ,EAAboZ,SALkB,EAMLzO,aAASkgB,GAAa,CACnDjgB,UAAW,CAAE5F,GAAI6nB,EAAUtd,OAAO8Y,aADb0E,GANa,EAM5B/hB,QAN4B,EAMnBC,MAGXlE,EAAcimB,uBAAY,WAAM,MAEPH,EAAUtd,OAA/BgS,EAF4B,EAE5BA,MAAU0L,EAFkB,yBAGpC9d,QAAQC,IAAI2d,EAAIxB,QAAQzf,MACxBvK,EACE,CACE6P,QAAS,CACPnG,KAAK,gBACAgiB,EADD,CAEFnhB,KAAK,MAAD,OAAQihB,EAAIxB,QAAQzf,MACxByV,MAAOA,EAAM/Y,KAAI,kBAAoC,CACnDmP,UADe,EAAGA,UAElBiT,OAFe,EAAcA,OAG7BS,OAHe,EAAsBA,eAQ7C,CACE6B,UAAW,YAA0B,IAAjBC,EAAgB,EAAtBliB,KACZgN,EAAO,0BAA2B,OAAQ,CACxCmV,YAAa,IAEfT,EAAWvT,EAAU9G,EAAU6a,EAAUnoB,GAAImoB,IAE/CE,UAAW,SAAC7U,GAAD,OAAWP,EAAO,UAAD,OAAWO,EAAMU,SAAW,gBAG3D,CAAC3X,EAAQ0W,EAAQ0U,EAAYra,EAAUua,EAAWzT,IAErD,OAAO,kBAACkU,GAAA,EAAD,iBAAgBttB,EAAhB,CAAuButB,yBAA0BxmB,MAW3C,YAAC/G,GACd,IAAMoD,EAAWC,cACXH,EAAYC,cACZR,EAAUhC,KAHQ,GAIRoR,eAEoBrO,mBAAS,IANrB,mBAMjB8pB,EANiB,KAMLC,EANK,KAOxBrqB,EACE+N,GAAe,CACb,CAAExI,IAAK,gBAAiBC,MAAO,iBAC/B,CAAED,IAAK,uBAAwBC,MAAO,iBAQ1C,IAAM8kB,EAAQ,CACZxqB,EAAU,8BACVA,EAAU,8BACVA,EAAU,2BACVA,EAAU,wBA2BNyqB,EAAa,WACjBF,EAAcD,EAAa,IAGvBI,EAAa,WACjBH,EAAcD,EAAa,IAG7B,OACE,kBAACK,GAAA,EAAD,iBACM7tB,EADN,CAEEmU,OAAQ,SAACgU,GACP,OACE,8BACE,0BAAMvlB,UAAWD,EAAQ0pB,QACvB,kBAAC/gB,GAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC3d,GAAA,EAAD,CAAS6e,WAAYA,EAAY5qB,UAAWD,EAAQ6pB,SACjDkB,EAAMllB,KAAI,SAACI,GAAD,OACT,kBAACiG,GAAA,EAAD,CAAMnG,IAAKE,GACT,kBAACkG,GAAA,EAAD,KAAYlG,QAKlB,kBAAC,IAAM0E,SAAP,KACkB,IAAfkgB,GACC,kBAAC,GAAD,CAAiBrF,UAAWA,IAEd,IAAfqF,GACC,kBAAC,GAAD,CAAmBrF,UAAWA,IAEhB,IAAfqF,GAAoB,kBAAC,GAAD,CAAYrF,UAAWA,IAC5B,IAAfqF,GAAoB,kBAAC,GAAD,CAAQrF,UAAWA,IAExC,kBAAC,KAAD,KACE,kBAAC9c,GAAA,EAAD,CAAKxC,QAAQ,OAAOilB,eAAe,WAAWzkB,MAAM,QACjDmkB,EAAa,GACZ,kBAACte,GAAA,EAAD,CAAQ5K,QAASspB,EAAYztB,MAAM,WAChC+C,EAAU,gBAGdsqB,EAAaE,EAAM9mB,OAAS,GAC3B,kBAACsI,GAAA,EAAD,CAAQ5K,QAASqpB,EAAYxtB,MAAM,WAChC+C,EAAU,gBAGf,kBAAC,GAAD,CACEuX,SAAU+S,IAAeE,EAAM9mB,OAAS,EACxC0L,SAAS,gBACT8G,SAAS,6B,0GCvMlB,SAAS2U,GAAsBzY,GAK5C,IAJA,IAAI0Y,EAAW1Y,EACZiQ,cACA/P,QAAQ,+BAAgC,KACxC/O,MAAM,KACA0W,EAAI,EAAGA,EAAI6Q,EAASpnB,OAAQuW,IACnC6Q,EAAS7Q,GAAK6Q,EAAS7Q,GAAG8Q,OAAO,GAAGvY,cAAgBsY,EAAS7Q,GAAG+Q,UAAU,GAE5E,OAAOF,EAASnM,KAAK,KCFvB,IAkKesM,GAlKK,SAACC,GAAD,OAAe,WACjC,IAAIC,EAAMxd,OACNyd,EAAa,IAAIC,KAAI,SACrBtjB,EAAO,GAUPujB,EAAM,IAAIC,KAAM,IAAK,MACzBD,EAAIjP,KAAO,EACX,IACIlW,EAAQmlB,EAAIE,SAASC,SAASC,WAC9B1gB,EAASsgB,EAAIE,SAASC,SAASE,YAwE/BviB,EAAU,CACZwiB,kBAxEW,WACX,IAAIxZ,EAAMkZ,EAAIE,SAASK,mBAAmBC,WACT,oBAAtBR,EAAIS,gBACb3Z,GAAY,kCAEdkZ,EAAIU,YAAY,IAChBV,EAAIW,aAAa,QACjBX,EAAIzG,KAAK1e,EAAQ,IAAK,GAAI,kBAE1BmlB,EAAIU,YAAY,IAChBV,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,YAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKqG,EAAU5C,WAAW4D,KAAKjE,QAC7CqD,EAAIzG,KAAK,IAAK,IAAKqG,EAAU5C,WAAW4D,KAAKC,gBAC7Cb,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,SAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKqG,EAAU5C,WAAW4D,KAAKE,SAASnE,QACtDqD,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,QAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKqG,EAAU5C,WAAW4D,KAAKG,MAAQnB,EAAU5C,WAAW4D,KAAKG,MAAMP,WAAa,IAClGR,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,QACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKqG,EAAU5C,WAAW4D,KAAKG,MAAQnB,EAAU5C,WAAW4D,KAAKG,MAAMP,WAAa,IAElGR,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,SACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKsG,EAAIjC,OAAO,gBAC9BoC,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKqG,EAAU5C,WAAW1f,MACxC0iB,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKqG,EAAU5C,WAAW4D,KAAKE,SAASxjB,MACtD0iB,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,cACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKlX,KAAMud,EAAU5C,WAAWgE,cAAcpD,OAAO,gBACnEoC,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,SACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKzS,GAEnBkZ,EAAIiB,aAAa,KACjBjB,EAAIkB,aAAa,EAAG,EAAG,GACvBlB,EAAIvgB,KAAK,GAAI,IAAK5E,EAAQ,GAAI,KAC9BmlB,EAAIvgB,KAAK,GAAI,IAAK5E,EAAQ,GAAI,MAW9BsmB,iBARW,WACXnB,EAAIU,YAAY,GAChBV,EAAIzG,KAAK1e,EAAQ,GAAI6E,EAAS,GAAI,UAAYsgB,EAAIjP,MAClDiP,EAAIjP,QAMJ1e,MAAO,UACP+uB,aAAc,CACZlO,MAAO,CAAEmO,YAAa,IACtBC,GAAI,CAAED,YAAa,IACnBE,IAAK,CAAEF,YAAa,KACpBG,IAAK,CAAEH,YAAa,IACpB/f,MAAO,CAAE+f,YAAa,IACtBI,OAAQ,CAAEJ,YAAa,GAAIK,OAAQ,UAGrCC,WAAY,CAAEC,WAAW,EAAOC,UAAW,SAC3CzrB,MAAO,CAAE0rB,UAAW,QACpB5iB,OAAQ,CAAEI,IAAK,IAAKyiB,OAAQ,IAAKC,WAAY,KAwB/C,GArBApC,EAAU5C,WAAW1Y,SAAStK,KAAI,SAACkH,EAAM+F,GACvC,IAAIgb,EAAI,CACN/O,MAAOjM,EAAQ,EACfqa,GAAIpgB,EAAKsD,QAAQlH,KACjBikB,IAAKrgB,EAAKsD,QAAQmY,OAClB6E,IAAKtgB,EAAKM,SACVF,MAAOJ,EAAKI,MACZmgB,OAAQvgB,EAAKghB,YAEfzlB,EAAKjE,KAAKypB,MAGZjC,EAAImC,UAnHM,CACR,CAAEnS,QAAS,QAASoS,OAAQ,QAC5B,CAAEpS,QAAS,KAAMoS,OAAQ,cACzB,CAAEpS,QAAS,MAAOoS,OAAQ,eAC1B,CAAEpS,QAAS,MAAOoS,OAAQ,OAC1B,CAAEpS,QAAS,QAASoS,OAAQ,SAC5B,CAAEpS,QAAS,SAAUoS,OAAQ,WA6GZ3lB,EAAMqB,GACzBkiB,EAAIU,YAAY,IAChBV,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,eAClDtC,EAAIzG,KAAK1e,EAAQ,GAAK,EAAI+kB,EAAU5C,WAAWuF,SAAS9f,QAAQ,GAAG+d,WAAWpoB,OAAQ4nB,EAAImC,UAAUE,SAASC,OAAS,GAAI1C,EAAU5C,WAAWuF,SAAS9f,QAAQ,GAAG+d,YACnKR,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,qBAClDtC,EAAIzG,KAAK1e,EAAQ,GAAK,GAAK+kB,EAAU5C,WAAWwF,eAAe/f,QAAQ,GAAG+d,WAAWpoB,OAAS,GAAI4nB,EAAImC,UAAUE,SAASC,OAAS,GAAI1C,EAAU5C,WAAWwF,eAAe/f,QAAQ,GAAG+d,YACrLR,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,iBAClDtC,EAAIzG,KAAK1e,EAAQ,GAAK,EAAI+kB,EAAU5C,WAAWyF,WAAWhgB,QAAQ,GAAG+d,WAAWpoB,OAAQ4nB,EAAImC,UAAUE,SAASC,OAAS,GAAI1C,EAAU5C,WAAWyF,WAAWhgB,QAAQ,GAAG+d,YACnKZ,EAAU5C,WAAWyF,aAAe/gB,SAASke,EAAU5C,WAAWyF,WAAY,IAChFzC,EAAIzG,KAAK,GAAIyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,yBAA2B/C,GAAsBO,EAAW4C,QAAQ9C,EAAU5C,WAAWyF,aAAe,cACpJ,CACL,IAAME,EAAU/C,EAAU5C,WAAWyF,WAAWhgB,QAAQ,GAAG+d,WAAWvoB,MAAM,KAC5E+nB,EAAIzG,KAAK,GAAIyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,yBAA2B/C,GAAsBO,EAAW4C,QAAQhhB,SAASihB,EAAQ,MAAQ,QAAUpD,GAAsBO,EAAW4C,QAAQhhB,SAAsB,GAAbihB,EAAQ,MAAa,gBAEjO3C,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAIyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,cACjDtC,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,qBAClDtC,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAIyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,aAClDtC,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,0CACnDtC,EAAIU,YAAY,GAChBV,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,2CACnDtC,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAS,IAAKznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,KAC/FtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,yCACnDtC,EAAIiB,aAAa,GACjBjB,EAAIkB,aAAa,EAAG,EAAG,GACvBlB,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAQznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,QAChFtC,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAC9FtC,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAC9FtC,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAC9FtC,EAAIiB,aAAa,KACjBjB,EAAIkB,aAAa,EAAG,EAAG,GACvBlB,EAAIvgB,KAAK,GAAIugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAC7FtC,EAAIvgB,KAAK,GAAIugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAE5D,oBAAtBtC,EAAIS,eACbT,EAAIS,cA/Ic,8BAiJpBT,EAAI4C,KAAK,uB,qBCEIC,GAnKK,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAAsB,WACxC,IAAIjD,EAAMxd,OACN5F,EAAO,GASPujB,EAAM,IAAIC,KAAM,IAAK,MACzBD,EAAIjP,KAAO,EACX,IACIlW,EAAQmlB,EAAIE,SAASC,SAASC,WAC9B1gB,EAASsgB,EAAIE,SAASC,SAASE,YA6F/BviB,EAAU,CACZwiB,kBA5FW,WACX,IAAIxZ,EAAMkZ,EAAIE,SAASK,mBAAmBC,WACT,oBAAtBR,EAAIS,gBACb3Z,GAAY,kCAEdkZ,EAAIU,YAAY,IAChBV,EAAIW,aAAa,QACjBX,EAAIzG,KAAK1e,EAAQ,IAAK,GAAI,iBAC1BmlB,EAAIU,YAAY,IAChBV,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,GAAI,YACjByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,GAAIuJ,EAAa9F,WAAW4D,KAAKjE,QAC/CqD,EAAIzG,KAAK,IAAK,GAAIuJ,EAAa9F,WAAW4D,KAAKC,gBAC/Cb,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,SAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKuJ,EAAa9F,WAAW4D,KAAKE,SAASnE,QACzDqD,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,QAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKuJ,EAAa9F,WAAW4D,KAAKG,MAAQ+B,EAAa9F,WAAW4D,KAAKG,MAAMP,WAAa,IACxGR,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,QACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKuJ,EAAa9F,WAAW4D,KAAKG,MAAQ+B,EAAa9F,WAAW4D,KAAKG,MAAMP,WAAa,IAExGR,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,YAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKuJ,EAAa9F,WAAW4D,KAAKjE,QAChDqD,EAAIzG,KAAK,IAAK,IAAKuJ,EAAa9F,WAAW4D,KAAKC,gBAChDb,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,SAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKuJ,EAAa9F,WAAW4D,KAAKE,SAASnE,QACzDqD,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,QAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKuJ,EAAa9F,WAAW4D,KAAKG,MAAQ+B,EAAa9F,WAAW4D,KAAKG,MAAMP,WAAa,IACxGR,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,QACnByG,EAAIW,aAAa,UAEjBX,EAAIzG,KAAK,IAAK,IAAKuJ,EAAa9F,WAAW4D,KAAKG,MAAQ+B,EAAa9F,WAAW4D,KAAKG,MAAMP,WAAa,IAExGR,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,SACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKsG,EAAIjC,OAAO,gBAC9BoC,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKuJ,EAAaxlB,MAChC0iB,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKuJ,EAAa9F,WAAW4D,KAAKE,SAASxjB,MACzD0iB,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,cACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKlX,KAAMygB,EAAa/F,QAAQgG,cAAcnF,OAAO,gBACnEoC,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,SACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKzS,GAEnBkZ,EAAIiB,aAAa,KACjBjB,EAAIkB,aAAa,EAAG,EAAG,GACvBlB,EAAIvgB,KAAK,GAAI,IAAK5E,EAAQ,GAAI,KAC9BmlB,EAAIvgB,KAAK,GAAI,IAAK5E,EAAQ,GAAI,MAW9BsmB,iBARW,WACXnB,EAAIU,YAAY,GAChBV,EAAIzG,KAAK1e,EAAQ,GAAI6E,EAAS,GAAI,UAAYsgB,EAAIjP,MAClDiP,EAAIjP,QAMJ1e,MAAO,UACP+uB,aAAc,CACZlO,MAAO,CAAEmO,YAAa,IACtBC,GAAI,CAAED,YAAa,IACnBE,IAAK,CAAEF,YAAa,KACpB2B,OAAQ,CAAE3B,YAAa,IACvBG,IAAK,CAAEH,YAAa,KAGtBM,WAAY,CAAEC,WAAW,EAAOC,UAAW,SAC3CzrB,MAAO,CAAE0rB,UAAW,QACpB5iB,OAAQ,CAAEI,IAAK,IAAKyiB,OAAQ,IAAKC,WAAY,KAGzCiB,EAAeC,KAAOC,QAAQL,EAAa/P,MAAO,gBAC1CjS,OAAOC,OAAOkiB,GAAcjpB,KAAI,SAAC2N,GAC7C,IAAMM,EAASN,EAAM3G,QAAO,SAAC2K,EAAGsW,GAC9B,IAAMmB,EAAQ/gB,KAAMsJ,EAAEzK,KAAK3D,YACrB8lB,EAAQhhB,KAAM4f,EAAE/gB,KAAK3D,YAC3B,OAAOgF,KAAK+gB,IAAID,EAAQxD,GAAOtd,KAAK+gB,IAAIF,EAAQvD,GAAOoC,EAAItW,KAG7D,OADA1D,EAAOuZ,IAAM7Z,EAAMvP,OACZ6P,KAEHjO,KAAI,SAACqE,EAAO4I,GAChB,IAAIgb,EAAI,CACN/O,MAAOjM,EAAQ,EACfqa,GAAIjjB,EAAMmG,QAAQlH,KAClBikB,IAAKljB,EAAMmG,QAAQmY,OACnB6E,IAAKnjB,EAAMmjB,IACXwB,OAAQ3gB,KAAMhE,EAAM6C,KAAK3D,YAAYqgB,OAAO,gBAE9CnhB,EAAKjE,KAAKypB,MAEZthB,QAAQC,IAAI,YAAanE,GACzBujB,EAAImC,UA/IM,CACR,CAAEnS,QAAS,QAASoS,OAAQ,QAC5B,CAAEpS,QAAS,KAAMoS,OAAQ,cACzB,CAAEpS,QAAS,MAAOoS,OAAQ,eAC1B,CAAEpS,QAAS,SAAUoS,OAAQ,eAC7B,CAAEpS,QAAS,MAAOoS,OAAQ,QA0IT3lB,EAAMqB,GACzBkiB,EAAIU,YAAY,IAChBV,EAAIW,aAAa,UACjBX,EAAIU,YAAY,GAChBV,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,2CAClDtC,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAS,IAAKznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,KAC/FtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,yCACnDtC,EAAIiB,aAAa,KACjBjB,EAAIkB,aAAa,EAAG,EAAG,GACvBlB,EAAIvgB,KAAK,GAAIugB,EAAImC,UAAUE,SAASC,OAAS,EAAGznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,GAC5FtC,EAAIvgB,KAAK,GAAIugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAE5D,oBAAtBtC,EAAIS,eACbT,EAAIS,cAlJc,8BAoJpBT,EAAI4C,KAAK,uB,qkBCtIX,IAAMW,GAASznB,KAAH,MAgCG,eAA+B,EAA5BqH,YAA6B,IAAb3R,EAAY,+BACtCoD,EAAWC,cACXH,EAAYC,cACZ8C,EAAU8L,eAChB5C,QAAQC,IAAI,oBAAqBpP,GACjC,IAIMgyB,EAAa,SAACxhB,GAAD,OAAY,WAC7BrB,QAAQC,IAAI,WAAYoB,GACxBvK,EAAQe,KAAR,wBAA8BwJ,EAAOxL,GAArC,SAAgD,CAC9CwL,aAGEyhB,EAAe,SAACzhB,GAAD,OAAY,WAC/BrB,QAAQC,IAAI,WAAYoB,GACxBvK,EAAQe,KAAR,wBAA8BwJ,EAAOxL,GAArC,WAAkD,CAChDwL,aAlBwC,EA4Bb7F,aAASonB,GAAQ,CAC9CnnB,UAAW,CAAEC,MAAO,CAAE7F,GAAIhF,EAAMgF,OAD1BgG,EA5BoC,EA4BpCA,QAAe+hB,EA5BqB,EA4B3B9hB,KAGb8hB,GACF5d,QAAQC,IAAI,MAAO2d,EAAIuE,aAAa9F,WAAWrlB,OAGjD,IACI+rB,GAAS,EAIb,OAHInF,IACFmF,EAASnF,GAA6C,SAAtCA,EAAIuE,aAAa9F,WAAWrlB,OAG5C,kBAACmO,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACb,kBAAChW,EAAA,EAAD,CAAYxE,QAAQ,MACjBgD,EAAU,sBADb,OAEIgvB,EAKE,KAJF,kBAAChjB,GAAA,EAAD,CAAQ/O,MAAM,UAAUqN,KAAK,QAAQlJ,QAzChC,WAAO,IACZU,EAAOhF,EAAPgF,GACRiB,EAAQe,KAAR,wBAA8BhC,EAA9B,YAwCU,kBAAC,KAAD,MADF,OAES9B,EAAU,gBAGnBgvB,EAKE,KAJF,kBAAChjB,GAAA,EAAD,CAAQ/O,MAAM,UAAUqN,KAAK,QAAQlJ,QAAS+sB,GAAYtE,GAAMtS,SAAUzP,GACxE,kBAACmnB,GAAA,EAAD,MADF,OAESjvB,EAAU,kBAIvB,kBAAC0jB,GAAA,EAAD,eAAgB1kB,MAAM,yBAA4BlC,IAC/C,SAAC6mB,GACcA,EAAgBrW,QAASqW,EAAgBrW,OAAO1E,KAA9D,IACM9G,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAOhE,OANA5B,EACE+N,GAAe,CACb,CAAExI,IAAK,gBAAiBC,MAAO,iBAC/B,CAAED,IAAI,iBAAD,OAAmB3D,EAAnB,SAA8B4D,MAAM,cAI3C,kBAACke,GAAA,EAAaD,EACZ,kBAACE,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWne,MAAM,eAAe2H,OAAO,SACvC,kBAACuD,GAAA,EAAD,CAAgBlL,MAAM,gBAAgBmL,UAAU,UAAUxD,OAAO,cAC/D,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,kBAEpB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,oBAO9B,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAAC6E,WAAS,EAACmG,GAAI,EAAGF,UAAU,SAASxZ,QAAS,GACtD,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,YACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACwB,GAAA,EAAD,CAA0B3f,MAAM,WAAWmL,UAAU,aAAaxD,OAAO,gBAAgByD,MAAM,IAC5F,gBAAGwU,EAAH,EAAGA,gBAAH,0CACC,kBAAC1U,GAAA,EAAD,CAAgBtB,SAAS,WAAWF,SAAS,YAAY/B,OAAO,UAAUwD,UAAU,eAAevD,OAAQgY,GAAmB,GAAIxU,KAAK,QACrI,kBAACF,GAAA,EAAD,CAAgBtB,SAAS,WAAWF,SAAS,YAAY/B,OAAO,cAAcwD,UAAU,WAAWvD,OAAQgY,GAAmB,GAAIxU,KAAK,QACrI,kBAAC,KAAD,CAAWzD,OAAO,oBAQhC,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,eACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACjT,GAAA,EAAD,CAAgBlL,MAAM,kBAAkBmL,UAAU,aAAaxD,OAAO,gBAAgByD,KAAK,QACzF,kBAAC,KAAD,CAAWzD,OAAO,aAK1B,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,WACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACjT,GAAA,EAAD,CAAgBlL,MAAM,cAAcmL,UAAU,UAAUxD,OAAO,aAAayD,KAAK,QAC/E,kBAAC,KAAD,CAAWzD,OAAO,cAM5B,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAAC6E,WAAS,EAACmG,GAAI,EAAGF,UAAU,SAASxZ,QAAS,GACtD,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,YACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACwB,GAAA,EAAD,CAA0B3f,MAAM,WAAWmL,UAAU,aAAaxD,OAAO,gBAAgByD,MAAM,IAC5F,gBAAGwU,EAAH,EAAGA,gBAAH,0CACC,kBAACW,GAAA,EAAD,CAAqB7W,SAAS,cAAcE,SAAS,iBAAiBuB,UAAU,iBAAiBxD,OAAO,cAAcC,OAAQgY,GAAmB,GAAIY,UAAU,GAC7J,kBAACvV,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAgBlL,MAAM,IAAI2H,OAAO,aAAawD,UAAU,UAAUC,KAAM,SAACtE,EAAM2iB,GAAP,yBAAgC3iB,EAAKsD,QAAQhO,GAA7C,WACtE,kBAAC,KAAD,CAAWuL,OAAO,OAAO3H,MAAM,iBAEjC,kBAACkL,GAAA,EAAD,CAAgBlL,MAAM,eAAe2H,OAAO,aAAawD,UAAU,UAAUC,KAAK,QAChF,kBAAC,GAAD,CAAgBzD,OAAO,UAEzB,kBAAC,KAAD,CAAWA,OAAO,sBASlC,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAAChW,EAAA,EAAD,CAAYxE,QAAQ,MAApB,UAEIgyB,EAKE,KAJF,kBAAChjB,GAAA,EAAD,CAAQ/O,MAAM,UAAUqN,KAAK,QAAQlJ,QAhI1B,WAAO,IAClBU,EAAOhF,EAAPgF,GACRmK,QAAQC,IAAI,qBAAsBpK,GAClCiB,EAAQe,KAAK,uBAAwB,CACnCwJ,OAAQ,CAAEhJ,aAAc,CAAExC,WA6HlB,kBAACstB,GAAA,EAAD,MADF,OAESpvB,EAAU,mBAIvB,kBAAC4jB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAACuyB,GAAA,EAAD,CAAoBxe,UAAU,eAAewF,OAAO,eAAe6P,UAAU,GAC3E,kBAACvV,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWjL,MAAM,UAAU2H,OAAO,WAClC,kBAACuD,GAAA,EAAD,CAAgBlL,MAAM,QAAQ2H,OAAO,UAAUwD,UAAU,gBAAgBC,MAAM,GAC7E,kBAAC,KAAD,CAAWzD,OAAO,WAEpB,kBAACuD,GAAA,EAAD,CAAgBlL,MAAM,aAAa2H,OAAO,UAAUwD,UAAU,gBAAgBC,MAAM,GAClF,kBAACsT,GAAA,EAAD,CAAW/W,OAAO,gBAEpB,kBAACuD,GAAA,EAAD,CAAgBlL,MAAM,IAAI2H,OAAO,aAAawD,UAAU,UAAUC,KAAK,QACrE,kBAAC,KAAD,CAAWzD,OAAO,OAAO3H,MAAM,iBAEjC,kBAACkL,GAAA,EAAD,CAAgBlL,MAAM,eAAe2H,OAAO,aAAawD,UAAU,UAAUC,KAAK,QAChF,kBAAC,GAAD,CAAgBzD,OAAO,UAEzB,kBAAC2D,GAAA,EAAD,CACEC,OAAQ,SAAC3D,GAAD,OACN,kBAACtB,GAAA,EAAD,CAAQ/O,MAAM,UAAUqN,KAAK,QAAQlJ,QAAS0tB,EAAWxhB,GAASiK,SAAUyX,GAC1E,kBAAC,KAAD,MADF,OAEShvB,EAAU,mBAIvB,kBAACgR,GAAA,EAAD,CACEC,OAAQ,SAAC3D,GAAD,OACN,kBAACtB,GAAA,EAAD,CAAQ/O,MAAM,UAAUqN,KAAK,QAAQlJ,QAAS2tB,EAAazhB,GAASiK,SAAUyX,GAC5E,kBAAC,KAAD,MADF,OAEShvB,EAAU,2B,+OC/OrC,IAAMsvB,GAAeloB,KAAH,MAYH,SAASmoB,GAAT,GAGX,IAFF/nB,EAEC,EAFDA,SACOgoB,EACN,EADD7lB,MAEM3J,EAAYC,cADjB,EAEmCwH,aAAS6nB,GAAc,CACzD5nB,UAAW,CAAEzE,MAAO,cADLgG,EAFhB,EAEOnB,QAAmBC,EAF1B,EAE0BA,KAF1B,EAKuBvH,oBAAS,GALhC,mBAKMX,EALN,KAKYsJ,EALZ,KAMDtC,qBAAU,WACHhH,GACHwJ,EAAW,MAEZ,CAACxJ,IAVH,MAY6BW,mBAAS,IAZtC,mBAYM4I,EAZN,KAYeC,EAZf,KAaKvB,EAAUmB,GAAapJ,GAA2B,IAAnBuJ,EAAQ1F,OAC7CmD,qBAAU,WACHiB,GAIDC,GACFsB,EACEtB,EAAK0nB,UAAUnqB,KAAI,SAACiE,GAAD,MAAU,CAAEzH,GAAIyH,EAAIzH,GAAIzC,KAAMkK,EAAIwG,eAGxD,CAACjI,EAASC,IAxBZ,MA0ByBvH,mBAASgvB,GA1BlC,mBA0BM7lB,EA1BN,KA0Ba+lB,EA1Bb,KA2BD7oB,qBAAU,WACJ2oB,GACFE,EAAS,CAAE5tB,GAAI0tB,EAAa1tB,GAAIzC,KAAMmwB,EAAazf,YAEpD,CAACyf,IAOJ,OACE,kBAAChmB,GAAA,EAAD,CACE1H,GAAG,8BACHjC,KAAMA,EACN4J,OAAQ,WACNN,GAAQ,IAEVjH,QAAS,WACPiH,GAAQ,IAEV3B,SAfiB,SAACkC,EAAKC,GACzB+lB,EAAS/lB,GACTnC,EAASO,EAAK0nB,UAAU7lB,MAAK,SAAC+lB,GAAD,OAAOA,EAAE7tB,KAAO6H,EAAM7H,QAcjDmlB,kBAAmB,SAACnd,EAAQ4P,GAC1B,OAAO5P,EAAOhI,KAAO4X,GAEvB7P,eAAgB,SAACC,GACf,OAAOA,EAAOzK,MAEhB+J,QAASA,EACTtB,QAASA,EACT6B,MAAOA,EACPI,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEtE,MAAO1F,EAAU,qBACjBkS,WAAS,EACTlV,QAAQ,SACRkN,WAAU,gBACLF,EAAOE,WADF,CAERC,aACE,kBAAC,IAAMC,SAAP,KACGtC,EACC,kBAACuC,GAAA,EAAD,CAAkBpN,MAAM,UAAUqN,KAAM,KACtC,KACHN,EAAOE,WAAWC,sBChEnC,IAAM+L,GAAW,iBAAM,iBACjB3H,GAAiB,CAAE9I,IAAK,gBAAiBC,MAAO,gBAEzCkqB,GAAmB,SAAC9yB,GAC/BmP,QAAQC,IAAIpP,GACZ,IAAMoD,EAAWC,cAEjB,OACE,kBAACkjB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYW,SAAUA,IACpB,kBAACqO,GAAA,EAAD,CAAgB7e,MAAM,UAAU2H,OAAO,aAAawD,UAAU,WAC5D,kBAAC2T,GAAA,EAAD,CAAaC,WAAW,OAAO/e,MAAM,iBAGvC,kBAACkL,GAAA,EAAD,CACElL,MAAM,cACNmL,UAAU,UACVxD,OAAO,cAEP,kBAACuD,GAAA,EAAD,CAAgBC,UAAU,aAAaxD,OAAO,iBAC5C,kBAAC,KAAD,CAAWA,OAAO,OAAO3H,MAAM,sBAInC,kBAACkL,GAAA,EAAD,CACElL,MAAM,eACNmL,UAAU,aACVxD,OAAO,iBAEP,kBAACuD,GAAA,EAAD,CACEC,UAAU,eACVxD,OAAO,UACPyD,KAAM,SAACob,EAAMiD,GAAP,8BAAqCjD,EAAKA,KAAKpqB,GAA/C,WAEN,kBAAC,GAAD,CAAgBuL,OAAO,WAG3B,kBAACuD,GAAA,EAAD,CACElL,MAAM,WACNmL,UAAU,aACVxD,OAAO,iBAEP,kBAACuD,GAAA,EAAD,CAAgBvD,OAAO,UAAUwD,UAAU,gBACzC,kBAACD,GAAA,EAAD,CACEvD,OAAO,cACPwD,UAAU,WACVC,KAAM,SAACob,EAAMiD,GAAP,0BAAiCjD,EAAKE,SAAStqB,GAA/C,WAEN,kBAAC,GAAD,CAAgBuL,OAAO,YAK7B,kBAACmJ,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAUF,OATA3U,EACE+N,GAAe,CACbM,GACA,CACE9I,IAAI,iBAAD,OAAmBoP,EAAS/S,IAC/B4D,MAAM,SAAD,OAAWmP,EAASxV,UAIxB,WAQbwwB,GAAe,SAAC,GAAoC,IAAlCviB,EAAiC,EAAjCA,OAAQxQ,EAAyB,EAAzBA,MAAyB,KAAlB2R,YACZ4G,aAAU,aAAc/H,EAAOgb,WAAWxmB,KAA3DiG,EAD+C,EAC/CA,KACJinB,GAFmD,EACzCc,QACD,GAIb,OAHI/nB,IACFinB,EAAwB,SAAfjnB,EAAK9E,OAER+rB,EASJ,KARF,6BACE,kBAAC7f,GAAA,EAAD,CAAYC,SAAUtS,EAAMsS,SAAU9B,OAAQA,IAC9C,kBAACkW,GAAA,EAAD,CACEpU,SAAUtS,EAAMsS,SAChB9B,OAAQA,EACRgC,SAAUxS,EAAMwS,aAMXygB,GAAmB,SAACjzB,GAI/B,OAHiBqD,aACjBD,CAAS+N,GAAe,CAACM,MACzBtC,QAAQC,IAAIpP,GAEV,kBAACuS,GAAA,EAAD,iBAAUvS,EAAV,CAAiB0f,KAAM,CAAEC,MAAO,YAAaC,MAAO,UAClD,kBAAC/L,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,SAClB,kBAACuD,GAAA,EAAD,CACElL,MAAM,cACNmL,UAAU,aACVxD,OAAO,gBACPyD,KAAK,QAEL,kBAAC,KAAD,CAAWzD,OAAO,OAAO3H,MAAM,qBAEjC,kBAACkL,GAAA,EAAD,CACElL,MAAM,UACNmL,UAAU,UACVxD,OAAO,aACPyD,KAAK,QAEL,kBAAC,KAAD,CAAWzD,OAAO,OAAO3H,MAAM,iBAEjC,kBAACkL,GAAA,EAAD,CACElL,MAAM,WACNmL,UAAU,aACVxD,OAAO,iBAEP,kBAACuD,GAAA,EAAD,CAAgBvD,OAAO,UAAUwD,UAAU,gBACzC,kBAACD,GAAA,EAAD,CACEvD,OAAO,cACPwD,UAAU,WACVC,KAAM,SAACob,EAAMiD,GAAP,0BAAiCjD,EAAKE,SAAStqB,GAA/C,WAEN,kBAAC,GAAD,CAAgBuL,OAAO,YAK7B,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAElB,kBAAC2D,GAAA,EAAD,CACEC,OAAQ,SAAC3D,GAAD,OACN,kBAAC,GAAD,CACEA,OAAQA,EACRxQ,MAAOA,U,wRCxJrB,IAAMkzB,GAAiB5oB,KAAH,MAQP6oB,GAAmB,SAACnzB,GAC7B,IAAMiY,EAASC,eADwB,EAEVE,aAAY8a,IAAlCE,EAFgC,oBAGjChwB,EAAWC,cACX4C,EAAU8L,eAEVvB,EADW6iB,eACOltB,MAAMqK,OANS,EAOO9M,qBAPP,mBAOhC4vB,EAPgC,KAOfC,EAPe,KASjCC,EAAiB,SAACxzB,GA2BpB,OAAO,kBAACstB,GAAA,EAAD,iBAAgBttB,EAAhB,CAAuButB,yBA1BV,WAChB6F,EAAmB,CACfxoB,UAAW,CACPC,MAAO,CACH7F,GAAIwL,EAAO8gB,aAAatsB,IAE5BiG,KAAM,CACFsW,MAAO,CACHkS,OAAQ,CACJ5oB,MAAO,CAAE7F,GAAIwL,EAAOxL,IACpBiG,KAAM,CAAE2f,OAAQ0I,EAAgB1I,OAAQjT,UAAW2b,EAAgBtuB,GAAIqmB,OAAQiI,EAAgBjI,cAM9GrS,MAAK,SAACnM,GACHsC,QAAQC,IAAI,MAAOvC,GACnBoL,EAAO,iBACPmB,OAEHH,OAAM,SAACT,GACJP,EAAO,UAAD,OAAWO,EAAMU,SAAW,mBAO5Cwa,EAA0B,SAAC1zB,GAAD,OAC5B,kBAAC,KAAYA,EACT,kBAACwzB,EAAD,CAAgB5qB,MAAM,cAAc+qB,eAAe,EAAOzzB,QAAQ,WAIpE0zB,EAAiB,SAACC,GAAD,gBAAeA,EAAOrjB,OAAO1E,KAA7B,YAAqC+nB,EAAOrjB,OAAOyC,UAWpEmG,EAAW,WACb,OAAOnT,EAAQsU,IAAI,IAGjBuZ,EAAiB,SAACjnB,GACpBymB,EAAgB1I,OAAS/d,EAAM7H,IAuBnC,OACI,kBAACuhB,GAAA,EAAD,eAAM6L,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACnC,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,EAAUtY,QAAS,kBAAC4yB,EAAD,OACxD,kBAACjM,GAAA,EAAD,CAAgB6B,cAnCN,SAACC,GAAD,MAAiB,CACnCC,cAAeD,IAkCuC3gB,MAAM,UAAU2H,OAAO,aAAawD,UAAU,WACxF,kBAACggB,GAAA,EAAD,CAAmBtZ,UAAQ,EAACkN,WAAY,kBAACiM,EAAD,MAAoBhrB,MAAM,eAAeorB,UAzC/E,SAACxjB,GAAD,OAAY,WAE1B,OADA+iB,EAAmB/iB,GACb,GAAN,OAAUA,EAAO1E,KAAjB,YAAyB0E,EAAOyC,WAuCmFghB,gBAAiB,SAACC,EAAaC,GAAd,OAA6B,GAAM7nB,QAAS,CAAE1H,MAAO,CAAEyE,MAAO,SAEzLiqB,GA1BO,WAChB,IAAMc,EAAc,CAChBpvB,GAAIsuB,EAAgBtuB,GACpBgO,QAAS,CACLhO,GAAIsuB,EAAgBtuB,GACpB8G,KAAMwnB,EAAgBxnB,OAG9B,OACI,kBAACwI,GAAA,EAAD,CAAMC,WAAS,EAACiG,UAAU,SAAS5V,MAAO,CAAEyE,MAAO,MAC/C,kBAAC,GAAD,CAAUT,MAAM,gBACZ,kBAAC,GAAD,CAAkB8B,SAAUopB,EAAgBlI,YAAY,QAAQ9Y,SAAU,CAACshB,OAe3DC,GACpB,kBAAC,GAAD,CAAUzrB,MAAM,UACZ,kBAACuE,GAAA,EAAD,CAAWxG,KAAK,SAAS+D,SAZlB,SAAC1G,GACpBsvB,EAAgBjI,OAASnb,SAASlM,EAAMuV,OAAO1M,QAWgB+e,YAAY,eAEnE,kBAAClS,GAAA,EAAD,MACK,YAAmB,IAAhB3B,EAAe,EAAfA,SAEA,OADA3U,EAASiO,GAAe,CAAE1I,IAAI,iBAAD,OAAmBoP,EAAS/S,IAAM4D,MAAM,UAC9D,W,kOC5G/B,IAAM0rB,GAAuBhqB,KAAH,MAQpBiqB,GAAiB,SAACv0B,GAAW,IAAD,EACDoY,aAAYkc,IAAlCE,EADuB,sBAEb9H,aAAU,gBAApBnrB,EAFuB,oBAGxB0E,EAAU8L,eACVkG,EAASC,eACT2U,EAAYC,eAEZ1T,EAAW,WACb,OAAOnT,EAAQsU,IAAI,IAGjBxT,EAAcimB,uBAAY,WAC5B,GAAKH,EAAU4H,MAAf,CADkC,MAIsC5H,EAAUtd,OAA1EyD,EAJ0B,EAI1BA,QAASqY,EAJiB,EAIjBA,OAAQ7jB,EAJS,EAITA,aAAcojB,EAJL,EAIKA,OAJL,EAIahiB,MAJb,oEAKlC4rB,EAAmB,CACf5pB,UAAW,CACPK,KAAM,CACFqmB,aAAc,CACV1Y,QAAS,CACL5T,GAAIwC,EAAaxC,KAGzB2S,UAAW3E,EAAQhO,GACnB4lB,SACAS,aAIPrS,MAAK,SAACnM,GACHsC,QAAQC,IAAI,MAAOvC,GACnBoL,EAAO,iBACPmB,OAEHH,OAAM,SAACT,GACJP,EAAO,UAAD,OAAWO,EAAMU,SAAW,iBA2B3C,CAAC2T,EAAU4H,MAAO5H,EAAUtd,OAAQhO,EAAQ0W,EAAQmB,IAEvD,OAAO,kBAACkU,GAAA,EAAD,iBAAgBttB,EAAhB,CAAuButB,yBAA0BxmB,MAGtD2tB,GAA4B,SAAC10B,GAAD,OAC9B,kBAAC,KAAYA,EACT,kBAAC,GAAD,CAAgB4I,MAAM,cAAc+qB,eAAe,EAAOzzB,QAAQ,WAInE,SAASy0B,GAAmB30B,GAAQ,IAAD,EACQ0D,qBADR,mBAC/B4vB,EAD+B,KACdC,EADc,KAErBlwB,aAEjBD,CAASiO,GAAe,CAAE1I,IAAK,uBAAwBC,MAAO,2BAE9D,IAQMigB,EAAe,SAAC9Q,GAAD,OAAc,SAACkC,GAChClC,EAAS6S,OAAS3Q,EAAcjV,GAChC+S,EAASnP,MAAQqR,EAAcrR,QAG7BgrB,EAAiB,SAACC,GAAD,gBAAeA,EAAOrjB,OAAO1E,KAA7B,YAAqC+nB,EAAOrjB,OAAOyC,UA8B1E,OACI,kBAACiT,GAAA,EAAWlmB,EACR,kBAACyY,GAAA,EAAD,CAAY3X,QAAS,kBAAC,GAAD,MAA+BZ,QAAQ,YACxD,kBAACunB,GAAA,EAAD,CAAgB7e,MAAM,eAAe2H,OAAO,kBAAkBwD,UAAU,gBACpE,kBAAC2T,GAAA,EAAD,CAAajN,UAAQ,EAACkN,WAAW,KAAK/e,MAAM,sBAEhD,kBAAC6e,GAAA,EAAD,CAAgB6B,cAjDN,SAACC,GAAD,MAAiB,CACnCC,cAAeD,IAgDuC3gB,MAAM,UAAU2H,OAAO,aAAawD,UAAU,WACxF,kBAACggB,GAAA,EAAD,CAAmBpM,WAAY,kBAACiM,EAAD,MAAoBhrB,MAAM,eAAeorB,UA9CtE,SAACxjB,GAAD,OAAY,WAE1B,OADA+iB,EAAmB/iB,GACb,GAAN,OAAUA,EAAO1E,KAAjB,YAAyB0E,EAAOyC,WA4C0EghB,gBAAiB,SAACC,EAAaC,GAAd,OAA6B,GAAM7nB,QAAS,CAAE1H,MAAO,CAAEyE,MAAO,SAEhLiqB,GAnCL,kBAAC5Z,GAAA,EAAD,MACK,YAA4B,IAAzB3B,EAAwB,EAAxBA,SAAwB,4BACxBA,EAAS/H,SAAWsjB,EAAgBtjB,SACpC+H,EAASjI,MAAQwjB,EAAgBxb,KACjC,IAAMsc,EAAc,CAChBpvB,GAAIsuB,EAAgBtuB,GACpBgL,SAAUsjB,EAAgBtjB,SAC1BgD,QAAS,CACLhO,GAAIsuB,EAAgBtuB,GACpB8G,KAAMwnB,EAAgBxnB,OAG9B,OACI,kBAACwI,GAAA,EAAD,CAAMC,WAAS,EAACiG,UAAU,SAAS5V,MAAO,CAAEyE,MAAO,MAC/C,kBAAC,GAAD,CAAUT,MAAM,gBACZ,kBAAC,GAAD,CAAkB8B,SAAUme,EAAa9Q,GAAW6T,YAAY,QAAQ9Y,SAAU,CAACshB,MAEvF,kBAACQ,GAAA,EAAD,CAAarkB,OAAO,SAAS3H,MAAM,iB,mmBC9H/D,IAAMisB,GAAkBvqB,KAAH,MAkCN,SAASwqB,GAAT,GAIX,IAHFpqB,EAGC,EAHDA,SACAwB,EAEC,EAFDA,aAEC,IADDrB,aACC,MADO,GACP,EACK3H,EAAYC,cAClBgM,QAAQC,IAAI,QAASvE,GAFpB,MAGmCF,aAASkqB,GAAiBhqB,GAA7CsB,EAHhB,EAGOnB,QAAmBC,EAH1B,EAG0BA,KAH1B,EAIuBmB,IAAM1I,UAAS,GAJtC,mBAIMX,EAJN,KAIYsJ,EAJZ,OAK6BD,IAAM1I,SAAS,IAL5C,mBAKM4I,EALN,KAKeC,EALf,KAMKvB,EAAUmB,GAAapJ,GAA2B,IAAnBuJ,EAAQ1F,OAE7CwF,IAAMrC,WAAU,WACd,GAAKiB,GAIDC,EAAM,CAAC,IACD8pB,EAAgB9pB,EAAhB8pB,YACRxoB,EACEwoB,EACG3W,QAAO,SAAC3R,GAAD,QAAWA,KAClBjE,KAAI,SAACiE,GAAD,MAAU,CAAEzH,GAAIyH,EAAIzH,GAAIzC,KAAMkK,EAAIX,aAG5C,CAACd,EAASC,IAEbmB,IAAMrC,WAAU,WACThH,GACHwJ,EAAW,MAEZ,CAACxJ,IASJ,OACE,kBAAC2J,GAAA,EAAD,CACE1H,GAAG,2BACHJ,MAAO,CAAEyE,MAAO,KAChBtG,KAAMA,EACN4J,OAAQ,WACNN,GAAQ,IAEVjH,QAAS,WACPiH,GAAQ,IAEV3B,SAlBiB,SAACkC,EAAKC,GAAW,IAC5BkoB,EAAgB9pB,EAAhB8pB,YACRrqB,EACEqqB,EAAY3W,QAAO,SAAC3R,GAAD,QAAWA,KAAKK,MAAK,SAACqI,GAAD,OAAQA,EAAGnQ,KAAO6H,EAAM7H,QAgBhE+H,eAAgB,SAACC,GAAD,OAAYA,EAAOzK,MACnC+J,QAASA,EACTtB,QAASA,EACT6B,MAAOX,GAAgB,CAAElH,GAAIkH,EAAalH,GAAIzC,KAAM2J,EAAaJ,MACjEmB,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEtE,MAAO1F,EAAU,yBACjBkS,WAAS,EACTlV,QAAQ,SACRkN,WAAU,gBACLF,EAAOE,WADF,CAERC,aACE,kBAAC,IAAMC,SAAP,KACGtC,EACC,kBAACuC,GAAA,EAAD,CAAkBpN,MAAM,UAAUqN,KAAM,KACtC,KACHN,EAAOE,WAAWC,sBCWpB2nB,OA7Gf,YAAwD,IAA1Bjd,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAChC9U,EAAYC,cAyFlB,OACE,kBAACmR,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACwM,GAAD,CACEjqB,MAAO,CAAED,UAAW,CAAEC,MAAO,CAAE1E,MAAO,eACtCuE,SA5Fa,SAAC8gB,GACpBxT,EAAY,gBACPD,EADM,CAETkd,eAAgBzJ,EAAW1f,KAC3B2c,aAAc+C,EAAWxmB,GACzB0rB,WAAYlF,EAAWyF,WACvBiE,cAAe1J,EAAW0J,cAC1BC,aAAc3J,EAAW4D,KACzB5D,iBAqFItf,aAAc6L,EAASyT,cAG1BzT,EAASyT,YApFkB,WAAO,IAC7BA,EAAezT,EAAfyT,WACA1Y,EAAa0Y,EAAb1Y,SACR,OACE,kBAAC,IAAMxF,SAAP,KACE,kBAACgH,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAM,QAAQ4iB,EAAW4D,KAAKtjB,MACxC,kBAAC,GAAD,CAAUlD,MAAO1F,EAAU,wBACxBsoB,EAAW4D,KAAKE,SAASrc,UAG9B,kBAACqB,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,0BACzB,kBAACgO,GAAA,EAAD,CACEX,OAAO,aACPC,OAAQgb,EACRlf,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,WAI9C,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,qBACxBsoB,EAAWrlB,QAGhB,kBAACmO,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAACnP,GAAA,EAAD,CAAOlH,aAAW,gBAChB,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAYxI,EAAU,iBACtB,kBAACwI,GAAA,EAAD,KAAYxI,EAAU,iBACtB,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SACdzI,EAAU,2BAEb,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SACdzI,EAAU,oBAEb,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SACdzI,EAAU,yBAIjB,kBAAC0I,GAAA,EAAD,KACGkH,EAAStK,KAAI,SAACqD,EAAKsR,GAClB,OACE,kBAAC1R,GAAA,EAAD,CAAU/C,IAAKmD,EAAI7G,IACjB,kBAAC0G,GAAA,EAAD,KAAYG,EAAImH,QAAQlH,MACxB,kBAACJ,GAAA,EAAD,CAAWzL,UAAU,KAAKm1B,MAAM,OAC9B,kBAAC,GAAD,CAAgB7kB,OAAO,OAAOC,OAAQ3E,EAAImH,WAE5C,kBAACtH,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAImE,UAC9B,kBAACtE,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CACEX,OAAO,QACPC,OAAQ3E,EACRS,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,UAG5C,kBAACxd,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CACEX,OAAO,aACPC,OAAQ3E,EACRS,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,kBAsBlCG,KCpBf8C,OAhFf,YAA+B,IAAbpU,EAAY,EAAZA,SACV7U,EAAYC,cACVqoB,EAAezT,EAAfyT,WAER,OACE,kBAAC,IAAMle,SAAP,KACE,kBAAC5I,EAAA,EAAD,CAAYxE,QAAQ,KAAKE,cAAY,GAClC8C,EAAU,oBAEb,kBAACoR,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,iBAAkB6U,EAASjM,OAGxD,kBAACwI,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,qBACzB,kBAAC,GAAD,CAAgBqN,OAAO,OAAOC,OAAQgb,EAAW4D,KAAKE,aAI1D,kBAAChb,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAM,QACd,kBAAC,GAAD,CAAgB2H,OAAO,OAAOC,OAAQgb,EAAW4D,SAGrD,kBAAC9a,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,kBAAmB6U,EAAS5R,QAEzD,kBAACmO,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,2BAA4B6U,EAASkd,iBAElE,kBAAC3gB,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAACnP,GAAA,EAAD,CAAOlH,aAAW,kBAChB,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAS0pB,QAAS,GAAnC,WAGA,kBAAC3pB,GAAA,EAAD,CAAWC,MAAM,SAAjB,UAEF,kBAACF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,oBACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,iBAGJ,kBAACC,GAAA,EAAD,KAEI4f,EAAW1Y,UAAY0Y,EAAW1Y,SAAStK,KAAI,SAAAwK,GAC7C,OACE,kBAACvH,GAAA,EAAD,CAAU/C,IAAKsK,EAAQhO,IACrB,kBAAC0G,GAAA,EAAD,KACE,kBAAC,GAAD,CAAgB6E,OAAO,OAAOC,OAAQwC,EAAQA,WAEhD,kBAACtH,GAAA,EAAD,CAAWC,MAAM,SAASqH,EAAQhD,UAClC,kBAACtE,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CAAaX,OAAO,QAAQC,OAAQwC,EAAS1G,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,UAEvF,kBAACxd,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CAAaX,OAAO,aAAaC,OAAQwC,EAAS1G,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,cAMpG,kBAACzd,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAW2pB,QAAS,GAApB,SACA,kBAAC3pB,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CAAaX,OAAO,aAAaC,OAAQuH,EAAUzL,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,iBCsB9FoM,OA5Ff,YAA+C,IAGzCC,EAHexd,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACvB9U,EAAYC,cAD0B,EAEZyO,eAAhBD,GAF4B,EAEpCqhB,OAFoC,EAE5BrhB,aAEZ6jB,EAAa3kB,OAEX4kB,EAAO1d,EAASyT,WAAW4D,KAAKsG,YAEtC,IAAK,CAAC,SAAStZ,SAASzK,GAAc,EACpC4jB,EAAU,IAAII,MAEFC,YAAc,KACxBJ,EAAa3kB,OAAQgB,IAAI,EAAG,OAAO8K,IAAI,OAAQ,GAC/C4Y,EAAQM,QAAQN,EAAQO,UAAY,IAItC,IAAMC,EAAgBN,EAAKrX,QAAO,SAAC4X,GAEjC,OADmBR,EAAWQ,OACTA,KAIvB,GAA4B,GAAxBD,EAAcnvB,OAAa,CAC7B,IAAMqvB,EAAcR,EAAKjtB,KAAI,SAACwtB,GAAD,OAASA,EAAM,EAAI,KAChDR,EAAa3kB,OAAQmlB,IAAIC,EAAY,SAErCT,EAAa3kB,OAAQmlB,IAAID,EAAc,IAQ3C,OALAhsB,qBAAU,WACRiO,EAAY,gBAAKD,EAAN,CAAgBwZ,aAAciE,EAAWjZ,mBACnDiZ,GACHrmB,QAAQC,IAAI2I,EAASwZ,cAGnB,0BAAM2E,YAAU,GACd,kBAAC5hB,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC5T,GAAA,EAAD,CACE6gB,QAASA,EACTnJ,OAAO,kBACPvX,MAAO,CAAC,OAAQ,QAAS,QACzBF,aAAa,SACbS,WAAS,EACTvI,MAAOkL,EAASwZ,aAAexZ,EAASwZ,aAAeiE,EACvD5sB,MAAO1F,EAAU,wBACjBwH,SAAU,SAACyrB,GAAD,OACRne,EAAY,gBAAKD,EAAN,CAAgBwZ,aAAc4E,EAAQ5Z,qBAIvD,kBAACjI,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACnb,GAAA,EAAD,CACEjN,QAAQ,SACRkV,WAAS,EACTvI,MAAOkL,EAASjM,KAChBlD,MAAO1F,EAAU,gBACjBwH,SAAU,SAAC4O,GAAD,OAAOtB,EAAY,gBAAKD,EAAN,CAAgBjM,KAAMwN,EAAEC,OAAO1M,aAG/D,kBAACyH,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACQ,GAAA,EAAD,CAAa5oB,QAAQ,SAASkV,WAAS,GACrC,kBAAC2T,GAAA,EAAD,CAAY/jB,GAAG,cACZ9B,EAAU,kBAEb,kBAAC8lB,GAAA,EAAD,CACEgD,QAAS,QACTpjB,MAAM,aACNiE,MAAOkL,EAAS5R,OAAS,WACzBuE,SAAU,SAAC4O,GAAD,OACRtB,EAAY,gBAAKD,EAAN,CAAgB5R,MAAOmT,EAAEC,OAAO1M,WAG5C,CACC,CAAE7H,GAAI,QAASzC,KAAMW,EAAU,iBAC/B,CAAE8B,GAAI,WAAYzC,KAAMW,EAAU,oBAClC,CAAE8B,GAAI,YAAazC,KAAMW,EAAU,qBACnC,CAAE8B,GAAI,UAAWzC,KAAMW,EAAU,oBACjCsF,KAAI,SAACkW,GAAD,OACJ,kBAACuK,GAAA,EAAD,CAAUvgB,IAAG,kBAAagW,EAAE1Z,IAAM6H,MAAO6R,EAAE1Z,IACxC0Z,EAAEnc,e,+XCzErB,IAAM5B,GAAYC,MAAW,SAACC,GAAD,MAAY,CACvCwrB,OAAO,aACLhjB,MAAO,OACPxH,WAAYhB,EAAMG,QAAQ,GAC1Bc,YAAajB,EAAMG,QAAQ,IAC1BH,EAAM2C,YAAY+F,GAAG,KAA0B,EAAnB1I,EAAMG,QAAQ,IAAU,CACnDqI,MAAO,KACPxH,WAAY,OACZC,YAAa,SAGjBwqB,MAAM,aACJxmB,UAAWjF,EAAMG,QAAQ,GACzBurB,aAAc1rB,EAAMG,QAAQ,GAC5B4I,QAAS/I,EAAMG,QAAQ,IACtBH,EAAM2C,YAAY+F,GAAG,KAA0B,EAAnB1I,EAAMG,QAAQ,IAAU,CACnD8E,UAAWjF,EAAMG,QAAQ,GACzBurB,aAAc1rB,EAAMG,QAAQ,GAC5B4I,QAAS/I,EAAMG,QAAQ,KAG3BwrB,QAAS,CACP5iB,QAAS/I,EAAMG,QAAQ,EAAG,EAAG,IAE/Bo1B,QAAS,CACPvtB,QAAS,OACTilB,eAAgB,YAElBuI,OAAQ,CACNvwB,UAAWjF,EAAMG,QAAQ,GACzBa,WAAYhB,EAAMG,QAAQ,QAIxBs1B,GAAmBhsB,KAAH,MAShBisB,GAAcjsB,KAAH,MASF,cACb,IAAMlH,EAAWC,cACXH,EAAYC,cACZR,EAAUhC,KACVsF,EAAU8L,eAJG,EAKEqG,aAAYme,IAA1BC,EALY,sBAMiB9yB,mBAAS,GAN1B,mBAMZ8pB,EANY,KAMAC,EANA,OAgBa/pB,mBATV,CACpBoI,KAAM,QACNmpB,eAAgB,GAChBxM,aAAc,GACd+C,WAAY,KACZ0J,cAAe,GACfxE,WAAY,EACZvqB,MAAO,cAdU,mBAgBZ4R,EAhBY,KAgBFC,EAhBE,KAkBnB5U,EACE+N,GAAe,CACb,CAAExI,IAAK,WAAYC,MAAO,WAC1B,CAAED,IAAK,kBAAmBC,MAAO,iBArBlB,IA0BL6tB,EAAgB9rB,aAAS2rB,IAA/BrrB,KACRlB,qBAAU,WACR,GACE0sB,GACAA,EAAYC,SAAS9vB,OAAS,GACZ,UAAlBmR,EAASjM,KACT,CACA,IAAM3D,EAAOsuB,EAAYC,SAAS,GAClC1e,EAAY,gBACPD,EADM,CAETjM,KAAMgN,GAA6B3Q,EAAK2D,YAG3C,CAAC2qB,EAAa1e,IAEjB,IAAM2V,EAAQ,CACZxqB,EAAU,4BACVA,EAAU,0BACVA,EAAU,mBAEN+U,EAASC,eA+Bf,OACE,0BAAMtV,UAAWD,EAAQ0pB,QACvB,kBAAC/gB,GAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC3d,GAAA,EAAD,CAAS6e,WAAYA,EAAY5qB,UAAWD,EAAQ6pB,SACjDkB,EAAMllB,KAAI,SAACI,GAAD,OACT,kBAACiG,GAAA,EAAD,CAAMnG,IAAKE,GACT,kBAACkG,GAAA,EAAD,KAAYlG,QAKlB,kBAAC,IAAM0E,SAAP,KACkB,IAAfkgB,GACC,kBAAC,GAAD,CAAoBzV,SAAUA,EAAUC,YAAaA,IAEvC,IAAfwV,GACC,kBAAC,GAAD,CAAWzV,SAAUA,EAAUC,YAAaA,IAE9B,IAAfwV,GAAoB,kBAAC,GAAD,CAAQzV,SAAUA,IAEvC,yBAAKnV,UAAWD,EAAQyzB,SACrB5I,EAAa,GACZ,kBAACte,GAAA,EAAD,CAAQ5K,QA1BD,WACjBmpB,EAAcD,EAAa,IAyBYrtB,MAAM,WAChC+C,EAAU,gBAGdsqB,EAAaE,EAAM9mB,OAAS,GAC3B,kBAACsI,GAAA,EAAD,CAAQ5K,QAvCD,WACa,KAA1ByT,EAAS0Q,cAAyC,KAAlB1Q,EAASjM,KAC3CmM,EAAO,iCAAkC,WAEzCwV,EAAcD,EAAa,IAmCUrtB,MAAM,WAChC+C,EAAU,gBAGdsqB,IAAeE,EAAM9mB,OAAS,GAC7B,kBAACsI,GAAA,EAAD,CAAQ5K,QA9DD,WACjB,IAAM2G,EAAO,CACXa,KAAMiM,EAASjM,KACf2c,aAAc1Q,EAAS0Q,aACvBiI,WAAY3Y,EAAS2Y,WACrBa,aAAcxZ,EAASwZ,aACvBprB,MAAO4R,EAAS5R,MAChBwwB,cAAe,UAEjBH,EAAW,CAAE5rB,UAAW,CAAEK,UACvB+N,MAAK,WACJ/S,EAAQe,KAAK,eAEdiS,OAAM,SAACT,GACNP,EAAO,UAAD,OAAWO,EAAMU,SAAW,eAgDC/Y,MAAM,WAChC+C,EAAU,wBCAZ0zB,GAhLM,SAACxI,GAAD,OAAe,WAClC,IAAM7C,EAAU6C,EAAU7C,QAC1Bpc,QAAQC,IAAI,UAAWmc,GACvB,IAAI8C,EAAMxd,OACNyd,EAAa,IAAIC,KAAI,SACrBtjB,EAAO,GAUPujB,EAAM,IAAIC,KAAM,IAAK,MACzBD,EAAIjP,KAAO,EACX,IACIlW,EAAQmlB,EAAIE,SAASC,SAASC,WAC9B1gB,EAASsgB,EAAIE,SAASC,SAASE,YA0E/BviB,EAAU,CACZwiB,kBAzEW,WACX,IAAIxZ,EAAMkZ,EAAIE,SAASK,mBAAmBC,WACT,oBAAtBR,EAAIS,gBACb3Z,GAAY,kCAEdkZ,EAAIU,YAAY,IAChBV,EAAIW,aAAa,QACjBX,EAAIzG,KAAK1e,EAAQ,IAAK,GAAI,WAE1BmlB,EAAIU,YAAY,IAChBV,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,YAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKwD,EAAQC,WAAW4D,KAAKjE,QAC3CqD,EAAIzG,KAAK,IAAK,IAAKwD,EAAQC,WAAW4D,KAAKC,gBAC3Cb,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,SAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKwD,EAAQC,WAAW4D,KAAKE,SAASnE,QACpDqD,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAI,IAAK,QAClByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKwD,EAAQC,WAAW4D,KAAKG,MAAQhE,EAAQC,WAAW4D,KAAKG,MAAMP,WAAa,IAC9FR,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,QACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKwD,EAAQC,WAAW4D,KAAKG,MAAQhE,EAAQC,WAAW4D,KAAKG,MAAMP,WAAa,IAE9FR,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,SACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKsG,EAAIjC,OAAO,gBAE9BoC,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKwD,EAAQzf,MAC3B0iB,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKwD,EAAQC,WAAW4D,KAAKE,SAASxjB,MACpD0iB,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,cACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKlX,KAAM0a,EAAQgG,cAAcnF,OAAO,gBACtDoC,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,aACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAK,IACnByG,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAK,IAAK,SACnByG,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAK,IAAKzS,GAEnBkZ,EAAIiB,aAAa,KACjBjB,EAAIkB,aAAa,EAAG,EAAG,GACvBlB,EAAIvgB,KAAK,GAAI,IAAK5E,EAAQ,GAAI,KAC9BmlB,EAAIvgB,KAAK,GAAI,IAAK5E,EAAQ,GAAI,MAW9BsmB,iBARW,WACXnB,EAAIU,YAAY,GAChBV,EAAIzG,KAAK1e,EAAQ,GAAI6E,EAAS,GAAI,UAAYsgB,EAAIjP,MAClDiP,EAAIjP,QAMJ1e,MAAO,UACP+uB,aAAc,CACZlO,MAAO,CAAEmO,YAAa,IACtBC,GAAI,CAAED,YAAa,IACnBE,IAAK,CAAEF,YAAa,KACpBG,IAAK,CAAEH,YAAa,IACpB/f,MAAO,CAAE+f,YAAa,IACtBI,OAAQ,CAAEJ,YAAa,GAAIK,OAAQ,UAGrCC,WAAY,CAAEC,WAAW,EAAOC,UAAW,SAC3CzrB,MAAO,CAAE0rB,UAAW,QACpB5iB,OAAQ,CAAEI,IAAK,IAAKyiB,OAAQ,IAAKC,WAAY,KAyB/C,GAtBAjF,EAAQC,WAAW1Y,SAAStK,KAAI,SAACkH,EAAM+F,GACrC,IAAIgb,EAAI,CACN/O,MAAOjM,EAAQ,EACfqa,GAAIpgB,EAAKsD,QAAQlH,KACjBikB,IAAKrgB,EAAKsD,QAAQmY,OAClB6E,IAAKtgB,EAAKM,SACVF,MAAOJ,EAAKI,MACZmgB,OAAQvgB,EAAKghB,YAEfzlB,EAAKjE,KAAKypB,MAGZjC,EAAImC,UArHM,CACR,CAAEnS,QAAS,QAASoS,OAAQ,QAC5B,CAAEpS,QAAS,KAAMoS,OAAQ,cACzB,CAAEpS,QAAS,MAAOoS,OAAQ,eAC1B,CAAEpS,QAAS,MAAOoS,OAAQ,OAC1B,CAAEpS,QAAS,QAASoS,OAAQ,SAC5B,CAAEpS,QAAS,SAAUoS,OAAQ,WA+GZ3lB,EAAMqB,GACzBkiB,EAAIU,YAAY,IAChBV,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,eAClDtC,EAAIzG,KAAK1e,EAAQ,GAAK,EAAIkiB,EAAQC,WAAWuF,SAAS9f,QAAQ,GAAG+d,WAAWpoB,OAAQ4nB,EAAImC,UAAUE,SAASC,OAAS,GAAIvF,EAAQC,WAAWuF,SAAS9f,QAAQ,GAAG+d,YAC/JR,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,qBAClDtC,EAAIzG,KAAK1e,EAAQ,GAAK,GAAKkiB,EAAQC,WAAWwF,eAAe/f,QAAQ,GAAG+d,WAAWpoB,OAAS,GAAI4nB,EAAImC,UAAUE,SAASC,OAAS,GAAIvF,EAAQC,WAAWwF,eAAe/f,QAAQ,GAAG+d,YACjLR,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,iBAClDtC,EAAIzG,KAAK1e,EAAQ,GAAK,EAAIkiB,EAAQC,WAAWyF,WAAWhgB,QAAQ,GAAG+d,WAAWpoB,OAAQ4nB,EAAImC,UAAUE,SAASC,OAAS,GAAIvF,EAAQC,WAAWyF,WAAWhgB,QAAQ,GAAG+d,YAE/JzD,EAAQC,WAAWyF,aAAe/gB,SAASqb,EAAQC,WAAWyF,WAAY,IAC5EzC,EAAIzG,KAAK,GAAIyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,yBAA2B/C,GAAsBO,EAAW4C,QAAQ3F,EAAQC,WAAWyF,aAAe,cAClJ,CACL,IAAME,EAAU5F,EAAQC,WAAWyF,WAAWhgB,QAAQ,GAAG+d,WAAWvoB,MAAM,KAC1E+nB,EAAIzG,KAAK,GAAIyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,yBAA2B/C,GAAsBO,EAAW4C,QAAQhhB,SAASihB,EAAQ,MAAQ,QAAUpD,GAAsBO,EAAW4C,QAAQhhB,SAAsB,GAAbihB,EAAQ,MAAa,gBAEjO3C,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,GAAIyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,cACjDtC,EAAIW,aAAa,UACjBX,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,GAAI,qBAClDtC,EAAIiB,aAAa,GACjBjB,EAAIkB,aAAa,EAAG,EAAG,GACvBlB,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAQznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,QAChFtC,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAC9FtC,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAC9FtC,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAC9FtC,EAAIiB,aAAa,KACjBjB,EAAIkB,aAAa,EAAG,EAAG,GACvBlB,EAAIvgB,KAAK,GAAIugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAC7FtC,EAAIvgB,KAAK,GAAIugB,EAAImC,UAAUE,SAASC,OAAS,GAAIznB,EAAQ,GAAImlB,EAAImC,UAAUE,SAASC,OAAS,IAC7FtC,EAAIqI,aAAa,IAAK,IAAK,KAC3BrI,EAAIsI,KAAK,GAAItI,EAAImC,UAAUE,SAASC,OAAS,IAAK,IAAK,IAAK,MAC5DtC,EAAIW,aAAa,QACjBX,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,UACnDtC,EAAIiB,aAAa,GACjBjB,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAS,IAAK,IAAKtC,EAAImC,UAAUE,SAASC,OAAS,KACxFtC,EAAIvgB,KAAK,IAAKugB,EAAImC,UAAUE,SAASC,OAAS,IAAK,IAAKtC,EAAImC,UAAUE,SAASC,OAAS,KACxFtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,qCACnDtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,uCACnDtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,+BACnDtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,4CACnDtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,sBACnDtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,0EACnDtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,2EACnDtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,QACnDtC,EAAIzG,KAAK,IAAKyG,EAAImC,UAAUE,SAASC,OAAS,IAAK,qBAElB,oBAAtBtC,EAAIS,eACbT,EAAIS,cA1Jc,8BA4JpBT,EAAI4C,KAAK,oB,06BCnKX,IAAMvG,GAAcvgB,KAAH,MAoDJysB,GAAc,SAAC/2B,GAC1B,IAAMoD,EAAWC,cACXH,EAAYC,cACZ8C,EAAU8L,eAHoB,EAQVpH,aAASkgB,GAAa,CAC9CjgB,UAAW,CAAEC,MAAO,CAAE7F,GAAIhF,EAAMgF,OAD1BgG,EAR4B,EAQ5BA,QAASC,EARmB,EAQnBA,KAGXrC,EAAQqC,GAAQA,EAAKsgB,QAAQzf,KAC7B9G,EAAKiG,GAAQA,EAAKsgB,QAAQvmB,GAC5BktB,GAAS,EAUb,OATIjnB,IACFinB,EAA2C,SAAlCjnB,EAAKsgB,QAAQC,WAAWrlB,OAEnC/C,EACE+N,GAAe,CACb,CAAExI,IAAK,WAAYC,MAAO,WAC1B,CAAED,IAAI,YAAD,OAAc3D,EAAd,SAAyB4D,YAIhC,kBAAC0L,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACb,kBAAChW,EAAA,EAAD,CAAYxE,QAAQ,MAApB,wBAEIgyB,EAKE,KAJF,kBAAChjB,GAAA,EAAD,CAAQ/O,MAAM,UAAUqN,KAAK,QAAQlJ,QAzBhC,WAAO,IACZgO,EAAiBtS,EAAjBsS,SAAUtN,EAAOhF,EAAPgF,GAClBiB,EAAQe,KAAR,UAAgBsL,EAAhB,YAA4BtN,EAA5B,YAwBU,kBAAC,KAAD,MADF,OAES9B,EAAU,gBAGrB,kBAACgM,GAAA,EAAD,CAAQ/O,MAAM,UAAUqN,KAAK,QAAQlJ,QAASsyB,GAAa3rB,GAAOwP,SAAUzP,GAC1E,kBAACmnB,GAAA,EAAD,MADF,OAESjvB,EAAU,kBAGrB,kBAAC4jB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,MAAoByL,GAAC,GAAK/Y,GACvC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,OAAO3H,MAAM,gBAC/B,kBAAC0e,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,iBAIxB,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAAC6E,WAAS,EAACmG,GAAI,EAAGF,UAAU,SAASxZ,QAAS,GACtD,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,eACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC7V,GAAA,EAAD,CAAaX,OAAO,aAAajE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,YAI/E,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,iBACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAAW/W,OAAO,oBAIxB,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,eACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACjT,GAAA,EAAD,CAAgBlL,MAAM,cAAcmL,UAAU,aAAaxD,OAAO,gBAAgByD,KAAK,QACrF,kBAAC,KAAD,CAAWzD,OAAO,OAAO3H,MAAM,yBAMzC,kBAAC0L,GAAA,EAAD,CAAM5E,MAAI,EAAC6E,WAAS,EAACmG,GAAI,GAAIF,UAAU,SAASxZ,QAAS,GACvD,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,SACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC8T,GAAA,EAAD,CAAgBlL,MAAM,WAAWmL,UAAU,aAAaxD,OAAO,iBAC7D,kBAAC4Y,GAAA,EAAD,CAAqBpV,UAAU,iBAAiBxD,OAAO,cAAc6Y,UAAU,GAC7E,kBAACvV,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAgBlL,MAAM,IAAI2H,OAAO,aAAawD,UAAU,UAAUC,KAAK,QACrE,kBAAC,KAAD,CAAWzD,OAAO,OAAO3H,MAAM,iBAEjC,kBAACkL,GAAA,EAAD,CAAgBlL,MAAM,eAAe2H,OAAO,aAAawD,UAAU,UAAUC,KAAK,QAChF,kBAAC,GAAD,CAAgBzD,OAAO,UAEzB,kBAACW,GAAA,EAAD,CAAaX,OAAO,QAAQjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SACpE,kBAAC,KAAD,CAAW3Y,OAAO,aAClB,kBAACW,GAAA,EAAD,CAAaX,OAAO,aAAajE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,iBCpIrF9P,GAAW,iBAAM,YAGjB3H,GAAiB,CAAE9I,IAAK,WAAYC,MAAO,WAEpCouB,GAAc,SAACh3B,GAC1B,IAAMoD,EAAWC,cACjB,OACE,kBAACkjB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYW,SAAUA,IACpB,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,eAAYlV,MAAM,gBACrD,kBAACgf,GAAA,EAAD,CAAWrX,OAAO,iBAClB,kBAACmJ,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAUF,OATA3U,EACE+N,GAAe,CACbM,GACA,CACE9I,IAAI,YAAD,OAAcoP,EAAS/S,IAC1B4D,MAAM,SAAD,OAAWmP,EAASjM,UAIxB,WAQbinB,GAAe,SAAC,GAAoC,IAAlCviB,EAAiC,EAAjCA,OAAQxQ,EAAyB,EAAzBA,MAAyB,KAAlB2R,YACZ4G,aAAU,aAAc/H,EAAOgb,WAAWxmB,KAA3DiG,EAD+C,EAC/CA,KACJinB,GAFmD,EACzCc,QACD,GAIb,OAHI/nB,IACFinB,EAAwB,SAAfjnB,EAAK9E,OAER+rB,EASJ,KARF,6BACE,kBAAC7f,GAAA,EAAD,CAAYC,SAAUtS,EAAMsS,SAAU9B,OAAQA,IAC9C,kBAACkW,GAAA,EAAD,CACEpU,SAAUtS,EAAMsS,SAChB9B,OAAQA,EACRgC,SAAUxS,EAAMwS,aAMXykB,GAAc,SAACj3B,GAG1B,OAFiBqD,aACjBD,CAAS+N,GAAe,CAACM,MAEvB,kBAACc,GAAA,EAAD,iBACMvS,EADN,CAEEk3B,oBAAqB,CAAEC,UAAW,WAClCzX,KAAM,CAAEC,MAAO,YAAaC,MAAO,UAEnC,kBAAC/L,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,OAAO3H,MAAM,gBAC/B,kBAAC0e,GAAA,EAAD,CAAW/W,OAAO,iBAClB,kBAACW,GAAA,EAAD,CACEX,OAAO,aACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAC5B,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC2D,GAAA,EAAD,CACEC,OAAQ,SAAC3D,GAAD,OACN,kBAAC,GAAD,CACEA,OAAQA,EACRxQ,MAAOA,U,sBCjCNo3B,OAvDf,YAAwC,IAAXC,EAAU,EAAVA,OACrBn0B,EAAYC,cADmB,EAEPO,mBAAS,MAFF,mBAE9BuR,EAF8B,KAErBqiB,EAFqB,OAGb5zB,oBAAS,GAHI,mBAG9B6zB,EAH8B,KAGxBC,EAHwB,KAK/BC,EAAgB,SAAC9X,GAAD,OAAW,WAC3BA,IAAU1K,EACZuiB,GAASD,IAETD,EAAW3X,GACX6X,GAAQ,IAEVH,EAAO,GAAD,OAAIpiB,EAAJ,YAAesiB,EAAO,OAAS,UAGvC,OACE,kBAAC/rB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,MACA,kBAACA,GAAA,EAAD,KACE,kBAACgsB,GAAA,EAAD,CACExwB,OAAoB,SAAZ+N,EACRuF,UAAW+c,EAAO,OAAS,MAC3BjzB,QAASmzB,EAAc,SAEtBv0B,EAAU,kBAGf,kBAACwI,GAAA,EAAD,KACE,kBAACgsB,GAAA,EAAD,CACExwB,OAAoB,WAAZ+N,EACRuF,UAAW+c,EAAO,OAAS,MAC3BjzB,QAASmzB,EAAc,WAEtBv0B,EAAU,kBAGf,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SACf,kBAAC+rB,GAAA,EAAD,CACExwB,OAAoB,aAAZ+N,EACRuF,UAAW+c,EAAO,OAAS,MAC3BjzB,QAASmzB,EAAc,aAEtBv0B,EAAU,wB,mHCzCjBy0B,GAAa/2B,aAAW,SAAAC,GAAK,MAAK,CACtC4D,KAAM,CACJmzB,WAAY,EACZ/1B,WAAYhB,EAAMG,QAAQ,UA8Df62B,OA1Df,SAAgC73B,GAC9B,IAAM2C,EAAUg1B,KACV92B,EAAQi3B,eACNpW,EAA2C1hB,EAA3C0hB,MAAOnC,EAAoCvf,EAApCuf,KAAMwY,EAA8B/3B,EAA9B+3B,YAAaC,EAAiBh4B,EAAjBg4B,aAkBlC,OACE,yBAAKp1B,UAAWD,EAAQ8B,MACtB,kBAACL,EAAA,EAAD,CACEE,QAnB6B,SAAAN,GACjCg0B,EAAah0B,EAAO,IAmBhByW,SAAmB,IAAT8E,EACVlb,aAAW,cAEU,QAApBxD,EAAM2Z,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAACpW,EAAA,EAAD,CAAYE,QArBc,SAAAN,GAC5Bg0B,EAAah0B,EAAOub,EAAO,IAoBmB9E,SAAmB,IAAT8E,EAAYlb,aAAW,iBACtD,QAApBxD,EAAM2Z,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAACpW,EAAA,EAAD,CACEE,QArBwB,SAAAN,GAC5Bg0B,EAAah0B,EAAOub,EAAO,IAqBvB9E,SAAU8E,GAAQxO,KAAKknB,KAAKvW,EAAQqW,GAAe,EACnD1zB,aAAW,aAEU,QAApBxD,EAAM2Z,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAACpW,EAAA,EAAD,CACEE,QAxB4B,SAAAN,GAChCg0B,EAAah0B,EAAO+M,KAAKmnB,IAAI,EAAGnnB,KAAKknB,KAAKvW,EAAQqW,GAAe,KAwB7Dtd,SAAU8E,GAAQxO,KAAKknB,KAAKvW,EAAQqW,GAAe,EACnD1zB,aAAW,aAEU,QAApBxD,EAAM2Z,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,SCf1C2d,OAxCf,YAA2F,IAA1DC,EAAyD,EAAzDA,UAAW7Y,EAA8C,EAA9CA,KAAMwY,EAAwC,EAAxCA,YAAaM,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,eAUtE,OACE,kBAACC,GAAA,EAAD,KACE,kBAAC9sB,GAAA,EAAD,KACE,kBAAC+sB,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,IAC7BpD,QAAS,EACT3T,MAAO0W,EACPL,YAAaA,EACbxY,KAAMA,EACNmZ,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVZ,aAtBiB,SAACh0B,EAAO60B,GAC/BR,EAAQQ,IAsBFC,oBAnBwB,SAAA90B,GAC9Bs0B,EAAepoB,SAASlM,EAAMuV,OAAO1M,MAAO,KAC5CwrB,EAAQ,IAkBFU,iBAAkBlB,Q,+MCd5B,IAAMmB,GAAyB1uB,KAAH,MAUtB3J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACP+G,YAAahH,EAAMG,QAAQ,GAC3BD,aAAcF,EAAMG,QAAQ,IAE9BkB,MAAO,CACLC,KAAM,GAERymB,MAAO,CACL/mB,WAAYhB,EAAMG,QAAQ,IAE5Bi4B,WAAY,CACVrvB,QAAS,IAEXsvB,QAAS,CACPhrB,OAAQ,GACRR,OAAQ,GAEVyrB,MAAO,CACLtwB,QAAS,OACTilB,eAAgB,aAChBsL,SAAU,OACV,QAAS,CACP1rB,OAAQ7M,EAAMG,QAAQ,UAsIbq4B,OAjIf,YAAkD,IAApBxuB,EAAmB,EAAnBA,MAAOyuB,EAAY,EAAZA,SAC7Bp2B,EAAYC,cACZR,EAAUhC,KAF+B,EAGvB+C,mBAAS,IAHc,mBAGxCoI,EAHwC,KAGlC0e,EAHkC,OAInB9mB,mBAAS,MAJU,mBAIxC61B,EAJwC,KAIhCC,EAJgC,OAKf91B,mBAAS,MALM,gCAMKA,mBAAS,KANd,mBAMxC+1B,EANwC,KAMpBC,EANoB,OAOHh2B,mBAAS,IAPN,mBAOxCi2B,EAPwC,KAOxBC,EAPwB,KAQvC3uB,EAASN,aAASquB,IAAlB/tB,KAEF4uB,EAAa5uB,EAAOA,EAAK6uB,kBAAoB,GAmEnD,OAhEA/vB,qBAAU,WACJc,EAAMkvB,kBACRP,EAAU3uB,EAAMkvB,oBAMjB,CAAClvB,IAGJd,qBAAU,WACR,IAAMiwB,EAAI,GACNT,IACFS,EAAED,iBAAmBR,GAOvBD,EAASU,KACR,CAACT,EAAQE,EAAoBE,EAAgBL,IA2C9C,kBAAC,IAAMhsB,SAAP,KACE,kBAACpJ,EAAA,EAAD,CAAStB,UAAWD,EAAQ7B,SAC1B,kBAAC4D,EAAA,EAAD,CAAY9B,UAAWD,EAAQT,MAAOhC,QAAQ,KAAK8E,GAAG,cACnD9B,EAAU,8BAEb,kBAAC+2B,GAAA,EAAD,CAASr3B,UAAWD,EAAQu2B,QAASgB,YAAY,aACjD,0BAAMC,SA3CS,SAAC7gB,GACpBA,EAAE8gB,iBACFZ,EAAU1tB,GACV0e,EAAQ,MAyCF,kBAAC6P,GAAA,EAAD,CACEz3B,UAAWD,EAAQimB,MACnB/b,MAAOf,EACPpB,SAnDe,SAAC4O,GACxBkR,EAAQlR,EAAEC,OAAO1M,QAmDT+e,YAAW,UAAK1oB,EAAU,iBAAf,YAAmCA,EAAU,2BACxDy1B,WAAY,CAAE,aAAa,GAAb,OAAiBz1B,EAAU,iBAA3B,YAA+CA,EAAU,8BAEzE,kBAACkB,EAAA,EAAD,CAAYuC,KAAK,SAAS/D,UAAWD,EAAQs2B,WAAY50B,aAAW,UAClE,kBAACi2B,GAAA,EAAD,SAkBN,yBAAK13B,UAAWD,EAAQw2B,OACrBI,GAAU,kBAACvO,GAAA,EAAD,CAAMpiB,MAAO2wB,EAAQxO,SAzDjB,WACnByO,EAAU,SAyDLG,EAAenxB,KAAI,SAAC+xB,GAAD,OAClB,kBAACvP,GAAA,EAAD,CAAMtiB,IAAG,kBAAa6xB,GAAM3xB,MAAO1F,EAAU,WAAD,OAAYq3B,IAAOxP,UAvDjDpL,EAuDwE4a,EAvD9D,WACzBZ,EAAevd,SAASuD,IAG3Bga,EAAea,OAAOb,EAAerjB,QAAQqJ,GAAQ,GACrDia,EAAkB,aAAID,KAHtBC,EAAkB,GAAD,oBAAKD,GAAL,CAAqBha,SAFrB,IAACA,KAyDf8Z,EAAmBjxB,KAAI,SAACiyB,GAAD,OACtB,kBAACzP,GAAA,EAAD,CAAMtiB,IAAG,kBAAa+xB,GAAc7xB,MAAOixB,EAAW/sB,MAAK,SAAC4tB,GAAD,OAAOA,EAAE11B,KAAOy1B,KAAYtP,OAAQJ,UAjD9E/lB,EAiDwGy1B,EAjDjG,WACzBhB,EAAmBrd,SAASpX,IAG/By0B,EAAmBe,OAAOf,EAAmBnjB,QAAQtR,GAAK,GAC1D00B,EAAsB,aAAID,KAH1BC,EAAsB,GAAD,oBAAKD,GAAL,CAAyBz0B,SAF1B,IAACA,Q,uDCqFZ21B,OArMf,YAMI,IALFR,EAKC,EALDA,SACAS,EAIC,EAJDA,SACA5nB,EAGC,EAHDA,QACM6nB,EAEL,EAFD93B,KACAusB,EACC,EADDA,SAEMpsB,EAAYC,cADjB,EAEuBO,mBAASm3B,GAFhC,mBAEM93B,EAFN,KAEYsJ,EAFZ,KAGDtC,qBAAU,WACRsC,EAAQwuB,KACP,CAACA,IALH,MAO+Bn3B,mBAAS,CAAEsP,YAP1C,mBAOM+E,EAPN,KAOgBC,EAPhB,KASG8iB,EAAqB,CACvB/iB,EAASgjB,gBACThjB,EAASijB,gBACTjjB,EAASkjB,gBACTljB,EAASmjB,gBACTnjB,EAASojB,iBAEX,GAAInoB,GAAWA,EAAQooB,UAAYN,EAAmBl0B,OAAS,EAC7D,GAAIoM,EAAQooB,SAAShf,SAAS,KAAM,CAClC,IAAMif,EAAUjgB,WAAWpI,EAAQooB,UAAY,IAE/CN,EAAqBA,EAAmBtyB,KAAI,SAACsH,GAAD,OAAWA,EAAQurB,UAC1D,GAAIroB,EAAQooB,SAAShf,SAAS,OAAQ,CAC3C,IAAM4U,EAAiB5V,WAAWpI,EAAQooB,SAAS5lB,QAAQ,MAAO,KAClEslB,EAAqBA,EAAmBtyB,KACtC,SAACsH,GAAD,OAAWA,EAAQkhB,KAKzBjnB,qBAAU,WACR,GAAIiJ,GAAWsc,EAAU,CACvB,IAAIgM,EAA6B,CAC/BtoB,EAAQ+nB,gBACR/nB,EAAQgoB,gBACRhoB,EAAQioB,gBACRjoB,EAAQkoB,gBACRloB,EAAQmoB,iBAEV,GACEnoB,GACAA,EAAQooB,UACRE,EAA2B10B,OAAS,EAEpC,GAAIoM,EAAQooB,SAAShf,SAAS,KAAM,CAClC,IAAMif,EAAU,EAAIjgB,WAAWpI,EAAQooB,UAAY,IAEnDE,EAA6BA,EAA2B9yB,KACtD,SAACsH,GAAD,OAAWA,EAAQurB,UAEhB,GAAIroB,EAAQooB,SAAShf,SAAS,OAAQ,CAC3C,IAAM4U,EAAiB5V,WACrBpI,EAAQooB,SAAS5lB,QAAQ,MAAO,KAElC8lB,EAA6BA,EAA2B9yB,KACtD,SAACsH,GAAD,OAAWA,EAAQkhB,KAKzBhZ,EAAY,gBACPhF,EADM,CAEThD,SAAUE,SAAS8C,EAAQuoB,iBAAkB,IAC7CzrB,MAAOsL,WACLkgB,EAA2BhM,EAASkM,cAAgB,UAIzD,CAACxoB,IAnEH,MAqEiCtP,mBAAS4rB,EAASkM,eArEnD,mBAqEMC,EArEN,KAqEiBC,EArEjB,KAuEKC,EAAc,WAClBf,IACAvuB,GAAQ,IASJuvB,EAAuB,SAAC9rB,EAAO2F,GAAR,OAAkB,WAC7CimB,EAAajmB,EAAQ,GACrBuC,EAAY,gBAAKD,EAAN,CAAgBjI,MAAOA,OAGpC,OACE,kBAAC+rB,GAAA,EAAD,CACE94B,KAAMA,EACNqC,QAASu2B,EACTG,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAa/2B,GAAG,qBACb9B,EAAU,8BAEb,kBAAC84B,GAAA,EAAD,KACE,0BAAM9F,YAAU,GACd,kBAAC5hB,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACZ1H,GAAWA,EAAQlH,MAEtB,kBAACwI,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACZ1H,GAAWA,EAAQC,SAEtB,kBAACqB,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACZ1H,GAAWA,EAAQmY,QAEtB,kBAAC7W,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAACvN,GAAA,EAAD,CACEqL,MAAOxF,GAAW+E,EAAS/H,SAAWgD,EAAQhD,SAC9CisB,WACEjpB,GAAW+E,EAAS/H,SAAWgD,EAAQhD,SACnC,aACA,GAENhL,GAAG,WACH4D,MAAO1F,EAAU,oBACjByD,KAAK,SACL6S,gBAAiB,CACfC,QAAQ,GAEVvZ,QACE8S,GAAW+E,EAAS/H,SAAWgD,EAAQhD,SACnC,WACA,SAENnD,MAAOkL,EAAS/H,SAChBtF,SAAU,SAAC4O,GAAD,OACRtB,EAAY,gBACPD,EADM,CAET/H,SAAUE,SAASoJ,EAAEvU,cAAc8H,MAAO,WAKlD,kBAACyH,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAACvN,GAAA,EAAD,CACEnI,GAAG,QACH4D,MAAO1F,EAAU,iBACjByD,KAAK,SACL6S,gBAAiB,CACfC,QAAQ,GAEVvZ,QAAQ,SACR2M,MAAOkL,EAASjI,MAChBpF,SAAU,SAAC4O,GAAD,OACRtB,EAAY,gBAAKD,EAAN,CAAgBjI,MAAOwJ,EAAEvU,cAAc8H,YAGtD,kBAACqvB,GAAA,EAAD,KACGpB,EAAmBtyB,KAAI,SAACsH,EAAO2F,GAAR,OACtB,kBAACvG,GAAA,EAAD,CACE5K,QAASs3B,EAAqB9rB,EAAO2F,GACrCtV,MAAOs7B,GAAahmB,EAAQ,EAAI,iBAAcgJ,EAC9Cve,QAAQ,aAEPgD,EAAU,0BACVuS,EAAQ,WAQvB,kBAAC0mB,GAAA,EAAD,KACE,kBAACjtB,GAAA,EAAD,CAAQ5K,QAASq3B,EAAax7B,MAAM,WACjC+C,EAAU,kBAEb,kBAACgM,GAAA,EAAD,CACE5K,QA/FW,WACjB0T,EAAY,gBAAKD,EAAN,CAAgBjI,MAAOsL,WAAWrD,EAASjI,OAAOmB,QAAQ,MACrEkpB,EAASpiB,GACT4jB,KA6FMx7B,MAAM,UACNsa,SACEzH,GAAW+E,EAAS/H,UAAY+H,EAAS/H,SAAWgD,EAAQhD,UAG7D9M,EAAU,mB,muBCjLrB,IAAMk5B,GAAe9xB,KAAH,MAsCZ3J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ4E,MAAO,QAETvI,QAAS,CACP+G,YAAahH,EAAMG,QAAQ,GAC3BD,aAAcF,EAAMG,QAAQ,IAE9BsrB,MAAO,CACLjjB,MAAO,OACPkjB,aAAc1rB,EAAMG,QAAQ,IAE9BuJ,MAAO,GACP8xB,eAAgB,CACdluB,OAAQ,EACRmuB,KAAM,gBACNpuB,OAAQ,EACRR,QAAS,EACTpL,SAAU,SACVsH,QAAS,EACTT,SAAU,WACV2E,IAAK,GACLzE,MAAO,GAETkzB,MAAO,CACLlzB,MAAO,GACP6E,OAAQ,IAEVsuB,IAAK,CACH9uB,OAAQ,OACR7E,QAAS,QACT4zB,SAAU,OACVC,UAAW,YAkHAC,OA9Gf,YAA8D,IAAnCjR,EAAkC,EAAlCA,SAAUkR,EAAwB,EAAxBA,WAAYtN,EAAY,EAAZA,SACzC3sB,EAAUhC,KAD2C,EAEjC+C,mBAAS,IAFwB,mBAEpDmH,EAFoD,KAE7CyuB,EAF6C,OAGnC51B,mBAAS,GAH0B,mBAGpD6b,EAHoD,KAG9C8Y,EAH8C,OAI7B30B,mBAAS,UAJoB,mBAIpDuR,EAJoD,KAI3CqiB,EAJ2C,OAKrB5zB,mBAAS,IALY,mBAKpDq0B,EALoD,KAKvCO,EALuC,OAMb50B,mBAAS,MANI,mBAMpD4vB,EANoD,KAMnCC,EANmC,OAO1B5oB,aAASyxB,GAAc,CACtDxxB,UAAW,CACTC,QACAoK,UACAwK,MAAOsY,EACP1Y,KAAME,EAAOwY,KALT/sB,EAPmD,EAOnDA,QAASwN,EAP0C,EAO1CA,MAAOvN,EAPmC,EAOnCA,KAQxB,GAAIuN,EACF,OAAO,sCAET,IAAKvN,GAAQD,EACX,OAAO,2CAET,IAAM6xB,EAAO5xB,EAAK6xB,mBAAmBC,MAAMv0B,KAAI,SAAC8Q,GAAD,OAAOA,EAAE0jB,QAClD5E,EAAYntB,EAAK6xB,mBAAmBrb,UAAUC,MAC9Cub,EACJlF,EAAchnB,KAAKmsB,IAAInF,EAAaK,EAAY7Y,EAAOwY,GACnDoF,EAAczR,EAASljB,KAAI,SAAC40B,GAAD,OAAOA,EAAEp4B,MAEpCq4B,EAAiB,SAACrqB,EAAS0Y,GAC/BkR,EAAW5pB,EAAS0Y,IAqBtB,OACE,kBAAC,IAAMpe,SAAP,KACE,kBAAC,GAAD,CAAoBzC,MAAOA,EAAOyuB,SAAUA,IAE5C,kBAAC/tB,GAAA,EAAD,CAAO3I,UAAWD,EAAQ4H,MAAOlG,aAAW,2BAC1C,kBAAC,GAAD,CAAmBgzB,OAAQC,IAC3B,kBAAC1rB,GAAA,EAAD,KACGixB,EAAKr0B,KAAI,SAACqD,GAAD,OACR,kBAACJ,GAAA,EAAD,CAAU/C,IAAKmD,EAAI7G,IACjB,kBAAC0G,GAAA,EAAD,KACE,kBAACtH,EAAA,EAAD,CAAYE,SA5BG0O,EA4B0BnH,EA5Bd,WACvC,IAAM6f,GAAYyR,EAAY/gB,SAASpJ,EAAQhO,IAC1C0mB,EAGH6H,EAAmBvgB,GAFnBqqB,EAAerqB,EAAS0Y,MA0BXyR,EAAY/gB,SAASvQ,EAAI7G,IAAM,kBAACs4B,GAAA,EAAD,MAAa,kBAAChL,GAAA,EAAD,QAGjD,kBAAC5mB,GAAA,EAAD,KAAYG,EAAIC,MAChB,kBAACJ,GAAA,EAAD,CAAWzL,UAAU,KAAKm1B,MAAM,OAC9B,kBAAC9gB,GAAA,EAAD,CAAMC,WAAS,EAACiG,UAAU,SAASxZ,QAAS,GAC1C,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,IAAE,GACX,kBAAChW,EAAA,EAAD,CAAYxE,QAAQ,YAAYE,cAAY,GACzCyL,EAAIoH,SAEP,kBAACvO,EAAA,EAAD,CAAYxE,QAAQ,QAAQE,cAAY,GACrCyL,EAAIsf,WAKb,kBAACzf,GAAA,EAAD,CAAWC,MAAM,SAASuE,SAASrE,EAAImE,SAAU,MA7CjC,IAACgD,KAiDpBiqB,EAAY,GACX,kBAACxxB,GAAA,EAAD,CAAU7G,MAAO,CAAEsJ,OAAQ,GAAK+uB,IAC9B,kBAACvxB,GAAA,EAAD,CAAW2pB,QAAS,MAI1B,kBAAC,GAAD,CACE+C,UAAWA,EACXL,YAAaA,EACbxY,KAAMA,EACN8Y,QAASA,EACTC,eAAgBA,KAGpB,kBAAC,GAAD,CACEtlB,QAASsgB,EACTvwB,OAAQuwB,EACR6G,SAzDmB,SAACnnB,GACxBqqB,EAAerqB,GAAS,GACxBugB,EAAmB,OAwDfqH,SArDc,WAClBrH,EAAmB,OAqDfjE,SAAUA,M,kTCvLGhlB,KAAH,M,kTCOlB,IAAMkoB,GAAeloB,KAAH,MAwHHgrB,OAvGf,YAA+C,IAA1Bvd,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACvB9U,EAAYC,cAD0B,EAEFO,qBAFE,mBAErC65B,EAFqC,KAEtBC,EAFsB,OAIlB7yB,aAAS6nB,GAAc,CAC/C5nB,UAAW,CAAEC,MAAO,CAAE7F,GAAI+S,EAASuX,UAAYvX,EAASuX,SAAStqB,OAD3DgG,EAJoC,EAIpCA,QAASC,EAJ2B,EAI3BA,KAWjB,OAPAlB,qBAAU,WACJkB,IACFuyB,EAAiBvyB,EAAKqkB,SAASmO,OAC/BtuB,QAAQC,IAAInE,OAKd,0BAAMirB,YAAU,GACd,kBAAC5hB,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACmK,GAAD,CACEvyB,QAAQ,SACRkV,WAAS,EACTvI,MAAOkL,EAASuX,SAChB1mB,MAAO1F,EAAU,mBACjBwH,SAAU,SAACgzB,GACT1lB,EAAY,gBAAKD,EAAN,CAAgBuX,SAAUoO,SAI3C,kBAACppB,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC5b,GAAA,EAAD,CACE1H,GAAG,iBACHsH,QAASixB,EACTxwB,eAAgB,SAACC,GAAD,OAAYA,EAAOme,QACnCle,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEtE,MAAM,eACNwM,WAAS,EACTlV,QAAQ,SACRkN,WAAU,gBACLF,EAAOE,WADF,CAERC,aACE,kBAAC,IAAMC,SAAP,KACGtC,EACC,kBAACuC,GAAA,EAAD,CAAkBpN,MAAM,UAAUqN,KAAM,KACtC,KACHN,EAAOE,WAAWC,oBAM7B3C,SAAU,SAAC1G,EAAO6I,GAChBsC,QAAQC,IAAIvC,GACZmL,EAAY,gBAAKD,EAAN,CAAgBod,aAActoB,SAI/C,kBAACyH,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACnb,GAAA,EAAD,CACEjN,QAAQ,SACRkV,WAAS,EACTvI,MAAOkL,EAASjM,KAChBlD,MAAO1F,EAAU,mBACjBwH,SAAU,SAAC4O,GAAD,OAAOtB,EAAY,gBAAKD,EAAN,CAAgBjM,KAAMwN,EAAEC,OAAO1M,aAG/D,kBAACyH,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACQ,GAAA,EAAD,CAAa5oB,QAAQ,SAASkV,WAAS,GACrC,kBAAC2T,GAAA,EAAD,CAAY/jB,GAAG,cACZ9B,EAAU,qBAEb,kBAAC8lB,GAAA,EAAD,CACEgD,QAAS,QACTpjB,MAAM,aACNiE,MAAOkL,EAAS5R,OAAS,WACzBuE,SAAU,SAAC4O,GAAD,OACRtB,EAAY,gBAAKD,EAAN,CAAgB5R,MAAOmT,EAAEC,OAAO1M,UAE7C4N,UAAU,GAET,CACC,CAAEzV,GAAI,WAAYzC,KAAMW,EAAU,qBAOlCsF,KAAI,SAACkW,GAAD,OACJ,kBAACuK,GAAA,EAAD,CAAUvgB,IAAG,kBAAagW,EAAE1Z,IAAM6H,MAAO6R,EAAE1Z,IACxC0Z,EAAEnc,eC/Gf5B,GAAYC,MAAW,SAACC,GAAD,MAAY,CACvC+H,MAAO,CACL+0B,WAAY,OACZ1uB,UAAW,QACXlO,aAAcF,EAAMG,QAAQ,QA8HjBmrB,OA1Hf,YAA+B,IAAbpU,EAAY,EAAZA,SACV7U,EAAYC,cACZR,EAAUhC,KAChBwO,QAAQC,IAAI,aAAc2I,GAE1B,IAAMkZ,EAAalZ,EAASjF,SACzBtD,QAAO,SAACC,EAASuD,GAAV,OAAsBvD,EAAUuD,EAAQlD,MAAQkD,EAAQhD,WAAU,GACzEiB,QAAQ,GACX,OACE,kBAAC,IAAM3D,SAAP,KACE,kBAAC5I,EAAA,EAAD,CAAYxE,QAAQ,KAAKE,cAAY,GAClC8C,EAAU,iCAEb,kBAACoR,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,EAACwC,UAAWD,EAAQiG,OACzC1F,EAAU,qBAGf,kBAACoR,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,GAAE2X,EAASjM,OAErC,kBAACwI,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,EAACwC,UAAWD,EAAQiG,OACzC1F,EAAU,yBAGf,kBAACoR,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,GAAE2X,EAASuX,SAASrc,UAE9C,kBAACqB,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,EAACwC,UAAWD,EAAQiG,OACzC1F,EAAU,mCAGf,kBAACoR,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,GACrByQ,KAAMkH,EAAS6lB,oBAAoBxR,OAAO,cACzC,iBAGN,kBAAC9X,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,EAACwC,UAAWD,EAAQiG,OAA5C,iBAIF,kBAAC0L,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,GAAE2X,EAASod,aAAahK,SAElD,kBAAC7W,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,EAACwC,UAAWD,EAAQiG,OACzC1F,EAAU,sBAGf,kBAACoR,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,GAAE2X,EAAS5R,QAErC,kBAACmO,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAACnP,GAAA,EAAD,CAAOlH,aAAW,kBAChB,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAS0pB,QAAS,GAAnC,WAGA,kBAAC3pB,GAAA,EAAD,CAAWC,MAAM,SAAjB,UAEF,kBAACF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,eACA,kBAACD,GAAA,EAAD,oBACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,iBAGJ,kBAACC,GAAA,EAAD,KACGmM,EAASjF,UACRiF,EAASjF,SAAStK,KAAI,SAACwK,GACrB,IAAM6qB,GAAY7qB,EAAQhD,SAAWgD,EAAQlD,OAAOmB,QAClD,GAEF,OACE,kBAACxF,GAAA,EAAD,CAAU/C,IAAKsK,EAAQhO,IACrB,kBAAC0G,GAAA,EAAD,CAAWC,MAAM,UAAUqH,EAAQlH,MACnC,kBAACJ,GAAA,EAAD,KACE,kBAAC,GAAD,CAAgB6E,OAAO,OAAOC,OAAQwC,KAExC,kBAACtH,GAAA,EAAD,CAAWC,MAAM,SAASqH,EAAQhD,UAClC,kBAACtE,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CACEX,OAAO,QACPC,OAAQwC,EACR1G,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,UAG5C,kBAACxd,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CACEX,OAAO,WACPC,OAAQ,CAAEqtB,YACVvxB,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,cAMpD,kBAACzd,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAW2pB,QAAS,GAApB,SACA,kBAAC3pB,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CACEX,OAAO,aACPC,OAAQ,CAAEygB,cACV3kB,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,iB,ynBC9G5D,IAAMvoB,GAAYC,MAAW,SAACC,GAAD,MAAY,CACvCwrB,OAAO,aACLhjB,MAAO,OACPxH,WAAYhB,EAAMG,QAAQ,GAC1Bc,YAAajB,EAAMG,QAAQ,IAC1BH,EAAM2C,YAAY+F,GAAG,KAA0B,EAAnB1I,EAAMG,QAAQ,IAAU,CACnDqI,MAAO,KACPxH,WAAY,OACZC,YAAa,SAGjBwqB,MAAM,aACJxmB,UAAWjF,EAAMG,QAAQ,GACzBurB,aAAc1rB,EAAMG,QAAQ,GAC5B4I,QAAS/I,EAAMG,QAAQ,IACtBH,EAAM2C,YAAY+F,GAAG,KAA0B,EAAnB1I,EAAMG,QAAQ,IAAU,CACnD8E,UAAWjF,EAAMG,QAAQ,GACzBurB,aAAc1rB,EAAMG,QAAQ,GAC5B4I,QAAS/I,EAAMG,QAAQ,KAG3BwrB,QAAS,CACP5iB,QAAS/I,EAAMG,QAAQ,EAAG,EAAG,IAE/Bo1B,QAAS,CACPvtB,QAAS,OACTilB,eAAgB,YAElBuI,OAAQ,CACNvwB,UAAWjF,EAAMG,QAAQ,GACzBa,WAAYhB,EAAMG,QAAQ,QAIxB88B,GAAkBxzB,KAAH,MASfyzB,GAAuBzzB,KAAH,MASpB0zB,GAAqB1zB,KAAH,MAYT,cACb,IAAMlH,EAAWC,cACXH,EAAYC,cACZR,EAAUhC,KACVsF,EAAU8L,eACVkG,EAASC,eALI,EAMHE,aAAY0lB,IAArBG,EANY,sBAOiBv6B,mBAAS,GAP1B,mBAOZ8pB,EAPY,KAOAC,EAPA,OAea/pB,mBAPV,CACpBoI,KAAM,GACNwjB,SAAU,KACVxc,SAAU,GACV3M,MAAO,WACPgvB,aAAc,OAbG,mBAeZpd,EAfY,KAeFC,EAfE,KAgBnB5U,EACE+N,GAAe,CACb,CAAExI,IAAK,cAAeC,MAAO,eAC7B,CAAED,IAAK,qBAAsBC,MAAO,iBAnBrB,MAwB0B+B,aAASozB,IAArCG,EAxBE,EAwBXlzB,QAA0BmzB,EAxBf,EAwBSlzB,KAC5BlB,qBAAU,WACR,GAAIo0B,GAAUA,EAAOpJ,YAAYnuB,OAAS,GAAuB,KAAlBmR,EAASjM,KAAa,CACnE,IAAM3D,EAAOg2B,EAAOpJ,YAAY,GAChC/c,EAAY,gBACPD,EADM,CAETjM,KAAMgN,GAA6B3Q,EAAK2D,YAG3C,CAACqyB,EAAQpmB,IAjCO,MAoCuCpN,aACxDqzB,IADeI,EApCE,EAoCXpzB,QAAgCqzB,EApCrB,EAoCepzB,KAclC,GAXAlB,qBAAU,WACR,GACEs0B,GACAA,EAAc1L,UAAU/rB,OAAS,IAChCmR,EAASuX,SACV,CACA,IAAMA,EAAW+O,EAAc1L,UAAU,GACzC3a,EAAY,gBAAKD,EAAN,CAAgBuX,iBAE5B,CAAC+O,EAAetmB,IAEfmmB,GAAaE,EAAiB,MAAO,wBAEzC,IAAM1Q,EAAQ,CACZxqB,EAAU,gCACVA,EAAU,6BACVA,EAAU,sBAiFZ,OACE,0BAAMN,UAAWD,EAAQ0pB,QACvB,kBAAC/gB,GAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC5nB,EAAA,EAAD,CAAYzE,UAAU,KAAKC,QAAQ,KAAKyL,MAAM,UAC3CzI,EAAU,+BACX,kBAACo7B,GAAA,EAAD,CACE15B,MAAO,CAAE25B,MAAO,SAChBC,aAAczmB,EAASjF,SAASlM,OAChCzG,MAAM,WAEN,kBAACs+B,GAAA,EAAD,QAGJ,kBAAC9vB,GAAA,EAAD,CAAS6e,WAAYA,EAAY5qB,UAAWD,EAAQ6pB,SACjDkB,EAAMllB,KAAI,SAACI,GAAD,OACT,kBAACiG,GAAA,EAAD,CAAMnG,IAAKE,GACT,kBAACkG,GAAA,EAAD,KAAYlG,QAKlB,kBAAC,IAAM0E,SAAP,KACkB,IAAfkgB,GACC,kBAAC,GAAD,CAAWzV,SAAUA,EAAUC,YAAaA,IAE9B,IAAfwV,GACC,kBAAC,GAAD,CACE9B,SAAU3T,EAASjF,SACnB8pB,WAxDkB,SAAC5pB,EAAS0Y,GACtC,IAAMgT,EAAa3mB,EAASjF,SAAStK,KAAI,SAAC+b,GAAD,OAAOA,EAAEvf,MAC9C0mB,EACGgT,EAAWtiB,SAASpJ,EAAQhO,KAC/BgT,EAAY,gBACPD,EADM,CAETjF,SAAS,GAAD,oBAAMiF,EAASjF,UAAf,CAAyBE,OAIjC0rB,EAAWtiB,SAASpJ,EAAQhO,MAC9B+S,EAASjF,SAAS0nB,OAAOkE,EAAWpoB,QAAQtD,EAAQhO,IAAK,GACzDgT,EAAY,gBACPD,EADM,CAETjF,SAAUiF,EAASjF,cA2Cfwc,SAAUvX,EAASuX,WAGP,IAAf9B,GAAoB,kBAAC,GAAD,CAAQzV,SAAUA,IAEvC,yBAAKnV,UAAWD,EAAQyzB,SACrB5I,EAAa,GACZ,kBAACte,GAAA,EAAD,CAAQ5K,QAxCD,WACjBmpB,EAAcD,EAAa,IAuCYrtB,MAAM,WAChC+C,EAAU,gBAGdsqB,EAAa,GACZ,kBAACte,GAAA,EAAD,CAAQ5K,QAjDD,WACjBmpB,EAAcD,EAAa,IAgDYrtB,MAAM,WAChC+C,EAAU,gBAGC,IAAfsqB,GACC,kBAACte,GAAA,EAAD,CAAQ5K,QAvGD,WACjB,IAAM2sB,EArBClZ,EAASjF,SAAStD,QAAO,SAAC2R,EAAGoD,GAClC,OAAOpD,EAAI/F,WAAWmJ,EAAEzU,OAASyU,EAAEvU,WAClC,GAoBG+gB,EAjBChZ,EAASjF,SAAStD,QAAO,SAAC2R,EAAGoD,GAClC,IAAIA,EAAE6W,SASJ,OAAOja,EAAI/F,WAAWmJ,EAAEzU,OAASyU,EAAEvU,SARnC,GAAIuU,EAAE6W,SAAShf,SAAS,KAAM,CAC5B,IAAMif,EAAU,EAAIjgB,WAAWmJ,EAAE6W,UAAY,IAC7C,OAAOja,EAAK/F,WAAWmJ,EAAEzU,OAASurB,EAAW9W,EAAEvU,SAC1C,GAAIuU,EAAE6W,SAAShf,SAAS,OAAQ,CACrC,IAAM4U,EAAiB5V,WAAWmJ,EAAE6W,SAAS5lB,QAAQ,MAAO,KAC5D,OAAO2L,GAAK/F,WAAWmJ,EAAEzU,OAASkhB,GAAkBzM,EAAEvU,YAKzD,GAMG/E,EAAO,CACXa,KAAMiM,EAASjM,KACfmlB,aACAF,WACAC,eAAgBD,EAAWE,EAC3B9qB,MAAO4R,EAAS5R,MAChBw4B,OAAQ5mB,EAASod,aAAanwB,GAC9B8N,SAAU,CACRvR,OAAQwW,EAASjF,SAAStK,KAAI,SAAC+b,GAAD,MAAQ,CACpC5M,UAAW4M,EAAEvf,GACbgL,SAAUE,SAASqU,EAAEvU,SAAU,IAC/BF,MAAOsL,WAAWmJ,EAAEzU,OACpB4gB,WAAYtV,WAAWmJ,EAAEvU,UAAYoL,WAAWmJ,EAAEzU,aAKxDmuB,EAAM,CAAErzB,UAAW,CAAEK,UAClB+N,MAAK,WACJ/S,EAAQe,KAAK,kBAEdiS,OAAM,SAACT,GACNP,EAAO,UAAD,OAAWO,EAAMU,SAAW,eA8EC/Y,MAAM,WAChC+C,EAAU,wB,wrBCjP3B,IAAM07B,GAASt0B,KAAH,MAsCCu0B,GAAiB,SAAC,GAA8B,EAA5BltB,YAA6B,IAAb3R,EAAY,+BACrDoD,EAAWC,cACXH,EAAYC,cACZ8C,EAAU8L,eAChB5C,QAAQC,IAAI,kBAAmBpP,GAC/B,IAqBIkyB,EA1BuD,EASjCvnB,aAASi0B,GAAQ,CACzCh0B,UAAW,CAAEC,MAAO,CAAE7F,GAAIhF,EAAMgF,OAD1BgG,EATmD,EASnDA,QAASC,EAT0C,EAS1CA,KAmBjB,OADAinB,EAASjnB,GAAkC,SAA1BA,EAAKugB,WAAWrlB,MAE/B,kBAACmO,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACb,kBAAChW,EAAA,EAAD,CAAYxE,QAAQ,MACjBgD,EAAU,sBADb,OAEIgvB,EAKE,KAJF,kBAAChjB,GAAA,EAAD,CAAQ/O,MAAM,UAAUqN,KAAK,QAAQlJ,QA7BhC,WAAO,IACZU,EAAOhF,EAAPgF,GACRiB,EAAQe,KAAR,sBAA4BhC,EAA5B,YA4BU,kBAAC,KAAD,MADF,OAES9B,EAAU,gBAGnBgvB,EAUE,KATF,kBAAChjB,GAAA,EAAD,CACE/O,MAAM,UACNqN,KAAK,QACLlJ,QAAS6pB,GAAYljB,GACrBwP,SAAUzP,GAEV,kBAACmnB,GAAA,EAAD,MANF,OAOSjvB,EAAU,kBAIvB,kBAAC0jB,GAAA,EAAD,eAAgB1kB,MAAM,uBAA0BlC,IAC7C,SAAC6mB,GACA,IAAMje,EAAQie,EAAgBrW,OAC1BqW,EAAgBrW,OAAO1E,KACvB,GACE9G,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAOhE,OANA5B,EACE+N,GAAe,CACb,CAAExI,IAAK,cAAeC,MAAO,eAC7B,CAAED,IAAI,eAAD,OAAiB3D,EAAjB,SAA4B4D,MAAM,YAAD,OAAcA,OAItD,kBAACke,GAAA,EAAaD,EACZ,kBAACE,GAAA,EAAD,KACE,kBAACjT,GAAA,EAAD,CACElL,MAAM,WACN2H,OAAO,UACPwD,UAAU,gBAEV,kBAACD,GAAA,EAAD,CACElL,MAAM,WACN2H,OAAO,cACPwD,UAAU,WACVC,KAAM,SAACob,EAAMiD,GAAP,0BACSjD,EAAKE,SAAStqB,GADvB,WAIN,kBAAC,GAAD,CAAgBuL,OAAO,WAG3B,kBAACuD,GAAA,EAAD,CACElL,MAAM,iBACN2H,OAAO,UACPwD,UAAU,eACVC,MAAM,GAEN,kBAACF,GAAA,EAAD,CACElL,MAAM,WACN2H,OAAO,cACPwD,UAAU,WACVC,MAAM,GAEN,kBAAC,KAAD,CAAWzD,OAAO,oBAGtB,kBAACuD,GAAA,EAAD,CACElL,MAAM,OACN2H,OAAO,UACPwD,UAAU,eACVC,KAAK,QAEL,kBAAC,KAAD,CAAWzD,OAAO,UAEpB,kBAAC,KAAD,CAAWA,OAAO,OAAO3H,MAAM,oBAC/B,kBAAC,KAAD,CACE2H,OAAO,eACP3H,MAAM,8BAER,kBAAC0e,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,oBAO9B,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAAC6E,WAAS,EAACmG,GAAI,EAAGF,UAAU,SAASxZ,QAAS,GACtD,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,UACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC,KAAD,CACExW,OAAO,QACP6Y,UAAU,EACVxgB,MAAO1F,EAAU,sBAKzB,kBAACoR,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,kBACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC7V,GAAA,EAAD,CACEX,OAAO,WACP6Y,UAAU,EACV9c,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,YAKhD,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,mBACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC7V,GAAA,EAAD,CACEX,OAAO,iBACP6Y,UAAU,EACV9c,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,YAKhD,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,qBACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC7V,GAAA,EAAD,CACEX,OAAO,aACP6Y,UAAU,EACV9c,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,YAKhD,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,WACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACjT,GAAA,EAAD,CACElL,MAAM,cACNmL,UAAU,UACVxD,OAAO,aACPyD,KAAK,QAEL,kBAAC,KAAD,CAAWzD,OAAO,OAAO3H,MAAM,qBAMzC,kBAAC0L,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAAChW,EAAA,EAAD,CAAYxE,QAAQ,MACjBgD,EAAU,uBADb,QASA,kBAAC4jB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAACmpB,GAAA,EAAD,CACEpV,UAAU,iBACVxD,OAAO,cACP6Y,UAAU,GAEV,kBAACvV,GAAA,EAAa7T,EACZ,kBAAC8T,GAAA,EAAD,CACElL,MAAM,IACN2H,OAAO,aACPwD,UAAU,UACVC,KAAK,QAEL,kBAAC,KAAD,CAAWzD,OAAO,OAAO3H,MAAM,iBAEjC,kBAACkL,GAAA,EAAD,CACElL,MAAM,eACN2H,OAAO,aACPwD,UAAU,UACVC,KAAK,QAEL,kBAAC,GAAD,CAAgBzD,OAAO,UAEzB,kBAACW,GAAA,EAAD,CACEX,OAAO,QACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAC,KAAD,CAAW3Y,OAAO,aAClB,kBAACW,GAAA,EAAD,CACEX,OAAO,aACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,e,WC5QlD9P,GAAW,iBAAM,eAEjB0lB,GAAe,SAAC9+B,GAAW,IACvBwQ,EAAWxQ,EAAXwQ,OADsB,EAEfuuB,aAAU,aAAcvuB,EAAOxL,IAAvCg6B,EAFuB,oBAGxB/4B,EAAU8L,eAEVqH,EAAW,WACf,OAAOnT,EAAQsU,IAAI,IAGftC,EAASC,eAET2U,EAAYC,eACZ/lB,EAAcimB,uBAAY,WAC9B,GAAKH,EAAU4H,MAAf,CADoC,MAIA5H,EAAUtd,OAAzB0vB,GAJe,EAI5B3P,SAJ4B,6BA+BpC0P,EACE,CACE5tB,QAAS,CACPnG,KAAK,gBAAMg0B,GACXpiB,aAAcrM,IAGlB,CAAE0uB,UAAU,EAAMhS,UAjCF,SAAC,GAAwB,EAAtBjiB,KACnBgN,EAAO,0BAA2B,OAAQ,CAAEmV,YAAa,IAAK,GAC9DhU,UAiCD,CAACyT,EAAU4H,MAAO5H,EAAUtd,OAAQiB,EAAQyH,EAAQmB,EAAU4lB,IAEjE,OAAO,kBAAC1R,GAAA,EAAD,iBAAgBttB,EAAhB,CAAuButB,yBAA0BxmB,MAGpDo4B,GAAY,SAACn/B,GAAD,OAChB,kBAAC,KAAYA,EACX,kBAAC,GAAD,CAAc4I,MAAM,cAAc+qB,eAAe,EAAOzzB,QAAQ,WAIvDk/B,GAAiB,SAACp/B,GAC7B,IAAMoD,EAAWC,cACXH,EAAYC,cAElB,OACE,kBAACojB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAY3X,QAAS,kBAAC,GAAD,MAAesY,SAAUA,IAI5C,kBAAClH,GAAA,EAAD,CACE3B,OAAO,OACP4V,SAAUrI,eACVlV,MAAM,oBAER,kBAAC8e,GAAA,EAAD,CACEnX,OAAO,QACP8V,QAAS,CACP,CAAErhB,GAAI,WAAYzC,KAAMW,EAAU,oBAClC,CAAE8B,GAAI,YAAazC,KAAMW,EAAU,qBACnC,CAAE8B,GAAI,SAAUzC,KAAMW,EAAU,kBAChC,CAAE8B,GAAI,UAAWzC,KAAMW,EAAU,mBACjC,CAAE8B,GAAI,YAAazC,KAAMW,EAAU,qBACnC,CAAE8B,GAAI,OAAQzC,KAAMW,EAAU,gBAC9B,CAAE8B,GAAI,UAAWzC,KAAMW,EAAU,sBAGrC,kBAACwW,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAUF,OATA3U,EACE+N,GAAe,CACb,CAAExI,IAAK,cAAeC,MAAO,eAC7B,CACED,IAAI,eAAD,OAAiBoP,EAAS/S,IAC7B4D,MAAM,SAAD,OAAWmP,EAASjM,UAIxB,WCrGbsG,GAAmB,SAAC,GAAD,IAAG5B,EAAH,EAAGA,OAAQxQ,EAAX,EAAWA,MAAX,EAAkB2R,YAAlB,MACN,SAAjBnB,EAAOrK,MACL,kBAACkM,GAAA,EAAD,CAAYC,SAAUtS,EAAMsS,SAAU9B,OAAQA,IAC5C,MACA6uB,GAAqB,SAAC,GAAD,IAAG7uB,EAAH,EAAGA,OAAQxQ,EAAX,EAAWA,MAAX,EAAkB2R,YAAlB,MACR,SAAjBnB,EAAOrK,MACL,kBAACugB,GAAA,EAAD,CACEpU,SAAUtS,EAAMsS,SAChB9B,OAAQA,EACRgC,SAAUxS,EAAMwS,WAEhB,MAGO8sB,GAAiB,SAAC,GAA+B,IAA7B3tB,EAA4B,EAA5BA,YAAgB3R,EAAY,+BAK3D,OAJAmP,QAAQC,IAAIpP,GACKqD,aACjBD,CAAS+N,GAAe,CAAC,CAAExI,IAAK,cAAeC,MAAO,kBAGpD,kBAAC2J,GAAA,EAAD,iBACMvS,EADN,CAEEk3B,oBAAqB,CAAEC,UAAW,WAClCzX,KAAM,CAAEC,MAAO,YAAaC,MAAO,UAEnC,kBAAC/L,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,OAAO3H,MAAM,oBAC/B,kBAACkL,GAAA,EAAD,CACElL,MAAM,WACN2H,OAAO,UACPwD,UAAU,gBAEV,kBAACD,GAAA,EAAD,CACElL,MAAM,WACN2H,OAAO,cACPwD,UAAU,WACVC,KAAM,SAACob,EAAMiD,GAAP,0BAAiCjD,EAAKE,SAAStqB,GAA/C,WAEN,kBAAC,GAAD,CAAgBuL,OAAO,WAG3B,kBAACuD,GAAA,EAAD,CACElL,MAAM,OACN2H,OAAO,UACPwD,UAAU,eACVC,KAAK,QAEL,kBAAC,GAAD,CAAgBzD,OAAO,UAEzB,kBAACW,GAAA,EAAD,CACEtI,MAAM,oBACN2H,OAAO,aACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAC,KAAD,CAAW3Y,OAAO,UAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC2D,GAAA,EAAD,CACEC,OAAQ,SAAC3D,GAAD,OACN,kBAAC,GAAD,CACEA,OAAQA,EACRxQ,MAAOA,EACP2R,YAAaA,OAInB,kBAACuC,GAAA,EAAD,CACEC,OAAQ,SAAC3D,GAAD,OACN,kBAAC,GAAD,CACEA,OAAQA,EACRxQ,MAAOA,EACP2R,YAAaA,U,+MCrF3B,IAAM4tB,GAAej1B,KAAH,MAUH,SAASk1B,GAAT,GAGX,IAFF90B,EAEC,EAFDA,SACOgoB,EACN,EADD7lB,MAEM3J,EAAYC,cADjB,EAEmCwH,aAAS40B,GAAc,CACzD30B,UAAW,CAAEzE,MAAO,cADLgG,EAFhB,EAEOnB,QAAmBC,EAF1B,EAE0BA,KAF1B,EAKuBvH,oBAAS,GALhC,mBAKMX,EALN,KAKYsJ,EALZ,KAMDtC,qBAAU,WACHhH,GACHwJ,EAAW,MAEZ,CAACxJ,IAVH,MAY6BW,mBAAS,IAZtC,mBAYM4I,EAZN,KAYeC,EAZf,KAaKvB,EAAUmB,GAAapJ,GAA2B,IAAnBuJ,EAAQ1F,OAC7CmD,qBAAU,WACHiB,GAIDC,GACFsB,EACEtB,EAAKw0B,UAAUj3B,KAAI,SAACiE,GAAD,MAAU,CAC3BzH,GAAIyH,EAAIzH,GACRzC,KAAMkK,EAAIlK,KACVm9B,WAAYjzB,EAAIizB,kBAIrB,CAAC10B,EAASC,IA5BZ,MA8ByBvH,mBAASgvB,GA9BlC,mBA8BM7lB,EA9BN,KA8Ba+lB,EA9Bb,KA+BD7oB,qBAAU,WACR6oB,EAASF,KACR,CAACA,IAQJ,OACE,kBAAChmB,GAAA,EAAD,CACE1H,GAAG,8BACHjC,KAAMA,EACN4J,OAAQ,WACNN,GAAQ,IAEVjH,QAAS,WACPiH,GAAQ,IAEV3B,SAhBiB,SAACkC,EAAKC,GACzBsC,QAAQC,IAAI,UAAWvC,GACvB+lB,EAAS/lB,GACTnC,EAASmC,IAcPsd,kBAAmB,SAACnd,EAAQ4P,GAC1B,OAAO5P,EAAOhI,KAAO4X,GAEvB7P,eAAgB,SAACC,GACf,OAAOA,EAAOzK,MAEhB+J,QAASA,EACTtB,QAASA,EACT6B,MAAOA,EACPI,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEtE,MAAO1F,EAAU,qBACjBkS,WAAS,EACTlV,QAAQ,SACRkN,WAAU,gBACLF,EAAOE,WADF,CAERC,aACE,kBAAC,IAAMC,SAAP,KACGtC,EACC,kBAACuC,GAAA,EAAD,CAAkBpN,MAAM,UAAUqN,KAAM,KACtC,KACHN,EAAOE,WAAWC,sBC/F5B,IAAMsyB,GAAkB,CAAC,UAAW,UAAW,WAAY,WCyFnDrK,OA7Ef,YAA4D,IAAvCvd,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,YAAarG,EAAe,EAAfA,YACpCzO,EAAYC,cAClB,OACE,0BAAM+yB,YAAU,GACd,kBAAC5hB,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACkX,GAAD,CACEt/B,QAAQ,SACRkV,WAAS,EACTvI,MAAOkL,EAAS6nB,SAChBh3B,MAAO1F,EAAU,sBACjBwH,SAAU,SAACgzB,GAAD,OACR1lB,EAAY,gBAAKD,EAAN,CAAgB6nB,SAAUlC,SAI3C,kBAACppB,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACnb,GAAA,EAAD,CACEjN,QAAQ,SACRkV,WAAS,EACTvI,MAAOkL,EAASjM,KAChBlD,MAAO1F,EAAU,sBACjBwH,SAAU,SAAC4O,GAAD,OAAOtB,EAAY,gBAAKD,EAAN,CAAgBjM,KAAMwN,EAAEC,OAAO1M,aAG/D,kBAACyH,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC5T,GAAA,EAAD,CACEC,aAAa,SACbS,WAAS,EACTvI,MAAOkL,EAAS6lB,mBAChBh1B,MAAO1F,EAAU,oCACjBwH,SAAU,SAACyrB,GAAD,OACRne,EAAY,gBAAKD,EAAN,CAAgB6lB,mBAAoBzH,EAAQ0J,aAEzDzT,OAAO,gBAGX,kBAAC9X,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACQ,GAAA,EAAD,CAAa5oB,QAAQ,SAASkV,WAAS,GACrC,kBAAC2T,GAAA,EAAD,CAAY/jB,GAAG,cACZ9B,EAAU,wBAEb,kBAAC8lB,GAAA,EAAD,CACEvO,SAAUklB,GAAgBvjB,SAASrE,EAAS5R,OAC5C6lB,QAAS,QACTpjB,MAAM,aACNiE,MAAOkL,EAAS5R,OAAS,WACzBuE,SAAU,SAAC4O,GAAD,OACRtB,EAAY,gBAAKD,EAAN,CAAgB5R,MAAOmT,EAAEC,OAAO1M,WAG5C,CACC,CAAE7H,GAAI,QAASzC,KAAMW,EAAU,iBAC/B,CAAE8B,GAAI,UAAWzC,KAAMW,EAAU,oBACjCsF,KAAI,SAACkW,GAAD,OACJ,kBAACuK,GAAA,EAAD,CAAUvgB,IAAG,kBAAagW,EAAE1Z,IAAM6H,MAAO6R,EAAE1Z,IACxC0Z,EAAEnc,SAGU,UAAhBoP,GACC,kBAACsX,GAAA,EAAD,CAAUvgB,IAAI,mBAAmBmE,MAAM,YACpC,IACA3J,EAAU,0B,2MCtD7B,IAAM48B,GAAkBx1B,KAAH,MAQf3J,GAAYC,MAAW,SAACC,GAAD,MAAY,CACvC+H,MAAO,CACL+0B,WAAY,OACZ1uB,UAAW,QACXlO,aAAcF,EAAMG,QAAQ,QAiMjBmrB,OA7Lf,YAA4C,IAA1BpU,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACtB+nB,EAAMlvB,OAAQgB,IAAI,EAAG,SAASua,OAAO,cAAc4C,WACnDgR,EAAQnvB,OAAQub,OAAO,cAAc4C,WAFA,EAIQrkB,aAASm1B,GAAiB,CACzEl1B,UAAW,CACTC,MAAO,CACLo1B,aAAa,GAAD,OAAKD,EAAM9R,UAAU,EAAG,IACpCgS,aAAa,GAAD,OAAKH,EAAI7R,UAAU,EAAG,IAClCiS,WAAYpoB,EAAS6nB,SAAS56B,OALnBk5B,EAJwB,EAIjClzB,QAA0Bo1B,EAJO,EAIbn1B,KAJa,EAaHmB,IAAM1I,SAAS,GAbZ,mBAalCq0B,EAbkC,KAarBO,EAbqB,OAcjBlsB,IAAM1I,SAAS,GAdE,mBAclC6b,EAdkC,KAc5B8Y,EAd4B,KAuBnCn1B,EAAYC,cACZR,EAAUhC,KACZ0/B,EAAe,EAEbpP,EAAalZ,EAASjF,SAAStD,QACnC,SAACC,EAASuD,GAAV,OAAsBvD,EAAUuD,EAAQlD,MAAQkD,EAAQhD,WACxD,GAsBF,OApBAjG,qBAAU,WAIR,GAHIm0B,GACF/uB,QAAQC,IAAI,aAEVgxB,EAAY,CACdjxB,QAAQC,IAAI,cAAegxB,GAC3B,IAAME,EAAqBpwB,SAAS6H,EAAS6nB,SAASF,YACtDW,EAAeD,EAAWlrB,eAAe1F,QACvC,SAAC2M,EAAD,UAAyBA,EAAzB,EAAQuU,aACR4P,GAEFD,GAAgBpP,EAChB9hB,QAAQC,IAAI,eAAgBixB,GAC5BroB,EAAY,gBAAKD,EAAN,CAAgBwoB,UAAWF,GAAgB,EAAGA,kBAEtDD,GACHjxB,QAAQC,IAAI,2BAA4BgxB,KAEzC,CAACA,EAAYlC,IAGd,kBAAC,IAAM5wB,SAAP,KACE,kBAAC5I,EAAA,EAAD,CAAYxE,QAAQ,KAAKE,cAAY,GAClC8C,EAAU,uCAEb,kBAACoR,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,EAACwC,UAAWD,EAAQiG,OACzC1F,EAAU,wBAGf,kBAACoR,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,GAAE2X,EAASjM,OAErC,kBAACwI,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,EAACwC,UAAWD,EAAQiG,OACzC1F,EAAU,4BAGf,kBAACoR,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,GAAE2X,EAAS6nB,SAASr9B,OAE9C,kBAAC+R,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,EAACwC,UAAWD,EAAQiG,OAA5C,SAIF,kBAAC0L,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,GAAE2X,EAAS6nB,SAASF,aAE9C,kBAACprB,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,EAACwC,UAAWD,EAAQiG,OACzC1F,EAAU,sCAGf,kBAACoR,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,GACrByQ,KAAMkH,EAAS6lB,oBAAoBxR,OAAO,gBAG/C,kBAAC9X,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,EAACwC,UAAWD,EAAQiG,OACzC1F,EAAU,yBAGf,kBAACoR,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,EAAG4N,GAAI,GACpB,kBAAC5jB,EAAA,EAAD,CAAYtE,cAAY,GAAE2X,EAAS5R,QAErC,kBAACmO,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAAC8lB,GAAA,EAAD,CAAgBvgC,UAAWqL,MACzB,kBAACC,GAAA,EAAD,CAAOlH,aAAW,kBAChB,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAS0pB,QAAS,GAAnC,WAGA,kBAAC3pB,GAAA,EAAD,CAAWC,MAAM,SAAjB,UAEF,kBAACF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,WAGJ,kBAACC,GAAA,EAAD,KACGmM,EAASjF,UACRiF,EAASjF,SACNiK,MAAMwC,EAAOwY,EAAaxY,EAAOwY,EAAcA,GAC/CvvB,KAAI,SAACwK,GACJ,OACE,kBAACvH,GAAA,EAAD,CAAU/C,IAAKsK,EAAQhO,IACrB,kBAAC0G,GAAA,EAAD,KACE,kBAAC,GAAD,CAAgB6E,OAAO,OAAOC,OAAQwC,KAExC,kBAACtH,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CACEX,OAAO,QACPC,OAAQwC,EACR1G,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,UAG5C,kBAACxd,GAAA,EAAD,CAAWC,MAAM,SACdqH,EAAQhD,UAEX,kBAACtE,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CACEX,OAAO,aACPC,OAAQwC,EACR1G,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,cAMtD,kBAACzd,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAW2pB,QAAS,GAApB,SACA,kBAAC3pB,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CACEX,OAAO,aACPC,OAAQ,CAAEygB,cACV3kB,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,WAI9C,kBAACzd,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAW2pB,QAAS,GAApB,wBACA,kBAAC3pB,GAAA,EAAD,CAAWC,MAAM,SACf,6BACE,kBAACuF,GAAA,EAAD,CACEX,OAAO,eACPC,OAAM,gBAAOuH,GACbzL,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAEzCnR,EAASwoB,UAAY,KACpB,wBAAI37B,MAAO,CAAEzE,MAAO,QAApB,uBAQd,kBAACq4B,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5Bx4B,UAAU,MACVyhB,MAAO3J,EAASjF,SAASlM,OACzBmxB,YAAaA,EACbxY,KAAMA,EACNyY,aArKe,SAACh0B,EAAO60B,GAC/BR,EAAQQ,IAqKAC,oBAlKsB,SAAC90B,GAC/Bs0B,EAAepoB,SAASlM,EAAMuV,OAAO1M,MAAO,KAC5CwrB,EAAQ,U,0YChDZ,IAAM+D,GAAe9xB,KAAH,MAyHHm2B,GArGO,SAAC,GAA+B,IAA7B1oB,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC3BC,EAASC,eACTvX,EAAYC,YAAW,CAC3B2J,MAAO,CACLnB,SAAU,OAGN6B,EAASN,aAASyxB,IAAlBnxB,KACFy1B,EAAa,yCAAG,WAAOC,GAAP,kBAAAxmB,EAAA,sDACpB,IACEwmB,EAAIC,QACEC,EAAc51B,EAAK6H,SAAStD,QAAO,SAACC,EAAS5D,GAEjD,OADA4D,EAAQ5D,EAAIC,MAAQD,EACb4D,IACN,IACGqD,EAAW6tB,EACdviB,QAAO,SAACvS,GACP,IAAMC,EAAOD,EAAI,IAAiB,KAAXA,EAAI,IAAaA,EAAI,GAAG2J,QAAQ,KAAM,IAC7D,MAAkB,KAAX3J,EAAI,IAAwB,KAAXA,EAAI,IAAag1B,EAAY/0B,MAEtDtD,KAAI,SAACqD,GACJ,IACImE,EADElE,EAAOD,EAAI,GAAG2J,QAAQ,KAAM,IAGhCxF,GAD2B,IAAzBnE,EAAI,GAAGuQ,SAAS,KACPlM,SAASrE,EAAI,IAAMqE,SAASrE,EAAI,GAAGpF,MAAM,IAAI,KAE7CoF,EAAI,GAEjB,IAAMiE,EAAQsL,WAAWylB,EAAY/0B,GAAMgM,MAC3C,OAAO,gBACF+oB,EAAY/0B,GADjB,CAEEkE,WACAF,QACA4gB,WAAY1gB,EAAWF,OAG7BmI,EAAO,YAAD,OAAanF,EAASlM,OAAtB,cACNoR,EAAY,gBACPD,EADM,CAETjF,cAEF,MAAO0F,GACPP,EAAO,UAAD,OAAWO,EAAX,KAAqB,WAlCT,2CAAH,sDAqCb7V,EAAUhC,IA7CmC,EA8CbyL,IAAM1I,SAAS,GA9CF,mBA8C5Cq0B,EA9C4C,KA8C/BO,EA9C+B,OA+C3BlsB,IAAM1I,SAAS,GA/CY,mBA+C5C6b,EA/C4C,KA+CtC8Y,EA/CsC,KAwDnD,OACE,kBAAC,IAAM/qB,SAAP,KACE,kBAAC,KAAD,CAAWwzB,aAAc,SAAC71B,GAAD,OAAUy1B,EAAcz1B,IAAOrC,MAAM,uBAC9D,uBAAGm4B,KAAMC,KAAaznB,OAAO,UAA7B,YAGCxB,EAASjF,UAAYiF,EAASjF,SAASlM,OAAS,GAC/C,kBAAC0E,GAAA,EAAD,KACE,kBAACk1B,GAAA,EAAD,CAAgBvgC,UAAWqL,MACzB,kBAACC,GAAA,EAAD,CAAO3I,UAAWD,EAAQ4H,MAAOiD,KAAK,QAAQnJ,aAAW,iBACvD,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,eACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,YACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,cAGJ,kBAACC,GAAA,EAAD,KACGmM,EAASjF,SAASiK,MAAMwC,EAAOwY,EAAaxY,EAAOwY,EAAcA,GAAavvB,KAAI,SAACqD,GAAD,OACjF,kBAACJ,GAAA,EAAD,CAAU/C,IAAKmD,EAAI6D,MACjB,kBAAChE,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAIC,MAC9B,kBAACJ,GAAA,EAAD,CAAWC,MAAM,SACf,kBAAC,GAAD,CAAgB4E,OAAO,OAAOC,OAAQ3E,KAExC,kBAACH,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CAAaX,OAAO,QAAQC,OAAQ3E,EAAKS,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,UAEnF,kBAACxd,GAAA,EAAD,CAAWC,MAAM,SAASE,EAAImE,UAC9B,kBAACtE,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACuF,GAAA,EAAD,CAAaX,OAAO,aAAaC,OAAQ3E,EAAKS,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,iBAOlG,kBAACsP,GAAA,EAAD,CAAiBC,mBAAoB,CAAC,EAAG,GAAI,IAAKx4B,UAAU,MAAMyhB,MAAO3J,EAASjF,SAASlM,OAAQmxB,YAAaA,EAAaxY,KAAMA,EAAMyY,aA9CxH,SAACh0B,EAAO60B,GAC/BR,EAAQQ,IA6CuKC,oBA1CjJ,SAAC90B,GAC/Bs0B,EAAepoB,SAASlM,EAAMuV,OAAO1M,MAAO,KAC5CwrB,EAAQ,S,6kBC5DZ,IAAM13B,GAAYC,MAAW,SAACC,GAAD,MAAY,CACvCwrB,OAAO,aACLhjB,MAAO,OACPxH,WAAYhB,EAAMG,QAAQ,GAC1Bc,YAAajB,EAAMG,QAAQ,IAC1BH,EAAM2C,YAAY+F,GAAG,KAA0B,EAAnB1I,EAAMG,QAAQ,IAAU,CACnDqI,MAAO,KACPxH,WAAY,OACZC,YAAa,SAGjBwqB,MAAM,aACJxmB,UAAWjF,EAAMG,QAAQ,GACzBurB,aAAc1rB,EAAMG,QAAQ,GAC5B4I,QAAS/I,EAAMG,QAAQ,IACtBH,EAAM2C,YAAY+F,GAAG,KAA0B,EAAnB1I,EAAMG,QAAQ,IAAU,CACnD8E,UAAWjF,EAAMG,QAAQ,GACzBurB,aAAc1rB,EAAMG,QAAQ,GAC5B4I,QAAS/I,EAAMG,QAAQ,KAG3BwrB,QAAS,CACP5iB,QAAS/I,EAAMG,QAAQ,EAAG,EAAG,IAE/Bo1B,QAAS,CACPvtB,QAAS,OACTilB,eAAgB,YAElBuI,OAAQ,CACNvwB,UAAWjF,EAAMG,QAAQ,GACzBa,WAAYhB,EAAMG,QAAQ,QAIxBigC,GAAqB32B,KAAH,MASlB42B,GAA0B52B,KAAH,MASvB62B,GAAqB72B,KAAH,MAUT,eAAgC,IAqBzC82B,EArBYzvB,EAA4B,EAA5BA,YACVvO,GADsC,+BAC3BC,eACXH,EAAYC,cACZR,EAAUhC,KACVsF,EAAU8L,eAJ4B,EAK5BqG,aAAY6oB,IAArBhD,EALqC,sBAMRv6B,mBAAS,GAND,mBAMrC8pB,EANqC,KAMzBC,EANyB,KAOtC7V,EAAgB,CACpB9L,KAAM,GACN8zB,SAAU,KACVhC,mBAAoB/sB,OAAQgB,IAAI,EAAG,SAASguB,SAC5C/sB,SAAU,GACV3M,MAAO,WAZmC,EAcZzC,mBAASkU,GAdG,mBAcrCG,EAdqC,KAc3BC,EAd2B,KAe5C5U,EACE+N,GAAe,CACb,CAAExI,IAAK,iBAAkBC,MAAO,kBAChC,CAAED,IAAK,wBAAyBC,MAAO,iBAlBC,MAwBC+B,aAC3Cu2B,IADehD,EAxB2B,EAwBpClzB,QAA0BmzB,EAxBU,EAwBhBlzB,KAG5BlB,qBAAU,WACR,GAAIo0B,GAAUA,EAAOjpB,eAAetO,OAAS,GAAuB,KAAlBmR,EAASjM,KAAa,CACtE,IAAM3D,EAAOg2B,EAAOjpB,eAAe,GACnC8C,EAAY,gBACPD,EADM,CAETjM,KAAMgN,GAA6B3Q,EAAK2D,YAG3C,CAACqyB,EAAQpmB,IAnCgC,MAsCcpN,aACxDw2B,IADeE,EAtC2B,EAsCpCr2B,QAAgCs2B,EAtCI,EAsCVr2B,KAclC,GAXAlB,qBAAU,WACR,GACEu3B,GACAA,EAAc7B,UAAU74B,OAAS,IAChCmR,EAAS6nB,SACV,CACA,IAAMA,EAAW0B,EAAc7B,UAAU,GACzCznB,EAAY,gBAAKD,EAAN,CAAgB6nB,iBAE5B,CAAC0B,EAAevpB,IAEfmmB,GAAamD,EAAiB,MAAO,wBAEzC,IAAM3T,EAAQ,CACZxqB,EAAU,gCACVA,EAAU,sCACVA,EAAU,yBA+DZ,OALEk+B,EADgB,GAAd5T,GAA+C,GAA5BzV,EAASjF,SAASlM,OAOvC,0BAAMhE,UAAWD,EAAQ0pB,QACvB,kBAAC/gB,GAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC5nB,EAAA,EAAD,CAAYzE,UAAU,KAAKC,QAAQ,KAAKyL,MAAM,UAC3CzI,EAAU,qCACX,kBAACo7B,GAAA,EAAD,CACE15B,MAAO,CAAE25B,MAAO,SAChBC,aAAczmB,EAASjF,SAASlM,OAChCzG,MAAM,WAEN,kBAACs+B,GAAA,EAAD,QAGJ,kBAAC9vB,GAAA,EAAD,CAAS6e,WAAYA,EAAY5qB,UAAWD,EAAQ6pB,SACjDkB,EAAMllB,KAAI,SAACI,GAAD,OACT,kBAACiG,GAAA,EAAD,CAAMnG,IAAKE,GACT,kBAACkG,GAAA,EAAD,KAAYlG,QAKlB,kBAAC,IAAM0E,SAAP,KACkB,IAAfkgB,GACC,kBAAC,GAAD,CAAezV,SAAUA,EAAUC,YAAaA,IAElC,IAAfwV,GACC,kBAAC,GAAD,CACE7b,YAAaA,EACboG,SAAUA,EACVC,YAAaA,IAGD,IAAfwV,GACC,kBAAC,GAAD,CAAQzV,SAAUA,EAAUC,YAAaA,IAG3C,yBAAKpV,UAAWD,EAAQyzB,SACrB5I,EAAa,GACZ,kBAACte,GAAA,EAAD,CAAQ5K,QAhDD,WACjBmpB,EAAcD,EAAa,IA+CYrtB,MAAM,WAChC+C,EAAU,gBAGdsqB,EAAa,GACZ,kBAACte,GAAA,EAAD,CACE5K,QA1DK,WACjBmpB,EAAcD,EAAa,IA0DfrtB,MAAM,UACNsa,SAAU2mB,GAETl+B,EAAU,gBAGC,IAAfsqB,GACC,kBAACte,GAAA,EAAD,CACE5K,QA5GK,WACjB,IAAM2G,EAAO,CACXa,KAAMiM,EAASjM,KACfq0B,WAAYpoB,EAAS6nB,SAAS56B,GAC9B44B,mBAAoB/sB,KAAMkH,EAAS6lB,oBAAoBrhB,cACvDmU,WAVK3Y,EAASjF,SAAStD,QAAO,SAAC2R,EAAGoD,GAClC,OAAOpD,EAAI/F,WAAWmJ,EAAEvU,UAAYoL,WAAWmJ,EAAEzU,SAChD,GASD3J,MAAO4R,EAAS5R,MAChB2M,SAAU,CACRvR,OAAQwW,EAASjF,SAAStK,KAAI,SAAC+b,GAAD,MAAQ,CACpC5M,UAAW4M,EAAEvf,GACbgL,SAAUE,SAASqU,EAAEvU,SAAU,IAC/BF,MAAOsL,WAAWmJ,EAAEzU,OACpB4gB,WAAYtV,WAAWmJ,EAAEvU,UAAYoL,WAAWmJ,EAAEzU,aAIxDmuB,EAAM,CAAErzB,UAAW,CAAEK,UAAU+N,MAAK,WAClC/S,EAAQe,KAAK,sBA4FH7G,MAAM,UACNsa,SAAgC,GAAtB1C,EAASwoB,WAElBr9B,EAAU,qBC7Ndq+B,GAAoB,SAACvhC,GAAW,IAAD,EAChB0D,mBAAS,WADO,mBACnCyC,EADmC,KAC5Bq7B,EAD4B,KAEpCp+B,EAAWC,cACXH,EAAYC,cACZ8C,EAAU8L,eAKVigB,EAAa,SAACxhB,GAAD,OAAY,WAC7BrB,QAAQC,IAAI,SAAUoB,KAexB,OACE,kBAAC8D,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACb,kBAAChW,EAAA,EAAD,CAAYxE,QAAQ,MACjBgD,EAAU,sBADb,OAEE,kBAACgM,GAAA,EAAD,CACE/O,MAAM,UACNqN,KAAK,QACLlJ,QA5BK,WAAO,IACZU,EAAOhF,EAAPgF,GACRiB,EAAQe,KAAR,yBAA+BhC,EAA/B,WA2BQyV,SAAUtU,GAAmB,YAAVA,GAEnB,kBAAC,KAAD,MANF,OAOSjD,EAAU,iBAGrB,kBAAC0jB,GAAA,EAAD,eACE1kB,MAAM,yBACNkwB,QAAS,kBAAC,IAAM9kB,SAAP,OACLtN,IAEH,SAAC6mB,GACA,IAAMje,EAAQie,EAAgBrW,OAC1BqW,EAAgBrW,OAAO1E,KACvB,GACE9G,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAUhE,OATA5B,EACE+N,GAAe,CACb,CAAExI,IAAK,iBAAkBC,MAAO,kBAChC,CACED,IAAI,kBAAD,OAAoB3D,EAApB,SACH4D,MAAM,YAAD,OAAcA,OAKvB,kBAACke,GAAA,EAAaD,EACZ,kBAACE,GAAA,EAAD,KACE,kBAACjT,GAAA,EAAD,CACElL,MAAM,WACN2H,OAAO,cACPwD,UAAU,WACVC,MAAM,GAEN,kBAAC,KAAD,CAAWzD,OAAO,UAEpB,kBAAC,KAAD,CAAWA,OAAO,OAAO3H,MAAM,iBAC/B,kBAAC0e,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,oBAO9B,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAAC6E,WAAS,EAACmG,GAAI,EAAGF,UAAU,SAASxZ,QAAS,GACtD,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,UACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KAME,kBAAC7S,GAAA,EAAD,CACEkV,UAAU,EACVjV,OAAQ,SAAC3D,GAAD,OAxED,SAACA,GAGpB,OAFArB,QAAQC,IAAI,WAAYoB,GACxBgxB,EAAShxB,EAAOrK,OACTqK,EAAOrK,MAqEkBs7B,CAAajxB,SAKzC,kBAAC8D,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,QACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC7V,GAAA,EAAD,CACEX,OAAO,aACP6Y,UAAU,EACV9c,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,YAKhD,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,0BACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAAW8B,UAAU,EAAO7Y,OAAO,2BAK3C,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,IACb,kBAAChW,EAAA,EAAD,CAAYxE,QAAQ,MACjBgD,EAAU,0BADb,OAEE,kBAACgM,GAAA,EAAD,CACE/O,MAAM,UACNqN,KAAK,QACLlJ,QA9GW,WAAO,IAClBU,EAAOhF,EAAPgF,GACRiB,EAAQe,KAAK,4BAA6B,CACxCwJ,OAAQ,CAAEqH,cAAe,CAAE7S,UA4GrByV,SAAUtU,GAAmB,YAAVA,GAEnB,kBAACmsB,GAAA,EAAD,MANF,OAOSpvB,EAAU,mBAGrB,kBAAC0jB,GAAA,EAAD,eACE1kB,MAAM,WACNkwB,QAAS,kBAAC,IAAM9kB,SAAP,OACLtN,IAEH,SAAC6mB,GACA,IAAKA,EAAgBrW,OACnB,OAAO,KAET,IAAMxL,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAChE,OACE,kBAACuN,GAAA,EAAD,CACEC,SAAS,oBACTC,WAAW,EACXC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,UAAU,EACVP,SAAS,qBACT8L,OAAQ,CAAEvG,cAAe,CAAE7S,QAE3B,kBAAC6O,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACElL,MAAM,IACN2H,OAAO,aACPwD,UAAU,WAEV,kBAAC,KAAD,CAAWxD,OAAO,OAAO3H,MAAM,iBAEjC,kBAACkL,GAAA,EAAD,CACElL,MAAM,eACN2H,OAAO,aACPwD,UAAU,WAEV,kBAAC,GAAD,CAAgBxD,OAAO,UAEzB,kBAACW,GAAA,EAAD,CACEX,OAAO,QACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAC,KAAD,CAAW3Y,OAAO,aAClB,kBAACW,GAAA,EAAD,CACEX,OAAO,aACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAChV,GAAA,EAAD,CACEC,OAAQ,SAAC3D,GAAD,OACN,kBAACtB,GAAA,EAAD,CACE/O,MAAM,UACNqN,KAAK,QACLiN,SAAUtU,GAAkB,WAATA,EACnB7B,QAAS0tB,EAAWxhB,IAEpB,kBAAC,KAAD,MANF,OAOStN,EAAU,2BCvM5Bw+B,GAAoB,SAAC1hC,GAChC,IAAMoD,EAAWC,cACXH,EAAYC,cAClB,OACE,kBAACojB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,YAClB,kBAACgS,GAAA,EAAD,CACE3B,OAAO,OACP4V,SAAUrI,eACVlV,MAAM,uBAER,kBAACgf,GAAA,EAAD,CAAWrX,OAAO,uBAClB,kBAACmX,GAAA,EAAD,CACEnX,OAAO,QACP3H,MAAM,SACNyd,QAAS,CACP,CAAErhB,GAAI,QAASzC,KAAMW,EAAU,iBAC/B,CAAE8B,GAAI,UAAWzC,KAAMW,EAAU,mBACjC,CAAE8B,GAAI,YAAazC,KAAMW,EAAU,wBAUvC,kBAACwW,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAUF,OATA3U,EACE+N,GAAe,CACb,CAAExI,IAAK,iBAAkBC,MAAO,kBAChC,CACED,IAAI,kBAAD,OAAoBoP,EAAS/S,IAChC4D,MAAM,SAAD,OAAWmP,EAASjM,UAIxB,WAQN61B,GAAoB,SAAC3hC,GAKhC,OAJiBqD,aACjBD,CACE+N,GAAe,CAAC,CAAExI,IAAK,iBAAkBC,MAAO,qBAGhD,kBAAC2J,GAAA,EAAD,iBACMvS,EADN,CAEEk3B,oBAAqB,CAAEC,UAAW,WAClCzX,KAAM,CAAEC,MAAO,YAAaC,MAAO,UAEnC,kBAAC/L,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,OAAO3H,MAAM,uBAC/B,kBAACsI,GAAA,EAAD,CACEX,OAAO,aACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAC5B,GAAA,EAAD,CAAW/W,OAAO,uBAClB,kBAAC,KAAD,CAAWA,OAAO,QAAQ3H,MAAM,WAChC,kBAAC0e,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAACmW,GAAA,EAAD,S,qBC9BOkb,OAxDf,YAA2D,IAA1B7pB,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACnC9U,EAAYC,cAqClB,OACE,kBAACmR,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAACvT,GAAD,CACErK,SAvCa,SAACmN,GACpBA,EAAc/E,SAAS3C,SAAQ,SAACoU,GAC9BA,EAAEsd,cAAgB,EAClBtd,EAAEmM,WAAa,KAGjB1Y,EAAY,gBACPD,EADM,CAETF,oBAgCI3L,aAAc6L,EAASF,iBAG1BE,EAASF,eA/BqB,WAAO,IAChCA,EAAkBE,EAAlBF,cACF+lB,EAAqB/sB,KAAMgH,EAAc+lB,oBAC/C,OACE,kBAAC,IAAMtwB,SAAP,KACE,kBAACgH,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,2BAA4B2U,EAAc+nB,SAASr9B,OAEhF,kBAAC+R,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,qCAAsC06B,EAAmBxR,OAAO,cAA3F,MAEF,kBAAC9X,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,wBAAyB2U,EAAc1R,QAEpE,kBAACmO,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GAAI4N,GAAI,GACrB,kBAAC,GAAD,CAAU1f,MAAO1F,EAAU,6BACzB,kBAACgO,GAAA,EAAD,CAAaX,OAAO,aAAaC,OAAQqH,EAAevL,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,YAe3E4Y,K,2ECpC3BC,GAAenhC,YAAW,CAC9B6D,KAAM,CACJ,QAAS,CACPu9B,aAAc,YAKL,eAA2C,IAAxCn2B,EAAuC,EAAvCA,IAAKo2B,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,gBAAsB,EAC/B91B,IAAM1I,UAAS,GADgB,mBAChDX,EADgD,KAC1CsJ,EAD0C,KAEjD1J,EAAUo/B,KACR/uB,EAAmCnH,EAAnCmH,QAASmvB,EAA0Bt2B,EAA1Bs2B,QAASnyB,EAAiBnE,EAAjBmE,SAAUhL,EAAO6G,EAAP7G,GAC9Bo9B,EAAqBD,EAAUA,EAAQ3yB,QAAO,SAAC6yB,EAAKlhB,GAExD,OADAkhB,GAAOnyB,SAASiR,EAAE0gB,cAAe,MAEhC,GAAK,EAOR,OACE,kBAAC,IAAMv0B,SAAP,KACE,kBAAC7B,GAAA,EAAD,CAAUlD,OAAK,EAAC3F,UAAWD,EAAQ8B,KAAMH,QAAS,kBAAM+H,GAAStJ,KAC/D,kBAAC2I,GAAA,EAAD,KACE,kBAACtH,EAAA,EAAD,CAAYC,aAAW,aAAamJ,KAAK,QAAQlJ,QAAS,kBAAM+H,GAAStJ,KACtEA,EAAO,kBAACu/B,GAAA,EAAD,MAAsB,kBAACC,GAAA,EAAD,QAGlC,kBAAC72B,GAAA,EAAD,KAAW,kBAAC,KAAD,CAAW6E,OAAO,OAAOC,OAAQwC,KAC5C,kBAACtH,GAAA,EAAD,CAAWzL,UAAU,MACnB,kBAAC,GAAD,CAAgBsQ,OAAO,OAAOC,OAAQwC,KAExC,kBAACtH,GAAA,EAAD,CAAWC,MAAM,SAASqE,GAC1B,kBAACtE,GAAA,EAAD,CAAWC,MAAM,SAASy2B,GAC1B,kBAAC12B,GAAA,EAAD,CAAWC,MAAM,SACf,kBAACvH,EAAA,EAAD,CAAYE,QArBG,WACrB29B,GAAcA,EAAWp2B,KAqBhBmE,IAAaoyB,EAAqB,kBAAC,KAAD,CAAiBjiC,MAAM,cAAiB,kBAAC,KAAD,CAAkBA,MAAM,eAIzG,kBAACsL,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAW9G,MAAO,CAAEmD,cAAe,EAAGD,WAAY,GAAKutB,QAAS,GAC9D,kBAACmN,GAAA,EAAD,CAAUC,GAAI1/B,EAAM2/B,QAAQ,OAAOC,eAAa,GAC9C,kBAACt3B,GAAA,EAAD,CAAKqC,OAAQ,GACX,kBAAChJ,EAAA,EAAD,CAAYxE,QAAQ,KAAKE,cAAY,EAACH,UAAU,OAAhD,WAGA,kBAACsL,GAAA,EAAD,CAAOiC,KAAK,QAAQnJ,aAAW,aAC7B,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,kBACA,kBAACA,GAAA,EAAD,oBACA,kBAACA,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,YAGrB,kBAACC,GAAA,EAAD,KACGu2B,GAAWA,EAAQ35B,KAAI,SAACo6B,EAAQzlB,GAC/B,OACE,kBAAC1R,GAAA,EAAD,CAAU/C,IAAG,kBAAa1D,EAAb,YAAmBmY,IAC9B,kBAACzR,GAAA,EAAD,KACE,kBAACoI,GAAA,EAAD,CAAgBvD,OAAO,cAAcC,OAAQoyB,EAAQ7uB,UAAU,YAAYzB,SAAS,cAClF,kBAAC,KAAD,CAAW/B,OAAO,WAGtB,kBAAC7E,GAAA,EAAD,KACE,kBAAC4b,GAAA,EAAD,CAAW/W,OAAO,aAAaC,OAAQoyB,KAEzC,kBAACl3B,GAAA,EAAD,KACE,kBAACwF,GAAA,EAAD,CAAaX,OAAO,gBAAgBC,OAAQoyB,KAE9C,kBAACl3B,GAAA,EAAD,CAAWC,MAAM,SAASi3B,EAAOn4B,UAAjC,MAA+Cm4B,EAAOvyB,SACtD,kBAAC3E,GAAA,EAAD,KACE,kBAACwD,GAAA,EAAD,CAAQhP,QAAQ,WAAWsN,KAAK,QAAQlJ,SAzDnCmR,EAyDgE0H,EAzDtD,WACrC+kB,GAAmBA,EAAgBzsB,EAAO5J,KAwDqD1L,MAAM,aAC7E,kBAACm9B,GAAA,EAAD,MACA,kBAAC54B,EAAA,EAAD,CAAYxE,QAAQ,SAApB,aA3DE,IAACuV,aC3BhB,eAA8D,IAA3D3C,EAA0D,EAA1DA,SAAU+vB,EAAgD,EAAhDA,aAAcZ,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,gBAC9Ch/B,EAAYC,cADwD,EAEpCiJ,IAAM1I,SAAS,IAFqB,mBAEnEq0B,EAFmE,KAEtDO,EAFsD,OAGlDlsB,IAAM1I,SAAS,GAHmC,mBAGnE6b,EAHmE,KAG7D8Y,EAH6D,KAcpEyK,EAAUD,EAAe,CAAC/vB,EAAShG,MAAK,SAAAyX,GAAC,OAAIA,EAAEvf,KAAO69B,MAAiB/vB,EAE7E,OACE,kBAAC,IAAMxF,SAAP,KACE,kBAACkzB,GAAA,EAAD,CAAgBvgC,UAAWqL,MACzB,kBAACC,GAAA,EAAD,CAAOlH,aAAW,gBAChB,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,MACA,kBAACA,GAAA,EAAD,KAAYxI,EAAU,iBACtB,kBAACwI,GAAA,EAAD,KAAYxI,EAAU,iBACtB,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,qBACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,2BACpC,kBAACwI,GAAA,EAAD,CAAWC,MAAM,SAASzI,EAAU,sBAGxC,kBAAC0I,GAAA,EAAD,KACGk3B,EAAQ/lB,MAAMwC,EAAOwY,EAAaxY,EAAOwY,EAAcA,GAAavvB,KAAI,SAACqD,GAAD,OACvE,kBAACk3B,GAAD,CAAkBl3B,IAAKA,EAAKnD,IAAKmD,EAAI7G,GAAIi9B,WAAYA,EAAYC,gBAAiBA,UAK1F,kBAAC1J,GAAA,EAAD,CAAiBC,mBAAoB,CAAC,EAAG,GAAI,IAAKx4B,UAAU,MAAMyhB,MAAO5O,EAASlM,OAAQmxB,YAAaA,EAAaxY,KAAMA,EAAMyY,aAhC3G,SAACh0B,EAAO60B,GAC/BR,EAAQQ,IA+B0JC,oBA5BpI,SAAC90B,GAC/Bs0B,EAAepoB,SAASlM,EAAMuV,OAAO1M,MAAO,KAC5CwrB,EAAQ,QCFGlM,OAdf,YAA+B,IAAbpU,EAAY,EAAZA,SACV7U,EAAYC,cACV2P,EAAaiF,EAASF,cAAtB/E,SAER,OACE,kBAAC,IAAMxF,SAAP,KACE,kBAAC5I,EAAA,EAAD,CAAYxE,QAAQ,KAAKE,cAAY,GAClC8C,EAAU,uBAEb,kBAAC8/B,GAAD,CAAoBlwB,SAAUA,MCSrBmwB,OAvBf,YAAmD,IAAvBra,EAAsB,EAAtBA,MAAOiY,EAAe,EAAfA,YACjC1xB,QAAQC,IAAI,iBAAkByxB,GAC9B1xB,QAAQC,IAAI,UAAWwZ,GACvB,IAAMsa,EAAW,GACjBrC,EAAY1wB,SAAQ,WAAyBsF,GAAW,IAAjChL,EAAgC,EAAhCA,UAAW4F,EAAqB,EAArBA,QAChC6yB,EAASztB,GAAS,CAAEhL,WAAW,EAAO4F,SAAS,GAE3CuY,EAAMne,UAAY4F,IACpB6yB,EAASztB,GAAOhL,WAAY,GAE1Bme,EAAMvY,QAAUA,IAClB6yB,EAASztB,GAAOpF,SAAU,GAE5BlB,QAAQC,IAAI,CAAE3E,YAAW4F,YACzBlB,QAAQC,IAAI8zB,EAASztB,OAEvB,IAAMsX,EAAMmW,EAASp2B,MACnB,gBAAGrC,EAAH,EAAGA,UAAW4F,EAAd,EAAcA,QAAd,OAA0C,IAAd5F,IAAkC,IAAZ4F,KAGpD,OADAlB,QAAQC,IAAI,UAAW2d,QACTtO,GAAPsO,G,yKCGT,IAAMoW,GAAuB74B,KAAH,MASX,eAAgC,IAA7ByN,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACpBC,EAASC,eAD6B,EAEFxU,mBAAS,IAA3C0/B,EAFoC,EAEpCA,aACAvrB,GAHoC,EAEtBwrB,gBACItrB,EAAlBF,eACA/E,EAAa+E,EAAb/E,SAJoC,EAKlBnI,aAASw4B,IAAlBl4B,GAL2B,EAKpCD,QALoC,EAK3BC,MAL2B,EAOVvH,mBAAS,IAPC,mBAOrC4/B,EAPqC,KAO1BC,EAP0B,KAU5Cx5B,qBAAU,WACRoF,QAAQC,IAAI,mBAAoBnE,GAC5BA,IACFs4B,EAAat4B,EAAKu4B,eAClBr0B,QAAQC,IAAI,qBAAsBnE,EAAKu4B,eACvCr0B,QAAQC,IAAI,SAAUk0B,MAEvB,CAACr4B,IAEJ,IAAMqB,EAAUwG,EAAStK,KAAI,SAACkH,GAAD,MAAW,CACtC1K,GAAI0K,EAAK1K,GACTzC,KAAMmN,EAAKsD,QAAQlH,KAAO,MAAQ4D,EAAKsD,QAAQC,YAmGjD,OACE,kBAAC,KAAD,CACEknB,SA/Ca,SAAC5qB,EAAQk0B,GACxB,IAAM/zB,EAAOoD,EAAShG,MAAK,SAAC4C,GAAD,OAAUA,EAAK1K,KAAOuK,EAAOqb,UACxD,GAAKlb,EAAL,CAIKA,EAAKyyB,UACRzyB,EAAKyyB,QAAU,IAEjB,IAAM9xB,EAAUd,EAAO9E,UACnBqO,GACEvJ,EAAO9E,UACPyF,SAASX,EAAOsyB,cAAe,IAAM,GAEvC,GAEE6B,EAAWT,GAAiB,CAChCra,MAAO,CACLne,UAAW8E,EAAO9E,UAClB4F,WAEFwwB,YAAayC,IAGfn0B,QAAQC,IAAI,WAAYs0B,GAExBh0B,EAAKyyB,QAAQn7B,KAAb,gBAAuBuI,EAAvB,CAA+Bc,aAC/B2H,EAAY,gBACPD,EADM,CAETF,cAAc,gBACTA,EADQ,CAEX/E,gBAGJ6wB,YAAW,kBACTF,EAAKG,MAAM,CACTr1B,YAAagB,EAAOhB,YACpBxC,WAAYwD,EAAOxD,WACnBtB,UAAW8E,EAAO9E,UACdqO,GAA6BzI,GAC7B,aArCN4H,EAAO,8BAA+B,UA6CtC9D,OAAQ,YAA2D,IAAxD0vB,EAAuD,EAAvDA,aAAct0B,EAAyC,EAAzCA,OAAQk0B,EAAiC,EAAjCA,KAAMK,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACzC/zB,EAAwBT,EAAxBS,SAAUvF,EAAc8E,EAAd9E,UACduF,GAAYvF,GACd0E,QAAQC,IAAIY,EAAUvF,GAExB,IAAMu5B,EAAiB,SAACn4B,GACtB43B,EAAKQ,OAAO,SAAUp4B,EAAI7G,KAGtBk/B,EAAsB,SAAC/mB,EAAGtR,GACjBiH,EAAShG,MAAK,SAACyX,GAAD,OAAOA,EAAEvf,KAAO6G,EAAI7G,MAC1Cm9B,QAAQ3H,OAAOrd,EAAG,GACvBnF,EAAY,gBACPD,EADM,CAETF,cAAc,gBACTA,EADQ,CAEX/E,iBAKN,OACE,0BAAMqnB,SAAU0J,GACd,kBAACvvB,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAAC9K,MAAO,CAAE6E,SAAU,IAC5B,kBAACsqB,GAAA,EAAD,CACExjB,OAAO,SACP6E,WAAS,EACTiR,QAAS/Z,EACT6Z,SAAUrI,kBAGd,kBAACxJ,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAC+X,GAAA,EAAD,CACE7e,MAAM,YACN2H,OAAO,cACPwD,UAAU,YACVuV,cAAe,iBAAO,CAAE3iB,KAAM,YAE9B,kBAAC+gB,GAAA,EAAD,CAAaC,WAAW,OAAOxB,SAAUrI,mBAG7C,kBAACxJ,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAACkY,GAAA,EAAD,CAAWrX,OAAO,aAAa4V,SAAUrI,kBAE3C,kBAACxJ,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAACklB,GAAA,EAAD,CACErkB,OAAO,gBACP3H,MAAM,WACNud,SAAUrI,kBAGd,kBAACxJ,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAACwC,GAAA,EAAD,CAAW3B,OAAO,YAAYrE,aAAck3B,KAE9C,kBAAC9uB,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAACgK,GAAA,EAAD,MACG,YAA4B,IAAzB3B,EAAwB,EAAxBA,SACM8pB,GADkB,4BACW9pB,EAA7B8pB,eAAep3B,EAAcsN,EAAdtN,UACvB,GAAIo3B,GAAiBp3B,EACnB,OACE,kBAAC/F,EAAA,EAAD,CAAYxE,QAAQ,SACjB4Y,GACCrO,EACAyF,SAAS2xB,EAAgB,EAAG,UAQ1C,kBAACvtB,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAACR,GAAA,EAAD,CACEvI,KAAK,SACLxG,MAAM,UACND,QAAQ,YACRua,SAAUqpB,GAEV,kBAACxR,GAAA,EAAD,MANF,cASA,kBAACpjB,GAAA,EAAD,CACEvI,KAAK,SACLrC,QAASm/B,EAAKG,MACdnpB,SAAUqpB,GAAcC,GAH1B,WASJ,kBAACrqB,GAAA,EAAD,MACG,YAA4B,IAAzB3B,EAAwB,EAAxBA,SAAwB,4BAC1B,OACE,kBAACirB,GAAD,CACElwB,SAAUA,EACV+vB,aAAc9qB,EAAS6S,OACvBqX,WAAY+B,EACZ9B,gBAAiBgC,YC3OtBC,OAbf,YAAoE,IAA3CpsB,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,YACjC,OADiE,EAAnBosB,gBAE5C,kBAAC/4B,GAAA,EAAD,CAAKkZ,EAAG,GACN,kBAAC8f,GAAD,CAAmBrsB,YAAaA,EAAaD,SAAUA,M,yMCe7D,IAAMpX,GAAYC,MAAW,SAACC,GAAD,MAAY,CACvCwrB,OAAQ,CACNhjB,MAAO,OACPxH,WAAYhB,EAAMG,QAAQ,GAC1Bc,YAAajB,EAAMG,QAAQ,IAE7BsrB,MAAO,CACLxmB,UAAWjF,EAAMG,QAAQ,GACzBurB,aAAc1rB,EAAMG,QAAQ,GAC5B4I,QAAS/I,EAAMG,QAAQ,IAEzBwrB,QAAS,CACP5iB,QAAS/I,EAAMG,QAAQ,EAAG,EAAG,IAE/Bo1B,QAAS,CACPvtB,QAAS,OACTilB,eAAgB,YAElBuI,OAAQ,CACNvwB,UAAWjF,EAAMG,QAAQ,GACzBa,WAAYhB,EAAMG,QAAQ,QAIxBsjC,GAAeh6B,KAAH,MASH,cACb,IAAMlH,EAAWC,cACXH,EAAYC,cACZR,EAAUhC,KACVsF,EAAU8L,eACVkG,EAASC,eALI,EAMGE,aAAYksB,IAA3BC,EANY,sBAOiB7gC,mBAAS,GAP1B,mBAOZ8pB,EAPY,KAOAC,EAPA,OAQqB/pB,oBAAS,GAR9B,mBAQE0gC,GARF,aASKh4B,IAAM1I,UAAS,GATpB,mBASZX,EATY,KASNsJ,EATM,OAea3I,mBALV,CACpBmU,cAAe,KACf2sB,gBAAiB,GACjB9T,WAAY,IAbK,mBAeZ3Y,EAfY,KAeFC,EAfE,KAgBnB5U,EACE+N,GAAe,CACb,CAAExI,IAAK,YAAaC,MAAO,YAC3B,CAAED,IAAI,mBAAqBC,MAAO,iBAItC,IAAM8kB,EAAQ,CACZxqB,EAAU,gCACVA,EAAU,0BACVA,EAAU,oBA2ENuhC,EAAkB,WACtBp4B,GAAQ,IAGJsvB,EAAc,SAAC3uB,GAAD,OAAY,WAC1BA,GACFX,GAAQ,GACRohB,EAAcD,EAAa,IAE3BnhB,GAAQ,KAGZ,OACE,0BAAMzJ,UAAWD,EAAQ0pB,QACvB,kBAAC/gB,GAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC3d,GAAA,EAAD,CAAS6e,WAAYA,EAAY5qB,UAAWD,EAAQ6pB,SACjDkB,EAAMllB,KAAI,SAACI,GAAD,OACT,kBAACiG,GAAA,EAAD,CAAMnG,IAAKE,GACT,kBAACkG,GAAA,EAAD,KAAYlG,QAIlB,kBAACizB,GAAA,EAAD,CACE94B,KAAMA,EACNqC,QAASu2B,EACTG,kBAAgB,qBAChB4I,mBAAiB,4BAEjB,kBAAC3I,GAAA,EAAD,CAAa/2B,GAAG,sBAAsB,aACtC,kBAACg3B,GAAA,EAAD,KACE,kBAAC2I,GAAA,EAAD,CAAmB3/B,GAAG,4BAAtB,iDAIF,kBAACm3B,GAAA,EAAD,KACE,kBAACjtB,GAAA,EAAD,CAAQ5K,QAASq3B,GAAY,GAAQx7B,MAAM,WAA3C,MAGA,kBAAC+O,GAAA,EAAD,CAAQ5K,QAASq3B,GAAY,GAAOx7B,MAAM,UAAUykC,WAAS,GAA7D,SAKJ,kBAAC,IAAMt3B,SAAP,KACkB,IAAfkgB,GACC,kBAAC,GAAD,CACEzV,SAAUA,EACVC,YAAaA,IAGD,IAAfwV,GACC,kBAAC,GAAD,CACE4W,gBAAiBA,EACjBrsB,SAAUA,EACVC,YAAaA,IAGD,IAAfwV,GAAoB,kBAAC,GAAD,CAAQzV,SAAUA,IAEvC,yBAAKnV,UAAWD,EAAQyzB,SACrB5I,EAAa,GACZ,kBAACte,GAAA,EAAD,CAAQ5K,QAjED,WACjBmpB,EAAcD,EAAa,IAgEYrtB,MAAM,WAChC+C,EAAU,gBAGdsqB,EAAa,GACZ,kBAACte,GAAA,EAAD,CAAQ5K,QA9ED,WACE,IAAfkpB,GAlBgB,WAAO,IAAD,EAClB1a,EAAaiF,EAASF,cAAtB/E,SADkB,eAETA,GAFS,IAE1B,2BAA2B,CAAC,IAAnBpD,EAAkB,QAQzB,IAPyBQ,SAASR,EAAKM,SAAU,KAAO,MACvCN,EAAKyyB,QAClBzyB,EAAKyyB,QAAQ3yB,QAAO,SAAC6yB,EAAK3H,GAExB,OADA2H,GAAOnyB,SAASwqB,EAAEmH,cAAe,MAEhC,GACH,GAEF,OAAO,GAXe,8BAc1B,OAAO,EAIkBgD,GAGvBpX,EAAcD,EAAa,GAF3BiX,KA4EqCtkC,MAAM,WAChC+C,EAAU,gBAGC,IAAfsqB,GACC,kBAACte,GAAA,EAAD,CAAQ5K,QA/ID,WAAO,IAChBuT,EAA8BE,EAA9BF,cAAe6Y,EAAe3Y,EAAf2Y,WAEvB6T,EAAY,CACV35B,UAAW,CACTK,KAAM,CACJa,KAAK,MAAD,OAAQ+L,EAAc/L,MAC1B+M,gBAAiBhB,EAAc7S,GAC/B8/B,WAAYj0B,OAAQ0L,cACpBmU,aACA5d,SAAU,CACRvR,OAAQsW,EAAc/E,SAAStD,QAAO,SAACmxB,EAAKpc,GAAO,IACzC4d,EAAY5d,EAAZ4d,QACR,IAAKA,GAA8B,IAAnBA,EAAQv7B,OACtB,OAAO+5B,EAET,IAAMoE,EAAmB70B,SAASqU,EAAEvU,SAAU,KAAO,EAC/CmP,EAASgjB,EAAQ35B,KAAI,SAACkyB,GAAD,MAAQ,CACjC/iB,UAAW4M,EAAEvR,QAAQhO,GACrBuJ,YAAamsB,EAAEnsB,YACf9D,UAAWiwB,EAAEjwB,UACb4F,QAASqqB,EAAErqB,QACXtE,WAA6B,MAAjB2uB,EAAE3uB,WAAqB,KAAO2uB,EAAE3uB,WAC5Cg5B,mBACA/0B,SAAUE,SAASwqB,EAAEmH,cAAe,KAAO,EAC3C/xB,MAAOyU,EAAEzU,MACT4gB,WAAYqU,EAAmBxgB,EAAEzU,UAGnC,MAAM,GAAN,oBAAW6wB,GAAX,aAAmBxhB,MAClB,SAKRnG,MAAK,WACJ/S,EAAQe,KAAK,gBAEdiS,OAAM,SAACT,GACNP,EAAO,UAAD,OAAWO,EAAMU,SAAW,eAwGC/Y,MAAM,WAChC+C,EAAU,wBC7Nd8hC,GAAe,SAAAhlC,GAC1B,IAAMoD,EAAWC,cAEjB,OACE,kBAACiR,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACb,kBAAChW,EAAA,EAAD,CAAYxE,QAAQ,MAApB,oBAGA,kBAAC0mB,GAAA,EAAD,eAAgB1kB,MAAM,yBAAyBkwB,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,IAC7E,SAAA6mB,GACC,IAAMje,EAAQie,EAAgBrW,OAASqW,EAAgBrW,OAAO1E,KAAO,GAC/D9G,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAEhE,OADA5B,EAAS+N,GAAe,CAAC,CAAExI,IAAK,YAAaC,MAAO,YAAc,CAAED,IAAI,aAAD,OAAe3D,EAAf,SAA0B4D,MAAM,YAAD,OAAcA,OAElH,kBAACke,GAAA,EAAaD,EACZ,kBAACE,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,OAAO3H,MAAM,iBAC/B,kBAAC0e,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,oBAO9B,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAAC6E,WAAS,EAACmG,GAAI,EAAGF,UAAU,SAASxZ,QAAS,GACtD,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,eACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC7V,GAAA,EAAD,CAAaX,OAAO,aAAajE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,YAI/E,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,iBACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAAW/W,OAAO,kBAIxB,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,kBACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACjT,GAAA,EAAD,CAAgBlL,MAAM,iBAAiBmL,UAAU,gBAAgBxD,OAAO,mBAAmByD,KAAK,QAC9F,kBAAC,KAAD,CAAWzD,OAAO,OAAO3H,MAAM,wBAEjC,kBAACkL,GAAA,EAAD,CAAgBlL,MAAM,iBAAiBmL,UAAU,gBAAgBxD,OAAO,mBAAmByD,KAAK,QAC9F,kBAAC9C,GAAA,EAAD,CAAaX,OAAO,aAAajE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,cAMnF,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,EAAC6E,WAAS,EAACmG,GAAI,GAAIF,UAAU,SAASxZ,QAAS,GACvD,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,SACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACoC,GAAA,EAAD,CAAqBvgB,MAAM,QAAQmL,UAAU,eAAexD,OAAO,eACjE,kBAACsD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAgBlL,MAAM,IAAI2H,OAAO,aAAawD,UAAU,WACtD,kBAAC,KAAD,CAAWxD,OAAO,OAAO3H,MAAM,iBAEjC,kBAACkL,GAAA,EAAD,CAAgBlL,MAAM,eAAe2H,OAAO,aAAawD,UAAU,WACjE,kBAAC,GAAD,CAAgBxD,OAAO,UAEzB,kBAAC,KAAD,CAAWA,OAAO,cAClB,kBAAC,KAAD,CAAWA,OAAO,YAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,eAClB,kBAACW,GAAA,EAAD,CAAaX,OAAO,QAAQjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SACpE,kBAAC,KAAD,CAAW3Y,OAAO,aAClB,kBAACW,GAAA,EAAD,CAAaX,OAAO,aAAajE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,iBCxE9E+b,GAAe,SAACjlC,GAC3B,IAAMoD,EAAWC,cAEjB,OADA8L,QAAQC,IAAI,aAAcpP,GAExB,kBAACumB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,YAClB,kBAACgS,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,eAAYlV,MAAM,iBACrD,kBAACgf,GAAA,EAAD,CAAWrX,OAAO,uBAClB,kBAACmX,GAAA,EAAD,CACEnX,OAAO,QACP8V,QAAS,CACP,CAAErhB,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,WAAYzC,KAAM,YACxB,CAAEyC,GAAI,YAAazC,KAAM,gBAG7B,kBAACmX,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAOF,OANA3U,EACE+N,GAAe,CACb,CAAExI,IAAK,YAAaC,MAAO,YAC3B,CAAED,IAAI,aAAD,OAAeoP,EAAS/S,IAAM4D,MAAM,SAAD,OAAWmP,EAASjM,UAGzD,WAQNo5B,GAAe,SAACllC,GAG3B,OAFiBqD,aACjBD,CAAS+N,GAAe,CAAC,CAAExI,IAAK,YAAaC,MAAO,eAElD,kBAAC2J,GAAA,EAAD,iBAAUvS,EAAV,CAAiBk3B,oBAAqB,CAAEC,UAAW,UAAYzX,KAAM,CAAEC,MAAO,YAAaC,MAAO,UAChG,kBAAC/L,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,OAAO3H,MAAM,iBAC/B,kBAAC0e,GAAA,EAAD,CAAW/W,OAAO,eAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAACmW,GAAA,EAAD,S,kECXKye,GAAc,SAACnlC,GAC1B,IAAMoD,EAAWC,cACXH,EAAYC,cACZ8C,EAAU8L,eAMhB,OACE,kBAACuC,GAAA,EAAD,CAAMC,WAAS,EAACvT,QAAS,GACvB,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACb,kBAAChW,EAAA,EAAD,CAAYxE,QAAQ,MAApB,wBAEE,kBAACgP,GAAA,EAAD,CAAQ/O,MAAM,UAAUqN,KAAK,QAAQlJ,QAT9B,WAAO,IACZgO,EAAiBtS,EAAjBsS,SAAUtN,EAAOhF,EAAPgF,GAClBiB,EAAQe,KAAR,UAAgBsL,EAAhB,YAA4BtN,EAA5B,YAQQ,kBAAC,KAAD,MADF,OAES9B,EAAU,iBAGrB,kBAAC0jB,GAAA,EAAD,eACE1kB,MAAM,kBACNkwB,QAAS,kBAAC,IAAM9kB,SAAP,OACLtN,IAEH,SAAC6mB,GACA,IAAMje,EAAQie,EAAgBrW,OAC1BqW,EAAgBrW,OAAO1E,KACvB,GACE9G,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAOhE,OANA5B,EACE+N,GAAe,CACb,CAAExI,IAAK,WAAYC,MAAO,WAC1B,CAAED,IAAI,YAAD,OAAc3D,EAAd,SAAyB4D,MAAM,YAAD,OAAcA,OAInD,kBAACke,GAAA,EAAaD,EACZ,kBAACE,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,OAAO3H,MAAM,gBAC/B,kBAAC,KAAD,CAAW2H,OAAO,WAClB,kBAAC,KAAD,CAAWA,OAAO,YAClB,kBAAC,KAAD,CAAWA,OAAO,aAClB,kBAAC,KAAD,CAAWA,OAAO,qBAClB,kBAAC,KAAD,CAAWA,OAAO,oBAElB,kBAAC,KAAD,CAAWA,OAAO,QAClB,kBAAC,KAAD,CAAWA,OAAO,QAClB,kBAAC,KAAD,CAAWA,OAAO,qBAClB,kBAAC,KAAD,CAAWA,OAAO,kBAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,eAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,gBAClB,kBAAC4Y,GAAA,EAAD,CACEvgB,MAAM,aACNmL,UAAU,kBACVxD,OAAO,iBAEP,kBAAC60B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAW90B,OAAO,oBASlC,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,EAAC6E,WAAS,EAACmG,GAAI,EAAGF,UAAU,SAASxZ,QAAS,GACtD,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,QACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC7V,GAAA,EAAD,CACEX,OAAO,OACP6Y,UAAU,EACV9c,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,YAKhD,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,qBACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC7V,GAAA,EAAD,CACEX,OAAO,kBACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAChY,GAAA,EAAD,CACEX,OAAO,kBACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAChY,GAAA,EAAD,CACEX,OAAO,kBACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAChY,GAAA,EAAD,CACEX,OAAO,kBACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAChY,GAAA,EAAD,CACEX,OAAO,kBACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,YAKhD,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,kBACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC7V,GAAA,EAAD,CACEX,OAAO,eACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAChY,GAAA,EAAD,CACEX,OAAO,eACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAChY,GAAA,EAAD,CACEX,OAAO,eACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAChY,GAAA,EAAD,CACEX,OAAO,eACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,SAE1C,kBAAChY,GAAA,EAAD,CACEX,OAAO,eACPjE,QAAS,CAAE1H,MAAO,WAAYskB,SAAU,aAMlD,kBAAC5U,GAAA,EAAD,CAAM5E,MAAI,EAAC6E,WAAS,EAACmG,GAAI,EAAGF,UAAU,SAASxZ,QAAS,GACtD,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,eACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,WAAW6Y,UAAU,OAI7C,kBAAC9U,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,qBACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACoC,GAAA,EAAD,CACEpV,UAAU,mBACVxD,OAAO,yBAEP,kBAACsD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACElL,MAAM,YACN2H,OAAO,eACPwD,UAAU,aAEV,kBAAC,KAAD,CAAWxD,OAAO,UAEpB,kBAAC,KAAD,CAAWA,OAAO,kBAM5B,kBAAC+D,GAAA,EAAD,CAAM5E,MAAI,GACR,kBAAChL,EAAA,EAAD,CAAYxE,QAAQ,MAApB,uBACA,kBAAC4mB,GAAA,EAAD,eAAMsL,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAAC+mB,GAAA,EAAD,KACE,kBAACoC,GAAA,EAAD,CACEpV,UAAU,oBACVxD,OAAO,0BAEP,kBAACsD,GAAA,EAAD,KACE,kBAACyT,GAAA,EAAD,CAAW/W,OAAO,eAClB,kBAAC,KAAD,CAAWA,OAAO,qBC5L9B6I,GAAW,iBAAM,YAIjB3H,GAAiB,CAAE9I,IAAK,WAAYC,MAAO,WAEpC08B,GAAgB,SAACtlC,GAQ5B,OAPiBqD,aACjBD,CACE+N,GAAe,CACbM,GACA,CAAE9I,IAAK,kBAAmBC,MAAO,iBAInC,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,eAAYlV,MAAM,gBACrD,kBAACsJ,GAAA,EAAD,CAAW3B,OAAO,UAAU4V,SAAUrI,eAAY1I,WAAS,IAC3D,kBAAClD,GAAA,EAAD,CAAW3B,OAAO,WAAW4V,SAAUrI,eAAY1I,WAAS,IAC5D,kBAAClD,GAAA,EAAD,CAAW3B,OAAO,SAAS4V,SAAUrI,eAAY1I,WAAS,IAC1D,kBAAClD,GAAA,EAAD,CAAW3B,OAAO,UAAU4V,SAAUrI,eAAY1I,WAAS,IAC3D,kBAACwf,GAAA,EAAD,CAAarkB,OAAO,UAAU4V,SAAUrI,iBACxC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,aAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,SAAS4V,SAAUrI,iBACrC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,qBAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,oBAClB,kBAACg1B,GAAA,EAAD,CAAYh1B,OAAO,SAASi1B,OAAO,UAAUC,UAAQ,GACnD,kBAACC,GAAA,EAAD,CAAYn1B,OAAO,MAAMrO,MAAM,WAEjC,kBAACgQ,GAAA,EAAD,CAAW3B,OAAO,QAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,MAAM4V,SAAUrI,iBAClC,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,OAAO4V,SAAUrI,iBACrC,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,kBAAkB4V,SAAUrI,iBAChD,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,kBAAkB4V,SAAUrI,iBAChD,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,kBAAkB4V,SAAUrI,iBAChD,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,kBAAkB4V,SAAUrI,iBAChD,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,kBAAkB4V,SAAUrI,iBAChD,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,eAAe4V,SAAUrI,iBAC7C,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,eAAe4V,SAAUrI,iBAC7C,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,eAAe4V,SAAUrI,iBAC7C,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,eAAe4V,SAAUrI,iBAC7C,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,eAAe4V,SAAUrI,iBAC7C,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,mBAAmBrE,aAAc,KACrD,kBAAC0oB,GAAA,EAAD,CAAarkB,OAAO,gBAAgBrE,aAAc,IAClD,kBAAC0b,GAAA,EAAD,CAAWrX,OAAO,eAClB,kBAACqX,GAAA,EAAD,CAAWrX,OAAO,mBAabo1B,GAAc,SAAC3lC,GAC1B,IAAMoD,EAAWC,cACjB,OACE,kBAACkjB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,eAAYlV,MAAM,gBACrD,kBAACsJ,GAAA,EAAD,CAAW3B,OAAO,UAAU4V,SAAUrI,eAAY1I,WAAS,IAC3D,kBAAClD,GAAA,EAAD,CAAW3B,OAAO,WAAW4V,SAAUrI,eAAY1I,WAAS,IAC5D,kBAAClD,GAAA,EAAD,CAAW3B,OAAO,SAAS4V,SAAUrI,eAAY1I,WAAS,IAC1D,kBAAClD,GAAA,EAAD,CAAW3B,OAAO,UAAU4V,SAAUrI,eAAY1I,WAAS,IAC3D,kBAACwf,GAAA,EAAD,CAAarkB,OAAO,UAAU4V,SAAUrI,iBACxC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,aAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,SAAS4V,SAAUrI,iBACrC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,qBAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,oBAClB,kBAACg1B,GAAA,EAAD,CAAYh1B,OAAO,SAASi1B,OAAO,UAAUC,UAAQ,GACnD,kBAACC,GAAA,EAAD,CAAYn1B,OAAO,MAAMrO,MAAM,WAEjC,kBAACgQ,GAAA,EAAD,CAAW3B,OAAO,QAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,QAClB,kBAACqkB,GAAA,EAAD,CAAarkB,OAAO,OAAO4V,SAAUrI,iBACrC,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,kBAAkB4V,SAAUrI,iBAChD,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,kBAAkB4V,SAAUrI,iBAChD,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,kBAAkB4V,SAAUrI,iBAChD,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,kBAAkB4V,SAAUrI,iBAChD,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,kBAAkB4V,SAAUrI,iBAChD,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,qBACpB,kBAACqkB,GAAA,EAAD,CAAarkB,OAAO,kBACpB,kBAACqX,GAAA,EAAD,CAAWrX,OAAO,eAClB,kBAACqX,GAAA,EAAD,CAAWrX,OAAO,gBAClB,kBAACq1B,GAAA,EAAD,CACEh9B,MAAM,WACN2H,OAAO,gBACPwD,UAAU,mBAEV,kBAAC8xB,GAAA,EAAD,CAAkBle,WAAW,YAE/B,kBAACjO,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAUF,OATA3U,EACE+N,GAAe,CACbM,GACA,CACE9I,IAAI,YAAD,OAAcoP,EAAS/S,IAC1B4D,MAAM,SAAD,OAAWmP,EAASjM,UAIxB,WAQNg6B,GAAc,SAAC9lC,GAG1B,OAFiBqD,aACjBD,CAAS+N,GAAe,CAACM,MAEvB,kBAACc,GAAA,EAASvS,EACR,kBAAC6T,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,OAAO3H,MAAM,gBAC/B,kBAAC,GAAD,CAAgB2H,OAAO,SACvB,kBAAC4Y,GAAA,EAAD,CACEvgB,MAAM,aACNmL,UAAU,kBACVxD,OAAO,iBAEP,kBAAC60B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAW90B,OAAO,cAGtB,kBAAC8B,GAAA,EAAD,MACA,kBAACqU,GAAA,EAAD,SC/HFtN,GAAW,iBAAM,aACjB3H,GAAiB,CAAE9I,IAAK,YAAaC,MAAO,YAErCm9B,GAAiB,SAAC/lC,GAQ7B,OAPiBqD,aACjBD,CACE+N,GAAe,CACbM,GACA,CAAE9I,IAAK,mBAAoBC,MAAO,iBAIpC,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,eAAYlV,MAAM,iBACrD,kBAACsJ,GAAA,EAAD,CAAW3B,OAAO,SAAS4V,SAAUrI,iBACrC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,UAAU4V,SAAUrI,iBACtC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,SAAS4V,SAAUrI,iBACrC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,QAAQ4V,SAAUrI,iBACpC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,aAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,mBAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,aAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,YAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,SAAS2W,WAAS,IACpC,kBAACO,GAAA,EAAD,CACE7e,MAAM,QACN2H,OAAO,WACPwD,UAAU,iBAEV,kBAAC2T,GAAA,EAAD,CAAaC,WAAW,OAAOxB,SAAUrI,kBAG3C,kBAAC4J,GAAA,EAAD,CACEnX,OAAO,gBACP4V,SAAUrI,eACVuI,QAAS,CACP,CAAErhB,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,aAGnB,kBAACmlB,GAAA,EAAD,CACEnX,OAAO,gBACP4V,SAAUrI,eACVuI,QAAS,CACP,CAAErhB,GAAI,SAAUzC,KAAM,UACtB,CAAEyC,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,QAASzC,KAAM,eAQpByjC,GAAe,SAAChmC,GAC3B,IAAMoD,EAAWC,cACjB,OACE,kBAACkjB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,eAAYlV,MAAM,iBACrD,kBAACsJ,GAAA,EAAD,CAAW3B,OAAO,SAAS4V,SAAUrI,iBACrC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,UAAU4V,SAAUrI,iBACtC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,WAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,QAAQ4V,SAAUc,iBACpC,kBAAC/U,GAAA,EAAD,CAAW3B,OAAO,aAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,mBAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,aAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,YAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,SAAS2W,WAAS,IACpC,kBAACO,GAAA,EAAD,CACE7e,MAAM,QACN2H,OAAO,WACPwD,UAAU,iBAEV,kBAAC2T,GAAA,EAAD,CAAaC,WAAW,OAAOxB,SAAUrI,kBAE3C,kBAAC4J,GAAA,EAAD,CACEnX,OAAO,gBACP4V,SAAUrI,eACVuI,QAAS,CACP,CAAErhB,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,aAGnB,kBAACmlB,GAAA,EAAD,CACEnX,OAAO,gBACP4V,SAAUrI,eACVuI,QAAS,CACP,CAAErhB,GAAI,SAAUzC,KAAM,UACtB,CAAEyC,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,MAAOzC,KAAM,YAGvB,kBAACmX,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAUF,OATA3U,EACE+N,GAAe,CACbM,GACA,CACE9I,IAAI,aAAD,OAAeoP,EAAS/S,IAC3B4D,MAAM,SAAD,OAAWmP,EAASoT,YAIxB,WA4BZ,IAAM8a,GAAe,SAACjmC,GAC3B,IAAMoD,EAAWC,cACjB,OACE,kBAACujB,GAAA,EAAmB5mB,GACjB,SAAC6mB,GACA1X,QAAQC,IAAI,oBAAqByX,GACjC,IAAMje,EAAQie,EAAgBrW,OAC1BqW,EAAgBrW,OAAO2a,OACvB,GACEnmB,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAOhE,OANA5B,EACE+N,GAAe,CACbM,GACA,CAAE9I,IAAI,aAAD,OAAe3D,EAAf,SAA0B4D,MAAM,YAAD,OAAcA,OAIpD,kBAACke,GAAA,EAAD,iBAAc9mB,EAAW6mB,GACvB,kBAACE,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,SAClB,kBAAC,KAAD,CAAWA,OAAO,WAClB,kBAAC,KAAD,CAAWA,OAAO,YAClB,kBAAC,KAAD,CAAWA,OAAO,kBAClB,kBAAC,KAAD,CAAWA,OAAO,WAClB,kBAAC8W,GAAA,EAAD,CAAY9W,OAAO,UACnB,kBAAC,KAAD,CAAWA,OAAO,aAClB,kBAAC,KAAD,CAAWA,OAAO,mBAClB,kBAAC,KAAD,CAAWA,OAAO,aAClB,kBAAC,KAAD,CAAWA,OAAO,YAClB,kBAAC,KAAD,CAAWA,OAAO,WAClB,kBAACuD,GAAA,EAAD,CACElL,MAAM,QACN2H,OAAO,WACPwD,UAAU,iBAEV,kBAAC,KAAD,CAAWxD,OAAO,UAEpB,kBAAC,KAAD,CAAWA,OAAO,kBAClB,kBAAC4Y,GAAA,EAAD,CACEvgB,MAAM,QACNmL,UAAU,eACVxD,OAAO,YAEP,kBAAC60B,GAAA,EAAD,KACE,kBAACtxB,GAAA,EAAD,CACEvD,OAAO,KACPwD,UAAU,eACVC,KAAM,SAACob,EAAMiD,GAAP,8BAAqCjD,EAAKpqB,GAA1C,WAEN,kBAAC,KAAD,CAAWuL,OAAO,eAKxB,kBAAC4Y,GAAA,EAAD,CACEvgB,MAAM,mBACNmL,UAAU,iBACVxD,OAAO,aACP6N,OAAQ,CAAE8nB,aAAc,UAExB,kBAACryB,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWtD,OAAO,SAClB,kBAAC,KAAD,CAAWA,OAAO,SAClB,kBAAC,KAAD,CAAWA,OAAO,aAClB,kBAAC,KAAD,CAAWA,OAAO,UAClB,kBAAC,KAAD,CAAWA,OAAO,aAClB,kBAAC,KAAD,CAAWA,OAAO,WAGtB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,oBASnB41B,GAAe,SAACnmC,GAG3B,OAFiBqD,aACjBD,CAAS+N,GAAe,CAACM,MAEvB,kBAACc,GAAA,EAAD,iBAAUvS,EAAV,CAAiB0f,KAAM,CAAEC,MAAO,YAAaC,MAAO,UAClD,kBAAC/L,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,SAClB,kBAAC,GAAD,CAAgBA,OAAO,SACvB,kBAACuD,GAAA,EAAD,CACElL,MAAM,QACN2H,OAAO,WACPwD,UAAU,gBACVC,KAAK,QAEL,kBAAC,KAAD,CAAWzD,OAAO,UAEpB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC8B,GAAA,EAAD,MACA,kBAACqU,GAAA,EAAD,S,WCvPFtN,GAAW,iBAAM,SACjB3H,GAAiB,CAAE9I,IAAK,QAASC,MAAO,QAEjCw9B,GAAa,SAACpmC,GACzB,IAAMoD,EAAWC,cADkB,EAEHuO,eAAhBD,GAFmB,EAE3BqhB,OAF2B,EAEnBrhB,aACV+T,EAAQF,KAAK6gB,MAAM1gC,aAAaC,QAAQ,UAQ9C,OANAxC,EACE+N,GAAe,CACbM,GACA,CAAE9I,IAAK,eAAgBC,MAAO,iBAIhC,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,SAClB,kBAAC+1B,GAAA,EAAD,CAAe/1B,OAAO,aACtB,kBAACkX,GAAA,EAAD,CACE7e,MAAM,gBACN2H,OAAO,WACPwD,UAAU,YACVqK,OAAwB,eAAhBzM,EAA+B,GAAK,CAAE3M,GAAI0gB,EAAM1gB,KAExD,kBAAC0iB,GAAA,EAAD,CAAanX,OAAO,UAEtB,kBAACmX,GAAA,EAAD,CACEnX,OAAO,aACP8V,QACkB,eAAhB1U,EACI,CACE,CAAE3M,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,UAAWzC,KAAM,WACvB,CAAEyC,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,YAAazC,KAAM,aACzB,CAAEyC,GAAI,aAAczC,KAAM,eAE5B,CACE,CAAEyC,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,UAAWzC,KAAM,WACvB,CAAEyC,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,YAAazC,KAAM,mBAS9BgkC,GAAW,SAACvmC,GACvB,IAAMoD,EAAWC,cACXqiB,EAAQF,KAAK6gB,MAAM1gC,aAAaC,QAAQ,UAFb,EAGDgM,eAAhBD,GAHiB,EAGzBqhB,OAHyB,EAGjBrhB,aAKhB,OAJAvO,EACE+N,GAAe,CAACM,GAAgB,CAAE9I,IAAK,aAAcC,MAAO,gBAI5D,kBAAC2d,GAAA,EAASvmB,EACS,UAAhB2R,GAA2C,eAAhBA,EAC1B,kBAAC8G,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,SACD,eAAhBoB,EACC,kBAAC20B,GAAA,EAAD,CAAe/1B,OAAO,aACpB,KACJ,kBAACkX,GAAA,EAAD,CACE7e,MAAM,gBACN2H,OAAO,WACPwD,UAAU,YACVqK,OAAwB,eAAhBzM,EAA+B,GAAK,CAAE3M,GAAI0gB,EAAM1gB,KAExD,kBAAC0iB,GAAA,EAAD,CAAanX,OAAO,UAGtB,kBAACmX,GAAA,EAAD,CACEnX,OAAO,aACP8V,QACkB,eAAhB1U,EACI,CACE,CAAE3M,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,UAAWzC,KAAM,WACvB,CAAEyC,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,YAAazC,KAAM,aACzB,CAAEyC,GAAI,aAAczC,KAAM,eAE5B,CACE,CAAEyC,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,UAAWzC,KAAM,WACvB,CAAEyC,GAAI,QAASzC,KAAM,SACrB,CAAEyC,GAAI,YAAazC,KAAM,iBAMrC,+CAMKikC,GAAW,SAACxmC,GACvB,IAAMoD,EAAWC,cADgB,EAEDuO,eAAhBD,GAFiB,EAEzBqhB,OAFyB,EAEjBrhB,aAEhB,OACE,kBAACiV,GAAA,EAAmB5mB,GACjB,SAAC6mB,GACA,IAAM7hB,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAOhE,OANA5B,EACE+N,GAAe,CACbM,GACA,CAAE9I,IAAI,SAAD,OAAW3D,EAAX,SAAsB4D,MAAM,cAInC,kBAACke,GAAA,EAAD,iBACM9mB,EACA6mB,EAFN,CAGEnU,QAAyB,eAAhBf,GAAgD,UAAhBA,IAEzC,kBAACoV,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,SAClB,kBAAC,KAAD,CAAWA,OAAO,eACD,eAAhBoB,EACC,kBAAC,KAAD,CAAWpB,OAAO,aAChB,KACJ,kBAACuD,GAAA,EAAD,CACElL,MAAM,gBACN2H,OAAO,WACPwD,UAAU,YACVC,KAAK,QAEL,kBAAC,KAAD,CAAWzD,OAAO,gBAUrBk2B,GAAW,SAACzmC,GACvB,IAAMoD,EAAWC,cADgB,EAEDuO,eAAhBD,GAFiB,EAEzBqhB,OAFyB,EAEjBrhB,aACV+T,EAAQF,KAAK6gB,MAAM1gC,aAAaC,QAAQ,UAK9C,OAJAuJ,QAAQC,IAAI,QAASsW,GACrBvW,QAAQC,IAAI,cAAeuC,GAC3BvO,EAAS+N,GAAe,CAACM,MAGvB,kBAACc,GAAA,EAAD,iBACMvS,EADN,CAEEyS,UAA2B,UAAhBd,GAA2C,eAAhBA,EACtC+N,KAAM,CAAEC,MAAO,YAAaC,MAAO,QACnCsX,oBACkB,eAAhBvlB,EACI,GACA,CACE+0B,eAAgB,aAChBhhB,MAAO,CAAE1gB,GAAI0gB,EAAM1gB,OAI3B,kBAAC6O,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,SAClB,kBAACuD,GAAA,EAAD,CACElL,MAAM,gBACN2H,OAAO,WACPwD,UAAU,YACVC,KAAK,QAEL,kBAACqxB,GAAA,EAAD,CAAW90B,OAAO,UAGpB,kBAAC,KAAD,CAAWA,OAAO,eACD,UAAhBoB,GAA2C,eAAhBA,EAC1B,kBAACU,GAAA,EAAD,MACE,KACa,eAAhBV,EAA+B,kBAAC+U,GAAA,EAAD,MAAmB,QC1KrDtN,GAAW,iBAAM,cACjB3H,GAAiB,CAAE9I,IAAK,aAAcC,MAAO,aAEtC+9B,GAAkB,SAAC3mC,GAQ9B,OAPiBqD,aACjBD,CACE+N,GAAe,CACbM,GACA,CAAE9I,IAAK,oBAAqBC,MAAO,iBAIrC,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,YAMbq2B,GAAgB,SAAC5mC,GAC5B,IAAMoD,EAAWC,cADqB,EAENuO,eAFM,EAE9BohB,OAF8B,EAEtBrhB,YAQhB,OAPAvO,EACE+N,GAAe,CACbM,GACA,CAAE9I,IAAK,kBAAmBC,MAAO,qBAKnC,kBAAC2d,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,YAMbs2B,GAAgB,SAAC7mC,GAC5B,IAAMoD,EAAWC,cADqB,EAENuO,eAAhBD,GAFsB,EAE9BqhB,OAF8B,EAEtBrhB,aAEhB,OACE,kBAACiV,GAAA,EAAmB5mB,GACjB,SAAC6mB,GACA,IAAM7hB,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAOhE,OANA5B,EACE+N,GAAe,CACbM,GACA,CAAE9I,IAAI,cAAD,OAAgB3D,EAAhB,SAA2B4D,MAAM,cAIxC,kBAACke,GAAA,EAAD,iBACM9mB,EACA6mB,EAFN,CAGEnU,QAAyB,UAAhBf,GAA2C,eAAhBA,IAEpC,kBAACoV,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,eASnBu2B,GAAgB,SAAC9mC,GAC5B,IAAMoD,EAAWC,cADqB,EAENuO,eAAhBD,GAFsB,EAE9BqhB,OAF8B,EAEtBrhB,aACV+T,EAAQF,KAAK6gB,MAAM1gC,aAAaC,QAAQ,UAK9C,OAJAuJ,QAAQC,IAAI,QAASsW,EAAM1gB,IAC3BmK,QAAQC,IAAI,cAAeuC,GAC3BvO,EAAS+N,GAAe,CAACM,MAGvB,kBAACc,GAAA,EAAD,iBACMvS,EADN,CAEEyS,UAA2B,eAAhBd,EACX+N,KAAM,CAAEC,MAAO,OAAQC,MAAO,QAC9BsX,oBACkB,eAAhBvlB,EAA+B,KAAO,CAAE3M,GAAI0gB,EAAM1gB,MAGpD,kBAAC6O,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,SACD,UAAhBoB,GAA2C,eAAhBA,EAC1B,kBAACU,GAAA,EAAD,MACE,KACa,eAAhBV,EAA+B,kBAAC+U,GAAA,EAAD,MAAmB,QCxGrDtN,GAAW,iBAAM,kBACjB3H,GAAiB,CAAE9I,IAAK,iBAAkBC,MAAO,iBAE1Cm+B,GAAsB,SAAA/mC,GAMjC,OALiBqD,aACjBD,CAAS+N,GAAe,CACtBM,GACA,CAAE9I,IAAK,wBAAyBC,MAAO,iBAGvC,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,oBAM9BkpB,GAAoB,SAAAhnC,GAC/B,IAAMoD,EAAWC,cACjB,OACE,kBAACkjB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,OAAO4V,SAAUrI,iBACnC,kBAACpE,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAEF,OADA3U,EAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAI,kBAAD,OAAoBoP,EAAS/S,IAAM4D,MAAM,SAAD,OAAWmP,EAASxV,UACnG,WAQN0kC,GAAoB,SAAAjnC,GAC/B,IAAMoD,EAAWC,cACjB,OACE,kBAACujB,GAAA,EAAmB5mB,GACjB,SAAA6mB,GACC,IAAMje,EAAQie,EAAgBrW,OAASqW,EAAgBrW,OAAOjO,KAAO,GAC/DyC,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAEhE,OADA5B,EAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAI,kBAAD,OAAoB3D,EAApB,SAA+B4D,MAAM,YAAD,OAAcA,OAE9F,kBAACke,GAAA,EAAD,iBAAc9mB,EAAW6mB,GACvB,kBAACE,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,eASnB22B,GAAoB,SAAAlnC,GAG/B,OAFiBqD,aACjBD,CAAS+N,GAAe,CAACM,MAEvB,kBAACc,GAAA,EAASvS,EACR,kBAAC6T,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,SAClB,kBAAC8B,GAAA,EAAD,MACA,kBAACqU,GAAA,EAAD,S,4LCxDR,IAAMtN,GAAW,iBAAM,iBACjB3H,GAAiB,CAAE9I,IAAK,gBAAiBC,MAAO,gBAChDu+B,GAAiB,SAAC7X,GAAD,gBAAiBA,EAASxjB,KAA1B,YAAkCwjB,EAASrc,UAE5Duf,GAAeloB,KAAH,MAOL88B,GAAqB,SAACpnC,GAAW,IAAD,EACP2K,aAAS6nB,GAAc,IAAhCvnB,GADgB,EACnCD,QADmC,EAChBC,MAI3B,OAHAkE,QAAQC,IAAI,OAAQnE,GAAQA,GACX5H,aACjBD,CAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAK,uBAAwBC,MAAO,iBAE7E,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAACqO,GAAA,EAAD,CAAgB7e,MAAM,WAAW2H,OAAO,cAAcwD,UAAU,WAAWyL,QAASvU,GAAQA,EAAK0nB,UAAU/rB,QACzG,kBAAC8gB,GAAA,EAAD,CAAaC,WAAYwf,GAAgBhhB,SAAUrI,kBAErD,kBAAC5L,GAAA,EAAD,CAAWtJ,MAAM,WAAW2H,OAAO,OAAO4V,SAAUrI,iBACpD,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,UAAU4V,SAAUrI,iBACtC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,WAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,UAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,iBAAiB4V,SAAUrI,iBAC7C,kBAACupB,GAAA,EAAD,CACE92B,OAAO,cACP8V,QAAS,CACP,CAAErhB,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,WACf,CAAEyC,GAAI,EAAGzC,KAAM,aACf,CAAEyC,GAAI,EAAGzC,KAAM,YACf,CAAEyC,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,kBAQd+kC,GAAmB,SAACtnC,GAC/B,IAAMoD,EAAWC,cACjB,OACE,kBAACkjB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,YAClB,kBAACgS,GAAA,EAAD,CAAW3B,OAAO,YAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,WAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,UAClB,kBAAC2B,GAAA,EAAD,CAAW3B,OAAO,oBAClB,kBAAC82B,GAAA,EAAD,CACE92B,OAAO,cACP8V,QAAS,CACP,CAAErhB,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,WACf,CAAEyC,GAAI,EAAGzC,KAAM,aACf,CAAEyC,GAAI,EAAGzC,KAAM,YACf,CAAEyC,GAAI,EAAGzC,KAAM,UACf,CAAEyC,GAAI,EAAGzC,KAAM,eAGnB,kBAACmX,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAEF,OADA3U,EAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAI,iBAAD,OAAmBoP,EAAS/S,IAAM4D,MAAM,SAAD,OAAWmP,EAASxV,UAClG,WA6BZ,IAAMglC,GAAmB,SAACvnC,GAC/B,IAAMoD,EAAWC,cACjB,OACE,kBAACujB,GAAA,EAAmB5mB,GACjB,SAAC6mB,GACA,IAAM7hB,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAEhE,OADA5B,EAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAI,iBAAD,OAAmB3D,EAAnB,SAA8B4D,MAAM,cAEhF,kBAACke,GAAA,EAAD,iBAAc9mB,EAAW6mB,GACvB,kBAACE,GAAA,EAAD,KACE,kBAACjT,GAAA,EAAD,CAAgBlL,MAAM,WAAW2H,OAAO,cAAcwD,UAAU,WAAWC,KAAM,SAACsb,EAAU+C,GAAX,0BAAqC/C,EAASA,SAAStqB,GAAvD,WAC/E,kBAAC,GAAD,CAAgBuL,OAAO,UAEzB,kBAAC,KAAD,CAAW3H,MAAM,WAAW2H,OAAO,SACnC,kBAAC,KAAD,CAAWA,OAAO,YAClB,kBAAC,KAAD,CAAWA,OAAO,WAClB,kBAAC,KAAD,CAAWA,OAAO,UAClB,kBAAC,KAAD,CAAWA,OAAO,mBAClB,kBAAC2D,GAAA,EAAD,CAAetL,MAAM,eAAe2H,OAAO,cAAc4D,OAAQ,SAACib,GAAD,OAAUA,EAAKsG,YAAYltB,KAAI,SAACwtB,EAAKvgB,GAAN,gBAvC9G,SAAoB+xB,GAClB,OAAQA,GACN,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,WACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,YAwBoHC,CAAWzR,IAA9B,OAAqCvgB,IAAU2Z,EAAKsG,YAAY9uB,OAAS,EAAI,IAAM,iBASpL8gC,GAAmB,SAAC1nC,GAG/B,OAFiBqD,aACjBD,CAAS+N,GAAe,CAACM,MAEvB,kBAACc,GAAA,EAAD,iBAAUvS,EAAV,CAAiBkC,MAAM,kBACrB,kBAAC2R,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAW7d,MAAM,WAAW2H,OAAO,SACnC,kBAAC,KAAD,CAAWA,OAAO,YAClB,kBAAC,KAAD,CAAWA,OAAO,mBAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC+W,GAAA,EAAD,CAAW/W,OAAO,cAClB,kBAAC8B,GAAA,EAAD,MACA,kBAACqU,GAAA,EAAD,SC/IFtN,GAAW,iBAAM,oBACjB3H,GAAiB,CAAE9I,IAAK,mBAAoBC,MAAO,oBAE5C++B,GAAwB,SAAA3nC,GAMnC,OALiBqD,aACjBD,CAAS+N,GAAe,CACtBM,GACA,CAAE9I,IAAK,0BAA2BC,MAAO,iBAGzC,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,SAAS4V,SAAUrI,iBACrC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,UAAU4V,SAAUrI,iBACtC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,SAAS2W,WAAS,OAM/B0gB,GAAsB,SAAA5nC,GACjC,IAAMoD,EAAWC,cACjB,OACE,kBAACkjB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAAClH,GAAA,EAAD,CAAW3B,OAAO,SAAS4V,SAAUrI,iBACrC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,UAAU4V,SAAUrI,iBACtC,kBAAC5L,GAAA,EAAD,CAAW3B,OAAO,SAAS2W,WAAS,IACpC,kBAACxN,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAEF,OADA3U,EAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAI,oBAAD,OAAsBoP,EAAS/S,IAAM4D,MAAM,SAAD,OAAWmP,EAASoT,YACrG,WAQN0c,GAAsB,SAAA7nC,GACjC,IAAMoD,EAAWC,cACjB,OACE,kBAACujB,GAAA,EAAmB5mB,GACjB,SAAA6mB,GACC,IAAMje,EAAQie,EAAgBrW,OAASqW,EAAgBrW,OAAO2a,OAAS,GACjEnmB,EAAK6hB,EAAgBrW,OAASqW,EAAgBrW,OAAOxL,GAAK,GAEhE,OADA5B,EAAS+N,GAAe,CAACM,GAAgB,CAAE9I,IAAI,kBAAD,OAAoB3D,EAApB,SAA+B4D,MAAM,YAAD,OAAcA,OAE9F,kBAACke,GAAA,EAAD,iBAAc9mB,EAAW6mB,GACvB,kBAACE,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWxW,OAAO,WAClB,kBAAC,KAAD,CAAWA,OAAO,kBASnBu3B,GAAsB,SAAA9nC,GAGjC,OAFiBqD,aACjBD,CAAS+N,GAAe,CAACM,MAEvB,kBAACc,GAAA,EAASvS,EACR,kBAAC6T,GAAA,EAAD,CAAU4S,SAAS,QACjB,kBAAC,KAAD,CAAWlW,OAAO,WAClB,kBAAC,KAAD,CAAWA,OAAO,YAClB,kBAAC8B,GAAA,EAAD,MACA,kBAACqU,GAAA,EAAD,S,yCC5FO,IACbqhB,aAAc,wCACdC,KAAM,CACJt4B,KAAM,CACJu4B,KAAM,YACNC,UAAW,YACXC,KAAM,OACNC,SAAU,WACVC,QAAS,UACTzI,SAAU,WACV/nB,cAAe,iBACfywB,SAAU,WACVhX,aAAc,gBACdxmB,UAAW,YACXy9B,UAAW,YACX/c,WAAY,cACZD,QAAS,UACT+D,SAAU,WACVkZ,cAAe,iBACfrT,aAAc,gBACdsT,KAAM,OACNC,UAAW,YACX11B,QAAS,UACT21B,gBAAiB,mBACjBC,cAAe,iBACfC,eAAgB,kBAChBC,QAAS,UACTC,UAAW,YACXC,OAAQ,SACRC,YAAa,cACbC,UAAW,YACXC,SAAU,WACVC,QAAS,UACTC,WAAY,cACZC,cAAe,iBACfC,aAAc,gBACdC,kBAAmB,6BAGvB1/B,UAAW,CACT81B,SAAU,WACV/nB,cAAe,iBACfywB,SAAU,WACVmB,SAAU,WACV3+B,UAAW,YACXy9B,UAAW,YACX/c,WAAY,cACZD,QAAS,UACT+D,SAAU,WACVkZ,cAAe,iBACfx1B,QAAS,UACT21B,gBAAiB,mBACjBC,cAAe,iBACfC,eAAgB,mBAElB71B,QAAS,CACPlH,KAAM,cACNkH,QAAS,UACT8E,KAAM,OACNhI,MAAO,QACPE,SAAU,WACVjE,WAAY,cACZnD,MAAO,QACPrG,KAAM,OACNuI,UAAW,YACX4+B,eAAgB,mBAChBnO,iBAAkB,kBAClBoO,iBAAkB,uBAEpB/J,SAAU,CACRA,SAAU,WACVsI,UAAW,kBAEbrwB,cAAe,CACb+xB,eAAgB,kBAChB/xB,cAAe,iBACf/L,KAAM,qBACN+9B,oBAAqB,wBACrBC,kBAAmB,sBACnB5nC,MAAO,iBACP6nC,OAAQ,SACRC,gBAAiB,mBACjBh8B,UAAW,YACXi8B,UAAW,aACXn3B,SAAU,WACVmY,YAAa,eACbif,YAAa,eACbtM,mBAAoB,yBACpBgC,SAAU,WACVz5B,MAAO,SACPgkC,OAAQ,SACRC,qBAAsB,yBACtB1Z,WAAY,eAEdlF,WAAY,CACVoe,eAAgB,kBAChBpe,WAAY,cACZ1f,KAAM,kBACNopB,cAAe,iBACfmV,iBAAkB,qBAClBC,eAAgB,mBAChBpoC,MAAO,cACP6nC,OAAQ,SACRC,gBAAiB,mBACjBh8B,UAAW,YACXi8B,UAAW,aACXn3B,SAAU,WACVmY,YAAa,eACbif,YAAa,eACbtM,mBAAoB,gBACpBgC,SAAU,WACVz5B,MAAO,SACPgkC,OAAQ,SACRI,kBAAmB,sBACnBjb,SAAU,WACVoB,WAAY,eAEdyY,SAAU,CACRF,YAAa,cACbuB,YAAa,eACblC,SAAU,WACVmC,iBAAkB,oBAClB3/B,UAAW,YACX4/B,eAAgB,sBAChBC,UAAW,wBACX73B,SAAU,WACVo2B,UAAW,YACX0B,eAAgB,kBAChBngC,UAAW,aACX4F,QAAS,WACTw6B,oBAAqB,wBACrBC,cAAe,iBACfX,OAAQ,SACRY,gBAAiB,mBACjBjlB,OAAQ,SACRklB,gBAAiB,gBACjBC,UAAW,2BACXC,eAAgB,kBAElB5C,SAAU,CACR0B,gBAAiB,mBACjBh8B,UAAW,aAEbud,QAAS,CACP4f,UAAW,aACXn9B,UAAW,mBACXo9B,iBAAkB,qBAClBC,gBAAiB,mBACjBlB,OAAQ,SACR5Y,aAAc,gBACdprB,MAAO,SACP2F,KAAM,cACN4kB,WAAY,cACZwE,cAAe,iBACf1J,WAAY,cACZD,QAAS,UACT+f,eAAgB,kBAChBhc,SAAU,YAEZiZ,UAAW,CACTA,UAAW,YACXe,cAAe,iBACfC,aAAc,gBACdr2B,MAAO,QACPpI,UAAW,YACXygC,MAAO,QACPC,YAAa,eACb77B,MAAO,QACP87B,gBAAiB,oBACjBC,SAAU,YACVC,YAAa,iBAEflC,SAAU,CACR0B,UAAW,aACXn9B,UAAW,oBAEbsjB,aAAc,CACZsa,cAAe,iBACf57B,SAAU,WACV86B,cAAe,iBACfe,aAAc,kBACdC,WAAY,cACZC,aAAc,gBACdj5B,SAAU,WACVq3B,OAAQ,SACR6B,QAAS,WAEXnD,eAAgB,CACdsC,UAAW,aACXn9B,UAAW,mBACX49B,cAAe,iBACf57B,SAAU,WACV86B,cAAe,iBACfgB,WAAY,cACZ3B,OAAQ,SACR6B,QAAS,WAEX1c,SAAU,CACRA,SAAU,WACV2c,aAAc,gBACdC,OAAQ,SACRC,IAAK,OACLC,gBAAiB,mBACjBC,eAAgB,mBAElBC,SAAU,YACVprB,UAAW,CACT/Z,cAAe,CACbgY,OAAQ,CACNrM,SAAU,cAIhBy5B,OAAQ,CACNC,OAAQ,UACRjrC,OAAQ,UACRkrC,KAAM,OACNC,SAAU,WACVC,IAAK,MACLC,KAAM,OACNC,MAAO,QACP7N,KAAM,OACN8N,QAAS,UACTC,UAAW,YACXC,QAAS,UACTlnB,OAAQ,SACRsL,KAAM,OACN6b,OAAQ,SACRC,OAAQ,SACRC,KAAM,OACNxoC,GAAI,KACJoV,SAAU,WACVwf,OAAQ,SACRnb,OAAQ,SACRuT,QAAS,WACTyb,KAAM,OACNC,KAAM,OACNC,YAAa,cACbC,QAAS,UACTC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,QAAS,UACTC,SAAU,WACVC,OAAQ,SACRC,UAAW,YACXC,KAAM,OACNC,MAAO,QACPC,SAAU,WACVC,OAAQ,UAEVC,aAAc,mBCtPHC,GAAeC,cAAqB,SAAAC,GAC/C,MAAe,OAAXA,EAEK,gBAAKC,KAAZ,GAAgCC,IAEnB,UAAXF,EACK,+BAA0Bt1B,MAAK,SAAAy1B,GAAQ,uBAAUC,KAAV,GAAyCD,EAASvlC,iBADlG,IAGC,MCQGqrB,GAAiB,SAACv0B,GAAW,IAAD,EACf0sB,aAAU,qBAApBnrB,EADyB,oBAE1B0E,EAAU8L,eAEVqH,EAAW,WACf,OAAOnT,EAAQsU,IAAI,IAGftC,EAASC,eAET2U,EAAYC,eACZ/lB,EAAcimB,uBAAY,WAC9B,GAAKH,EAAU4H,MAAf,CADoC,MAID5H,EAAUtd,OAArCyD,EAJ4B,EAI5BA,QAAYisB,EAJgB,2BAKpC19B,EACE,CACE6P,QAAS,CAAEnG,KAAK,gBAAMg0B,EAAP,CAAmBtnB,UAAW3E,EAAQhO,OAEvD,CACEkoB,UAAW,YAAyB,EAAtBjiB,KACZgN,EAAO,0BAA2B,OAAQ,CACxCmV,YAAa,IAEfhU,UAIL,CAACyT,EAAU4H,MAAO5H,EAAUtd,OAAQhO,EAAQ0W,EAAQmB,IAEvD,OAAO,kBAACkU,GAAA,EAAD,iBAAgBttB,EAAhB,CAAuButB,yBAA0BxmB,MAGpD4nC,GAAiC,SAAC3uC,GAAD,OACrC,kBAAC,KAAYA,EACX,kBAAC,GAAD,CAAgB4I,MAAM,cAAc+qB,eAAe,EAAOzzB,QAAQ,WAI/D,SAAS0uC,GAAwB5uC,GAAQ,IAAD,EACC0D,qBADD,mBACtC4vB,EADsC,KACrBC,EADqB,KAE5BlwB,aACjBD,CACEiO,GAAe,CACb1I,IAAK,4BACLC,MAAO,iCAIX,IASMgrB,EAAiB,SAACC,GAAD,gBAClBA,EAAOrjB,OAAO1E,KADI,YACI+nB,EAAOrjB,OAAOyC,UAiBzC,OACE,kBAACiT,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CACE3X,QAAS,kBAAC,GAAD,MACTZ,QAAQ,YAER,kBAACunB,GAAA,EAAD,CACE7e,MAAM,iBACN2H,OAAO,mBACPwD,UAAU,iBAEV,kBAAC2T,GAAA,EAAD,CAAajN,UAAQ,EAACkN,WAAW,OAAO/e,MAAM,wBAEhD,kBAAC6e,GAAA,EAAD,CACE6B,cAzCc,SAACC,GAAD,MAAiB,CACrCC,cAAeD,IAyCT3gB,MAAM,UACN2H,OAAO,aACPwD,UAAU,WAEV,kBAACggB,GAAA,EAAD,CACEpM,WAAY,kBAACiM,EAAD,MACZhrB,MAAM,qBACNorB,UA7CQ,SAACxjB,GAAD,OAAY,WAE5B,OADA+iB,EAAmB/iB,GACb,GAAN,OAAUA,EAAO1E,KAAjB,YAAyB0E,EAAOyC,WA4CxBghB,gBAAiB,SAACC,EAAaC,GAAd,OAA6B,GAC9C7nB,QAAS,CAAE1H,MAAO,CAAEyE,MAAO,SAG9BiqB,GAxCH,kBAAC5Z,GAAA,EAAD,MACG,YAA4B,IAAzB3B,EAAwB,EAAxBA,SACF,OAD0B,4BAExB,kBAACzD,GAAA,EAAD,CAAMC,WAAS,EAACiG,UAAU,SAAS5V,MAAO,CAAEyE,MAAO,MACjD,kBAACurB,GAAA,EAAD,CAAarkB,OAAO,WAAWs+B,cAAe,IAC9C,kBAACja,GAAA,EAAD,CAAarkB,OAAO,QAAQmiB,aAAc3a,EAASjI,cAyC1D,IAAMg/B,GAAwB,SAAC9uC,GACpC,IAAMoD,EAAWC,cACX4C,EAAU8L,eAKhB,OACE,kBAACwU,GAAA,EAAD,eAAM6L,QAAS,kBAAC,IAAM9kB,SAAP,OAAwBtN,GACrC,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SALlB,WACf,OAAOnT,EAAQsU,IAAI,KAKf,kBAACkN,GAAA,EAAD,CACE7e,MAAM,iBACN2H,OAAO,mBACPwD,UAAU,iBAEV,kBAAC2T,GAAA,EAAD,CAAajN,UAAQ,EAACkN,WAAW,OAAO/e,MAAM,wBAEhD,kBAAC6e,GAAA,EAAD,CAAgB7e,MAAM,UAAU2H,OAAO,aAAawD,UAAU,WAC5D,kBAAC2T,GAAA,EAAD,CAAajN,UAAQ,EAACkN,WAAW,OAAO/e,MAAM,wBAGhD,kBAACgsB,GAAA,EAAD,CAAarkB,OAAO,WAAWmiB,aAAa,aAE5C,kBAACkC,GAAA,EAAD,CAAarkB,OAAO,QAAQmiB,aAAa,SACzC,kBAAChZ,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAOF,OANA3U,EACEiO,GAAe,CACb1I,IAAI,sBAAD,OAAwBoP,EAAS/S,IACpC4D,MAAM,UAGH,WChJbwQ,I,gBAAW,iBAAM,cA8BV21B,GAAmB,SAAA/uC,GAG9B,OAFiBqD,aACjBD,CAASiO,GAAe,CAAC1I,IAAI,sBAAD,OAAwB3I,EAAMgF,IAAM4D,MAAO,wBAErE,kBAAC2d,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWkZ,SAAUA,IACvC,kBAACwb,GAAA,EAAD,CAAarkB,OAAO,gB,qRC1B5B,IAAMgkB,GAAiB,SAACv0B,GAAW,IAAD,EACf0sB,aAAU,kBAApBnrB,EADyB,oBAE1B0E,EAAU8L,eAEVqH,EAAW,WACf,OAAOnT,EAAQsU,IAAI,IAGftC,EAASC,eAET2U,EAAYC,eAClB3d,QAAQC,IAAI,YAAayd,GACzB,IAAM9lB,EAAcimB,uBAAY,WAC9B,GAAKH,EAAU4H,MAAf,CADoC,MAID5H,EAAUtd,OAArCyD,EAJ4B,EAI5BA,QAAYisB,EAJgB,2BAK9BjvB,EAAWE,SAAS+uB,EAAWjvB,SAAU,IACzCF,EAAQsL,WAAW6jB,EAAWnvB,cAE7BmvB,EAAW3P,SAClBngB,QAAQC,IAAI,YAAa4D,GACzBzR,EACE,CACE6P,QAAS,CACPnG,KAAK,gBACAg0B,EADD,CAEFtnB,UAAW3E,EAAQhO,GACnBo2B,SAAUpoB,EAAQooB,SAClB1K,WAAY1gB,EAAWF,MAI7B,CACEod,UAAW,YAAyB,EAAtBjiB,KACZgN,EAAO,0BAA2B,OAAQ,CACxCmV,YAAa,IAEfhU,UAIL,CAACyT,EAAU4H,MAAO5H,EAAUtd,OAAQhO,EAAQ0W,EAAQmB,IAEvD,OAAO,kBAACkU,GAAA,EAAD,iBAAgBttB,EAAhB,CAAuButB,yBAA0BxmB,MAGpDioC,GAA8B,SAAChvC,GAAD,OAClC,kBAAC,KAAYA,EACX,kBAAC,GAAD,CAAgB4I,MAAM,cAAc+qB,eAAe,EAAOzzB,QAAQ,WAIhE0zB,GAAiB,SAACC,GAAD,OACrB,8BACGA,EAAOrjB,OAAO1E,KADjB,IACwB+nB,EAAOrjB,OAAOyC,UAIjC,SAASg8B,GAAqBjvC,GACnC,IACMkvC,EADW7b,eACaltB,MAAMqK,OAAO8e,SAASkM,cAC9Ct4B,EAAYC,cAHwB,EAIEO,qBAJF,mBAInC4vB,EAJmC,KAIlB6b,EAJkB,OAKRzrC,mBAASwrC,GALD,mBAKnCzT,EALmC,KAKxBC,EALwB,KAMtCZ,EAAsBxH,EAEtB,CACEA,EAAgByH,gBAChBzH,EAAgB0H,gBAChB1H,EAAgB2H,gBAChB3H,EAAgB4H,gBAChB5H,EAAgB6H,iBANlB,GAQJ,GACE7H,GACAA,EAAgB8H,UAChBN,EAAmBl0B,OAAS,EAE5B,GAAI0sB,EAAgB8H,SAAShf,SAAS,KAAM,CAC1C,IAAMif,EAAU,EAAIjgB,WAAWkY,EAAgB8H,UAAY,IAC3DjsB,QAAQC,IAAIisB,GACZP,EAAqBA,EAAmBtyB,KAAI,SAACsH,GAAD,OAAWA,EAAQurB,KAC/DlsB,QAAQC,IAAI,sBAAuB0rB,QAC9B,GAAIxH,EAAgB8H,SAAShf,SAAS,OAAQ,CACnD,IAAM4U,EAAiB5V,WACrBkY,EAAgB8H,SAAS5lB,QAAQ,MAAO,KAE1CslB,EAAqBA,EAAmBtyB,KACtC,SAACsH,GAAD,OAAWA,EAAQkhB,KAMR3tB,aACjBD,CACEiO,GAAe,CACb1I,IAAK,yBACLC,MAAO,8BAkCX,OACE,kBAACsd,GAAA,EAAWlmB,EACV,kBAACyY,GAAA,EAAD,CAAY3X,QAAS,kBAAC,GAAD,MAAiCZ,QAAQ,YAC5D,kBAACunB,GAAA,EAAD,CACE7e,MAAM,cACN2H,OAAO,gBACPwD,UAAU,cAEV,kBAAC2T,GAAA,EAAD,CAAajN,UAAQ,EAACkN,WAAW,OAAO/e,MAAM,qBAEhD,kBAAC6e,GAAA,EAAD,CACE6B,cA1Cc,SAACC,GAAD,MAAiB,CACrCC,cAAeD,IA0CT3gB,MAAM,UACN2H,OAAO,aACPwD,UAAU,WAEV,kBAACggB,GAAA,EAAD,CACEpM,WAAY,kBAAC,GAAD,MACZ/e,MAAM,kBACNorB,UAzBQ,SAACxjB,GAAD,OAAY,WAG5B,OAFA2+B,EAAiB3+B,GACjBrB,QAAQC,IAAI,UAAWkkB,GAChB9iB,EAAO1E,OAuBNmoB,gBAAiB,SAACC,EAAaC,GAAd,OAA6B,MAIlD,kBAACS,GAAA,EAAD,CAAarkB,OAAO,aAEpB,kBAACmJ,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAOF,OANAA,EAASjI,MAAQgrB,EAAmBW,EAAY,GAChDtsB,QAAQC,IAAI,gBAAiB2I,EAAS/E,SAClCsgB,IACFvb,EAAS/E,QAAQooB,SAAW9H,EAAgB8H,UAI5C,kBAAC9mB,GAAA,EAAD,CAAMkG,UAAU,SAASjG,WAAS,EAACvT,QAAS,GAC1C,kBAACsT,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACZ4Y,GACC,kBAACnmB,GAAA,EAAD,CACEvE,MAAM,QACNjC,KAAK,SACLuF,aAAc4uB,EAAmBW,EAAY,GAC7C/wB,SAAU,SAAC4O,GAAO,IACRzM,EAAUyM,EAAEC,OAAZ1M,MACRkL,EAASjI,MAAQjD,GAEnBA,MAAOkL,EAASjI,SAItB,kBAACwE,GAAA,EAAD,CAAM5E,MAAI,EAACgL,GAAI,GACZ4Y,GA9EM,SAACvb,GACtB,OACE,kBAACmkB,GAAA,EAAD,KACGpB,EAAmBtyB,KAAI,SAACsH,EAAO2F,GAAR,OACtB,kBAACvG,GAAA,EAAD,CACE5K,QAAS,WACPo3B,EAAajmB,EAAQ,GACrBsC,EAASjI,MAAQA,EACjBX,QAAQC,IAAIU,IAEd3P,MAAOs7B,GAAahmB,EAAQ,EAAI,iBAAcgJ,EAC9Cve,QAAQ,aAEPgD,EAAU,0BACVuS,EAAQ,OAgEiB25B,CAAer3B,UAarD,IAAMs3B,GAA0B/kC,KAAH,MA0BvBglC,GAAiB,SAACtvC,GACtB,IAAMiG,EAAU8L,eADgB,EAEfqG,aAAYi3B,IAAtB5b,EAFyB,oBAQ1Bxb,EAASC,eAET2U,EAAYC,eAVc,EAW4BD,EAAUtd,OAA9Dm6B,EAXwB,EAWxBA,eAA4B55B,GAXJ,EAWR0b,WAXQ,EAWI1b,OAAOE,EAXX,EAWWA,SAAUhL,EAXrB,EAWqBA,GAoBrD,OACE,kBAACsoB,GAAA,EAAD,iBACMttB,EADN,CAEEutB,yBArBgB,WAClBpe,QAAQC,IAAI,cAAeyd,EAAUtd,QACrCkkB,EAAO,CACL7oB,UAAW,CACTK,KAAM,CACJ6E,QACAE,WACAorB,SAAS,MAAD,OAAQsO,EAAiB55B,GACjCy/B,SAAU7F,GAEZ7+B,MAAO,CAAE7F,SAEVgU,MAAK,SAACnM,GACPoL,EAAO,gBArBFhS,EAAQsU,IAAI,OA8BjBE,UAAWivB,MAKX8F,GAA4B,SAACxvC,GAAD,OAChC,kBAAC,KAAYA,EACX,kBAAC,GAAD,CAAgB4I,MAAM,cAAc+qB,eAAe,EAAOzzB,QAAQ,WAIzDuvC,GAAqB,SAACzvC,GACjC,IAAMoD,EAAWC,cACjB,OACE,kBAACkjB,GAAA,EAASvmB,EACR,kBAACyY,GAAA,EAAD,CAAYvY,QAAQ,WAAWY,QAAS,kBAAC,GAAD,OACtC,kBAAC2mB,GAAA,EAAD,CACE7e,MAAM,cACN2H,OAAO,gBACPwD,UAAU,cAEV,kBAAC2T,GAAA,EAAD,CAAajN,UAAQ,EAACkN,WAAW,OAAO/e,MAAM,qBAEhD,kBAAC6e,GAAA,EAAD,CAAgB7e,MAAM,UAAU2H,OAAO,aAAawD,UAAU,WAC5D,kBAAC2T,GAAA,EAAD,CAAajN,UAAQ,EAACkN,WAAW,OAAO/e,MAAM,qBAEhD,kBAACgsB,GAAA,EAAD,CAAarkB,OAAO,aACpB,kBAACqkB,GAAA,EAAD,CAAarkB,OAAO,iBAAiB4V,SAAUrI,iBAC/C,kBAAC8W,GAAA,EAAD,CAAarkB,OAAO,QAAQyjB,UAAWY,OACvC,kBAAClb,GAAA,EAAD,MACG,YAAmB,IAAhB3B,EAAe,EAAfA,SAOF,OANA3U,EACEiO,GAAe,CACb1I,IAAI,mBAAD,OAAqBoP,EAAS/S,IACjC4D,MAAM,UAIR,qDACyBmP,EAAS2xB,eAAiB3xB,EAASjI,a,UCpNpEjP,GAAQ6uC,YAAe,CAC3BxuC,QAAS,CACPC,QAAS,CACPC,KAAM,YAGVuuC,QAAS,CACPtmC,MAAO,OACPumC,YAAa,UAGX3pC,GAAU4pC,eAyKDC,GAvKH,WAAO,IAAD,EACwBpsC,qBADxB,mBACTqsC,EADS,KACKC,EADL,KAehB,OAZAjmC,qBAAU,WACHgmC,GACHrsB,KACG1K,MAAK,SAACi3B,GACLD,GAAgB,kBAAMC,QAEvBh3B,OAAM,SAACK,GACNnK,QAAQqJ,MAAMc,QAGnB,CAACy2B,EAAcC,IAEbD,EAKH,kBAAC,iBAAD,CAAgB7sB,OAAQO,IACtB,kBAAC,IAAD,CAAgBP,OAAQO,IACtB,kBAAC,IAAD,CAAyBysB,MAAOC,KAC9B,kBAACC,EAAA,EAAD,CACEvvC,MAAOA,GACPutC,aAAcA,GACdtpB,aAAcA,GACd5iB,MAAM,6BACN4H,UAAWumC,IACXC,SAAUC,EACVlkB,OAAQxiB,GACR2mC,aAAcC,GACdV,aAAcA,EACd9pC,QAASA,GACTyqC,eAAgB,CAAE9oC,WAAY+oC,KAE9B,kBAACC,EAAA,EAAD,CACEruC,KAAK,YACLkqC,KAAMjmB,GACNwY,KAAM1Y,GACN/kB,OAAQ0kB,GACR4qB,KAAMlqB,KAER,kBAACiqB,EAAA,EAAD,CACEruC,KAAK,WACLkqC,KAAMllB,GACNyX,KAAM7X,GACN5lB,OAAQylB,GACR6pB,KAAMzpB,KAER,kBAACwpB,EAAA,EAAD,CACEruC,KAAK,iBACLkqC,KAAM3kB,GACNvmB,OAAQimB,GACRqpB,KAAMhpB,KAER,kBAAC+oB,EAAA,EAAD,CACEruC,KAAK,eACLkqC,KAAMxZ,GACN+L,KAAMlM,GACNvxB,OAAQuvC,GACRD,KAAME,KAER,kBAACH,EAAA,EAAD,CACEruC,KAAK,eACLy8B,KAAM7L,GACN5xB,OAAQozB,KAEV,kBAACic,EAAA,EAAD,CAAUruC,KAAK,kBACf,kBAACquC,EAAA,EAAD,CAAUruC,KAAK,sBACf,kBAACquC,EAAA,EAAD,CAAUruC,KAAK,qBACf,kBAACquC,EAAA,EAAD,CACEruC,KAAK,UACLkqC,KAAMxV,GACN+H,KAAMhI,GACNz1B,OAAQyvC,GACRH,KAAM9Z,KAER,kBAAC6Z,EAAA,EAAD,CACEruC,KAAK,aACLkqC,KAAMnN,GACNN,KAAMI,GACN79B,OAAQ0vC,GACRJ,KAAMhS,KAER,kBAAC+R,EAAA,EAAD,CACEruC,KAAK,iBACLy8B,KAAMyQ,GACNluC,OAAQ0tC,KAEV,kBAAC2B,EAAA,EAAD,CACEruC,KAAK,gBACLkqC,KAAM9K,GACN3C,KAAM0C,GACNngC,OAAQ2vC,GACRL,KAAMtP,KAER,kBAACqP,EAAA,EAAD,CACEruC,KAAK,oBACLy8B,KAAM8P,GACNvtC,OAAQqtC,KAEV,kBAACgC,EAAA,EAAD,CACEruC,KAAK,WACLkqC,KAAMvH,GACNlG,KAAMiG,GACN1jC,OAAQ4vC,GACRN,KAAM7L,KAER,kBAAC4L,EAAA,EAAD,CAAUruC,KAAK,eAAey8B,KAAM+P,KACpC,kBAAC6B,EAAA,EAAD,CACEruC,KAAK,UACLkqC,KAAM3G,GACN9G,KAAM2G,GACNpkC,OAAQ+jC,GACRuL,KAAM1L,KAER,kBAACyL,EAAA,EAAD,CACEruC,KAAK,kBACLkqC,KAAM3E,GACN9I,KAAM4I,GACNrmC,OAAQomC,GACRkJ,KAAMhJ,KAER,kBAAC+I,EAAA,EAAD,CACEruC,KAAK,WACLkqC,KAAMtG,GACNnH,KAAMgH,GACNzkC,OAAQwkC,GACR8K,KAAM5K,KAER,kBAAC2K,EAAA,EAAD,CACEruC,KAAK,gBACLkqC,KAAMvF,GACNlI,KAAMgI,GACNzlC,OAAQwlC,GACR8J,KAAM5J,KAER,kBAAC2J,EAAA,EAAD,CACEruC,KAAK,eACLkqC,KAAM/E,GACN1I,KAAMsI,GACN/lC,OAAQ6lC,GACRyJ,KAAMtJ,KAER,kBAACqJ,EAAA,EAAD,CACEruC,KAAK,OACLkqC,KAAMhG,GACNzH,KAAMuH,GACNhlC,OAAQ6kC,GACRyK,KAAMrK,KAER,kBAACoK,EAAA,EAAD,CACEruC,KAAK,YACLkqC,KAAM3F,GACN9H,KAAM4H,GACNrlC,OAAQolC,GACRkK,KAAMhK,KAER,kBAAC+J,EAAA,EAAD,CAAUruC,KAAK,uBA/IhB,kBAAC2I,EAAA,EAAD,OCnIS/F,QACW,cAA7BisC,OAAOprC,SAASqrC,UAEe,UAA7BD,OAAOprC,SAASqrC,UAEhBD,OAAOprC,SAASqrC,SAASt6B,MACvB,2DCVNu6B,IAASn9B,OAAO,kBAAC,GAAD,MAASo9B,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM34B,MAAK,SAAA44B,GACjCA,EAAaC,iB,2EElIjB,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzC70B,EAAG60B,EACHG,KACAF,QAAS,IAUV,OANAG,EAAQJ,GAAUK,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOC,KAGAD,EAAOD,QA0Df,OArDAF,EAAoBO,EAAIF,EAGxBL,EAAoBrX,EAAIoX,EAGxBC,EAAoBrzB,EAAI,SAASuzB,EAAS1vC,EAAMgwC,GAC3CR,EAAoBlf,EAAEof,EAAS1vC,IAClC+M,OAAOkjC,eAAeP,EAAS1vC,EAAM,CAAEkwC,cAAkBC,IAAKH,KAKhER,EAAoB5wB,EAAI,SAAS8wB,GACX,qBAAXU,QAA0BA,OAAOC,aAC1CtjC,OAAOkjC,eAAeP,EAASU,OAAOC,YAAa,CAAE/lC,MAAO,WAE7DyC,OAAOkjC,eAAeP,EAAS,aAAc,CAAEplC,YAQhDklC,EAAoBhzB,EAAI,SAASlS,EAAOgmC,GAEvC,GADU,EAAPA,IAAUhmC,EAAQklC,EAAoBllC,IAC/B,EAAPgmC,EAAU,OAAOhmC,EACpB,GAAW,EAAPgmC,GAA8B,kBAAVhmC,GAAsBA,GAASA,EAAMimC,WAAY,OAAOjmC,EAChF,IAAIkmC,EAAKzjC,OAAO/N,OAAO,MAGvB,GAFAwwC,EAAoB5wB,EAAE4xB,GACtBzjC,OAAOkjC,eAAeO,EAAI,UAAW,CAAEN,cAAkB5lC,MAAOA,IACtD,EAAPgmC,GAA4B,iBAAThmC,EAAmB,IAAI,IAAInE,KAAOmE,EAAOklC,EAAoBrzB,EAAEq0B,EAAIrqC,EAAK,SAASA,GAAO,OAAOmE,EAAMnE,IAAQsqC,KAAK,KAAMtqC,IAC9I,OAAOqqC,GAIRhB,EAAoBkB,EAAI,SAASf,GAChC,IAAIK,EAASL,GAAUA,EAAOY,WAC7B,WAAwB,OAAOZ,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBrzB,EAAE6zB,EAAQ,IAAKA,GAC5BA,GAIRR,EAAoBlf,EAAI,SAASrV,EAAQ01B,GAAY,OAAO5jC,OAAO6jC,UAAUC,eAAef,KAAK70B,EAAQ01B,IAGzGnB,EAAoBxtB,EAAI,IAIjBwtB,EAAoBA,EAAoB3U,EAAI,I,gBClFrD8U,EAAOD,QAAUoB,EAAQ,I,cCAzBnB,EAAOD,QAAUoB,EAAQ,K,cCAzBnB,EAAOD,QAAUoB,EAAQ,M,cCAzBnB,EAAOD,QAAUoB,EAAQ,M,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,K,cCAzBnB,EAAOD,QAAUoB,EAAQ,M,cCAzBnB,EAAOD,QAAUoB,EAAQ,M,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,M,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,K,cCAzBnB,EAAOD,QAAUoB,EAAQ,K,cCAzBnB,EAAOD,QAAUoB,EAAQ,M,cCAzBnB,EAAOD,QAAUoB,EAAQ,M,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,M,cCAzBnB,EAAOD,QAAUoB,EAAQ,M,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,M,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,cCAzBnB,EAAOD,QAAUoB,EAAQ,O,8DCCV,SAASC,EAAyB/iC,EAAQgjC,GACvD,GAAc,MAAVhjC,EAAgB,MAAO,GAC3B,IACI7H,EAAKyU,EADL5D,ECHS,SAAuChJ,EAAQgjC,GAC5D,GAAc,MAAVhjC,EAAgB,MAAO,GAC3B,IAEI7H,EAAKyU,EAFL5D,EAAS,GACTi6B,EAAalkC,OAAOkM,KAAKjL,GAG7B,IAAK4M,EAAI,EAAGA,EAAIq2B,EAAW5sC,OAAQuW,IACjCzU,EAAM8qC,EAAWr2B,GACbo2B,EAASj9B,QAAQ5N,IAAQ,IAC7B6Q,EAAO7Q,GAAO6H,EAAO7H,IAGvB,OAAO6Q,EAZM,CDG6BhJ,EAAQgjC,GAGlD,GAAIjkC,OAAOmkC,sBAAuB,CAChC,IAAIC,EAAmBpkC,OAAOmkC,sBAAsBljC,GAEpD,IAAK4M,EAAI,EAAGA,EAAIu2B,EAAiB9sC,OAAQuW,IACvCzU,EAAMgrC,EAAiBv2B,GACnBo2B,EAASj9B,QAAQ5N,IAAQ,GACxB4G,OAAO6jC,UAAUQ,qBAAqBtB,KAAK9hC,EAAQ7H,KACxD6Q,EAAO7Q,GAAO6H,EAAO7H,IAIzB,OAAO6Q,E,kEEXHq6B,EAAYhmC,qBAAW,CAC3B4iB,WAAY,CACV1iB,IAAK,IAEP+lC,SAAU,CACRjqC,QAAS,EACT/H,WAAY,GACZwH,MAAO,GAET4E,KAAM,CACJC,OAAQ,EACRC,OAAQ,EACRlN,gBAAiB,UACjBmN,aAbcR,KAefS,KAEG1N,EAAYC,sBAAW,YAAK,MAAK,CACrC6D,KAAM,CACJ4E,MAAO,QAETgtB,OAAQ,CACNv0B,YAAajB,EAAMG,QAAQ,IAE7B8yC,aAAc,CACZhuC,UAAWjF,EAAMG,QAAQ,GACzBurB,aAAc1rB,EAAMG,QAAQ,IAE9B+yC,QAAS,CACPlyC,WAAY,IAEdmyC,aAAc,CACZ9lC,OAAQ,IAEVR,OAAQ,CACNA,OAAQ7M,EAAMG,QAAQ,IAExBizC,SAAU,CACRnsC,WAAYjH,EAAMG,QAAQ,GAC1B+G,cAAe,OAInB,SAASmC,EAAT,GAA0D,IAAtC7J,EAAqC,EAArCA,SAAUwzC,EAA2B,EAA3BA,SAAU9wC,EAAiB,EAAjBA,KAASC,EAAQ,oCACjDL,EAAUhC,IACVuzC,EAAoB9nC,IAAM+nC,SAAS3rC,IACvCnI,GACA,YAAK,OAAI+L,IAAMgoC,aAAaC,EAAO,CAAEC,UAAWvxC,OAGlD,OACE,yBAAKH,UAAWD,EAAQ8B,MACtB,kBAAC,IAAD,eAASoJ,kBAAmBgmC,EAAUU,aAAUra,YAAa2Z,EAAW,WAAa,aAAcjlC,UAAW,kBAACglC,EAAD,MAAehxC,UAAWG,EAAOJ,EAAQsxC,SAAW,MAAUjxC,GACzKkxC,IAYThqC,EAASsqC,aAAe,CACtBX,YACA9wC,SAGamH,Q,wOCjEA,GACbjD,SAAUzB,IACV2B,cAAestC,IACfrtC,SAAUstC,IACVrtC,UAAW2H,IACX1H,WAAYm3B,IACZl3B,QAASotC,IACTntC,aAAcotC,IACdntC,SAAUhC,IACViC,eAAgBmtC,IAChBltC,OAAQmtC,K,iBCrBGC,EAAO,CAClB,WACA,gBACA,WACA,YACA,aACA,UACA,eACA,WACA,iBACA,UAGWC,EAAW,CACtBC,SAAU,WACVC,eAAgB,iBAChBC,SAAU,WACVC,UAAW,YACXC,YAAa,cACbC,QAAS,UACTC,cAAe,gBACfC,SAAU,WACVC,gBAAiB,kBACjBC,OAAQ,UAGGhoB,EAAQ,CACnBioB,KAAM,CACJX,EAASC,SACTD,EAASE,eACTF,EAASG,SACTH,EAASI,UACTJ,EAASK,YACTL,EAASM,QACTN,EAASO,cACTP,EAASQ,SACTR,EAASS,gBACTT,EAASU,QAEXE,SAAU,CACRZ,EAASC,SACTD,EAASE,eACTF,EAASG,SACTH,EAASI,WAEXS,MAAO,CACLb,EAASK,YACTL,EAASM,QACTN,EAASO,cACTP,EAASQ,SACTR,EAASS,iBAEXK,UAAW,CACTd,EAASC,SACTD,EAASI,UACTJ,EAASQ,WAIAO,EAAe,CAC1BC,SAAU,WACVC,MAAO,QACPC,KAAM,Q,mPCjDFC,GAAY,CAChBC,KAAI,KACJC,KAAK,KACLC,KAAO,KACPC,KAAO,KACPC,KAAK,KACLC,KAAK,KACLC,KAAK,KACLC,KAAM,KACNC,KAAK,KACLC,KAAM,MAGO9B,KAAKvlC,QAAO,SAACC,EAASqnC,EAAU35B,GAE7C,OADA1N,EAAQqnC,GAAYX,GAAUh5B,GACvB1N,IACN,ICpBGsnC,GAAyBn2C,uBAAW,YAAK,MAAK,CAClDo2C,KAAM,CACJjuC,OAAQ,EACR5I,MAAO,OACP0I,QAAS,OACTuF,aAAc,MACd0f,eAAgB,SAChBrZ,WAAY,SACZ7K,QAAS,GAEXqtC,UAAW,CACT5tC,MAAO,GACP6E,OAAQ,IAEVgpC,YAAa,CACX7tC,MAAO,GACP6E,OAAQ,GACRpI,UAAW,EACXymB,aAAc,GAEhB4qB,QAAS,CACPC,SAAU,IAEZC,UAAW,CACTD,SAAU,IAEZlwC,OAAQ,CACNowC,YAAa,EACbC,YAAa,QACbC,YAAa32C,EAAMK,QAAQqrC,OAAOkL,WAOhCC,GAAS3C,EAAKvsC,KAAI,YAAI,OAAImvC,GAAejoC,MAqChCkoC,GAnCf,YAAoD,IAA3B1wC,EAA0B,EAA1BA,OAAQ0B,EAAkB,EAAlBA,MAAOtE,EAAW,EAAXA,QAChC3B,EAAUo0C,KACVthC,EAAQiY,EAAMioB,KAAKr/B,QAAQ1N,GAC3BivC,EAAQ,CACZ,kBAACC,EAAc7wC,SAAf,CAAwBrE,UAAWD,EAAQw0C,UAC3C,kBAACW,EAAc3wC,cAAf,CAA6BvE,UAAWD,EAAQ00C,YAChD,kBAACS,EAAc1wC,SAAf,CAAwBxE,UAAWD,EAAQ00C,YAC3C,kBAACS,EAAczwC,UAAf,CAAyBzE,UAAWD,EAAQw0C,UAC5C,kBAACW,EAAcxwC,WAAf,CAA0B1E,UAAWD,EAAQ00C,YAC7C,kBAACS,EAAcvwC,QAAf,CAAuB3E,UAAWD,EAAQ00C,YAC1C,kBAACS,EAActwC,aAAf,CAA4B5E,UAAWD,EAAQ00C,YAC/C,kBAACS,EAAcrwC,SAAf,CAAwB7E,UAAWD,EAAQw0C,UAC3C,kBAACW,EAAcpwC,eAAf,CAA8B9E,UAAWD,EAAQ00C,YACjD,kBAACS,EAAcnwC,OAAf,CAAsB/E,UAAWD,EAAQ00C,aAG3C,OACE,kBAAC,IAAD,CACEhzC,aAAYuE,EACZhG,UAAWm1C,IAAKp1C,EAAQq0C,KAAMtpB,EAAMooB,UAAU15B,SAASxT,GAASjG,EAAQs0C,UAAYt0C,EAAQu0C,YAAahwC,GAAUvE,EAAQuE,QAC3HtC,MAAO,CAAE3D,gBAAiBy2C,GAAOjiC,IACjCnR,QAASA,GAERuzC,EAAMpiC,KC3DP9U,GAAYC,KAAW,YAAK,MAAK,CACrCmzC,QAAS,CACPlyC,WAAY,IAEdmyC,aAAc,CACZ9lC,OAAQ,QAIZ,SAAS8pC,GAAT,GAAgG,IAAxEnE,EAAuE,EAAvEA,SAAUS,EAA6D,EAA7DA,SAAUptC,EAAmD,EAAnDA,OAAQuT,EAA2C,EAA3CA,SAAU9T,EAAiC,EAAjCA,KAAMiC,EAA2B,EAA3BA,MAAOtE,EAAoB,EAApBA,QAAYtB,EAAQ,0EACvFL,EAAUhC,KAGVonB,GAFO+vB,EAAcnxC,IAASsxC,IAEvBrvC,GAASosC,EAASkD,IAAUvxC,GAAM+O,gBAE/C,OACE,kBAAC,IAAD,eAAMpR,QAASA,EAAS4C,OAAQA,EAAQuT,SAAUA,EAAU7X,UAAWixC,GAAYlxC,EAAQoxC,SAAa/wC,GACtG,kBAAC,IAAD,CAAW+L,kBAAmB6oC,GAAeO,cAAe,CAAEvvC,MAAOmf,EAAMusB,YAAY1xC,UAAWixC,GAAYlxC,EAAQqxC,eAAgBM,GAAYvsB,IAgBxJiwB,GAAa/wC,SAAW,YAAK,OAAI,kBAAC+wC,GAAD,eAAcrxC,KAAM,YAAgB3G,KACrEg4C,GAAa7wC,cAAgB,YAAK,OAAI,kBAAC6wC,GAAD,eAAcrxC,KAAM,iBAAqB3G,KAC/Eg4C,GAAa5wC,SAAW,YAAK,OAAI,kBAAC4wC,GAAD,eAAcrxC,KAAM,YAAgB3G,KACrEg4C,GAAa3wC,UAAY,YAAK,OAAI,kBAAC2wC,GAAD,eAAcrxC,KAAM,aAAiB3G,KACvEg4C,GAAa1wC,WAAa,YAAK,OAAI,kBAAC0wC,GAAD,eAAcrxC,KAAM,cAAkB3G,KACzEg4C,GAAazwC,QAAU,YAAK,OAAI,kBAACywC,GAAD,eAAcrxC,KAAM,WAAe3G,KACnEg4C,GAAaxwC,aAAe,YAAK,OAAI,kBAACwwC,GAAD,eAAcrxC,KAAM,gBAAoB3G,KAC7Eg4C,GAAavwC,SAAW,YAAK,OAAI,kBAACuwC,GAAD,eAAcrxC,KAAM,YAAgB3G,KACrEg4C,GAAatwC,eAAiB,YAAK,OAAI,kBAACswC,GAAD,eAAcrxC,KAAM,kBAAsB3G,KACjFg4C,GAAarwC,OAAS,YAAK,OAAI,kBAACqwC,GAAD,eAAcrxC,KAAM,UAAc3G,KAElDg4C,UCvDf,kOAMe9tC,iB,wNCcTkuC,EAA4BC,wBAAcC,cAyBhD,IAAMC,EAvBN,SAAmB7vC,GACjB,IAAI8vC,EAAK,GACT,GAAIC,EAAO9yC,aACT,IACE6yC,EAAKhzB,KAAK6gB,MAAMoS,EAAO9yC,aAAaC,QAAQ,WAAa,GACzD,MAAO0T,IAIX,OAAOk/B,EAAG9vC,GAcYgwC,CAAU,YAAc,GACjC,SAASrI,IAAiB,IAAD,EACNz+B,cAAxBohB,EAD8B,EAC9BA,OAAQrhB,EADsB,EACtBA,YADsB,EAERjO,mBAAS60C,GAFD,mBAE/BI,EAF+B,KAEtBC,EAFsB,KAOtC,IAAK5lB,EAAQ,OAAO,kBAAC,IAAD,MAEpB,IAgFM6lB,EAAa,CAhFO,WACxB,GAAI,CAAC,QAAS,WAAWz8B,SAASzK,GAChC,OACE,yBAAKjJ,IAAI,cAAcowC,YAAW,CAAE9e,EAAG,EAAG+e,EAAG,GAAIhgC,EAAG,EAAGigC,EAAG,EAAGC,KAAM,EAAGC,KAAM,KAC1E,kBAAC,IAAD,OA4EYC,GAtEO,WACzB,GAAI,CAAC,QAAS,WAAW/8B,SAASzK,GAChC,OACE,yBAAKjJ,IAAI,eAAeowC,YAAW,CAAE9e,EAAG,EAAG+e,EAAG,GAAIhgC,EAAG,EAAGigC,EAAG,EAAGC,KAAM,EAAGC,KAAM,KAC3E,kBAAC,IAAD,OAkEiCE,GA5DR,WAC/B,GAAI,CAAC,SAASh9B,SAASzK,GACrB,OACE,yBAAKjJ,IAAI,qBAAqBowC,YAAW,CAAE9e,EAAG,GAAI+e,EAAG,GAAIhgC,EAAG,EAAGigC,EAAG,GAAIC,KAAM,EAAGC,KAAM,KACnF,kBAAC,IAAD,OAwDuDG,GAlDjC,WAC5B,GAAI,CAAC,QAAS,UAAW,SAASj9B,SAASzK,GACzC,OACE,yBAAKjJ,IAAI,kBAAkBowC,YAAW,CAAE9e,EAAG,EAAG+e,EAAG,GAAIhgC,EAAG,EAAGigC,EAAG,EAAGC,KAAM,EAAGC,KAAM,KAC9E,kBAAC,IAAD,OA8CmFI,GAxC5D,WAC7B,GAAI,CAAC,QAAS,UAAW,SAASl9B,SAASzK,GACzC,OACE,yBAAKjJ,IAAI,mBAAmBowC,YAAW,CAAE9e,EAAG,EAAG+e,EAAG,GAAIhgC,EAAG,EAAGigC,EAAG,EAAGC,KAAM,EAAGC,KAAM,KAC/E,kBAAC,IAAD,OAoC4GK,GA9BrF,WAC7B,GAAI,CAAC,QAAS,UAAW,SAASn9B,SAASzK,GACzC,OACE,yBAAKjJ,IAAI,mBAAmBowC,YAAW,CAAE9e,EAAG,GAAI+e,EAAG,GAAIhgC,EAAG,EAAGigC,EAAG,GAAIC,KAAM,EAAGC,KAAM,KACjF,kBAAC,IAAD,OA0BsIM,GApB5G,WAChC,GAAI,CAAC,QAAS,WAAWp9B,SAASzK,GAChC,OACE,yBAAKjJ,IAAI,sBAAsBowC,YAAW,CAAE9e,EAAG,GAAI+e,EAAG,GAAIhgC,EAAG,EAAGigC,EAAG,GAAIC,KAAM,EAAGC,KAAM,KACpF,kBAAC,IAAD,OAgBgKO,GAVtI,WAChC,GAAI,CAAC,QAAS,aAAar9B,SAASzK,GAClC,OACE,yBAAKjJ,IAAI,sBAAsBowC,YAAW,CAAE9e,EAAG,GAAI+e,EAAG,GAAIhgC,EAAG,EAAGigC,EAAG,GAAIC,KAAM,EAAGC,KAAM,KACpF,kBAAC,IAAD,OAM6LQ,IAA6Bt7B,OAAOjZ,SAEzO,OACE,kBAACizC,EAAD,CAA2Bx1C,UAAU,SAAS+1C,QAASA,EAASgB,KAAM,CAAEC,GAAI,GAAIC,GAAI,GAAIvxB,GAAI,EAAG5N,GAAI,EAAGo/B,IAAK,GAAKC,UAAW,GAAIC,eAzF1G,SAAC3tB,EAAQssB,GAflC,IAAkBjwC,EAAKmE,EAALnE,EAgBL,UAhBUmE,EAgBC8rC,EAflBF,EAAO9yC,cACT8yC,EAAO9yC,aAAa0f,QAClB,QACAG,KAAKC,UAAL,eACG/c,EAAMmE,KAYX+rC,EAAWD,KAwFRE,M,sCC3IP3G,EAAOD,QAAU,IAA0B,sC,wFCM3C,SAASgI,EAAWC,EAAMjqB,GACxB,MAAO,CAAEiqB,OAAMjqB,UAGjB,IAAMhlB,EAAO,CACXgvC,EAAW,QAAS,GACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,MACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,MACpBA,EAAW,QAAS,MACpBA,EAAW,aAASx7B,IAGP,SAAS07B,IACtB,IAAMt5C,EAAQi3B,cAEd,OACE,kBAAC,IAAMxqB,SAAP,KACE,kBAACvN,EAAA,EAAD,eACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkL,KAAMA,EACNyC,OAAQ,CACNI,IAAK,GACLssC,MAAO,GACP7pB,OAAQ,EACR8pB,KAAM,KAGR,kBAAC,IAAD,CAAO77B,QAAQ,OAAO87B,OAAQz5C,EAAMK,QAAQ6mB,KAAKwyB,YACjD,kBAAC,IAAD,CAAOD,OAAQz5C,EAAMK,QAAQ6mB,KAAKwyB,WAChC,kBAAC,IAAD,CACEC,MAAO,IACPrxC,SAAS,OACTvE,MAAO,CAAE61C,WAAY,SAAUC,KAAM75C,EAAMK,QAAQ6mB,KAAK5mB,UAH1D,cAQF,kBAAC,IAAD,CAAMwF,KAAK,WAAW6X,QAAQ,SAAS87B,OAAQz5C,EAAMK,QAAQC,QAAQC,KAAMu5C,KAAK,O,YC3CpFh6C,E,MAAYC,IAAW,SAAAC,GAAK,MAAK,CACrCyrB,MAAO,CACL1iB,QAAS/I,EAAMG,QAAQ,GACvB6H,QAAS,OACTvG,SAAU,SACVwG,cAAe,SACfoF,OAAQ,yBAeG0sC,IAXK,WAClB,IAAMj4C,EAAUhC,IAChB,OAEI,kBAAC2K,EAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC6tB,EAAD,S,kHCdR,SAAS/f,EAAep2B,GACtBA,EAAMo2B,iBAGR,IAAMz5B,EAAYC,YAAW,CAC3Bi6C,eAAgB,CACd14C,KAAM,KAIK,SAAS24C,IACtB,IAAMn4C,EAAUhC,IAChB,OACE,kBAAC,IAAM2M,SAAP,KACE,kBAACvN,EAAA,EAAD,2BACA,kBAAC2E,EAAA,EAAD,CAAYzE,UAAU,IAAIC,QAAQ,MAAlC,aAGA,kBAACwE,EAAA,EAAD,CAAYvE,MAAM,gBAAgByC,UAAWD,EAAQk4C,gBAArD,uBAGA,6BACE,kBAACE,EAAA,EAAD,CAAM56C,MAAM,UAAU4gC,KAAK,IAAIz8B,QAAS81B,GAAxC,kBCvBR,IAAMz5B,EAAYC,KAAW,SAAAC,GAAK,MAAK,CACrCyrB,MAAO,CACL1iB,QAAS/I,EAAMG,QAAQ,GACvB6H,QAAS,OACTvG,SAAU,SACVwG,cAAe,SACfoF,OAAQ,yBAeG8sC,IAXM,WACnB,IAAMr4C,EAAUhC,IAChB,OAEI,kBAAC2K,EAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAACwuB,EAAD,S,4JCTR,SAASb,EAAWj1C,EAAI4nC,EAAMrqC,EAAM04C,EAAQC,EAAejrB,GACzD,MAAO,CAAEjrB,KAAI4nC,OAAMrqC,OAAM04C,SAAQC,gBAAejrB,UAGlD,IAAM4M,EAAO,CACXod,EAAW,EAAG,eAAgB,gBAAiB,aAAc,2CAAmB,QAChFA,EAAW,EAAG,eAAgB,iBAAkB,aAAc,2CAAmB,QACjFA,EAAW,EAAG,eAAgB,aAAc,aAAc,yCAAiB,QAC3EA,EAAW,EAAG,eAAgB,kBAAmB,WAAY,2CAAmB,QAChFA,EAAW,EAAG,eAAgB,oBAAqB,kBAAmB,2CAAmB,SAG3F,SAAS7f,EAAep2B,GACtBA,EAAMo2B,iBAGR,IAAMz5B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCs6C,QAAS,CACPr1C,UAAWjF,EAAMG,QAAQ,QAId,SAASo6C,IACtB,IAAMz4C,EAAUhC,IAChB,OACE,kBAAC,IAAM2M,SAAP,KACE,kBAACvN,EAAA,EAAD,4BACA,kBAACwL,EAAA,EAAD,CAAOiC,KAAK,SACV,kBAAChC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,iBAGJ,kBAACC,EAAA,EAAD,KACGixB,EAAKr0B,KAAI,SAAAqD,GAAG,OACX,kBAACJ,EAAA,EAAD,CAAU/C,IAAKmD,EAAI7G,IACjB,kBAAC0G,EAAA,EAAD,KAAYG,EAAI+gC,MAChB,kBAAClhC,EAAA,EAAD,KAAYG,EAAItJ,MAChB,kBAACmJ,EAAA,EAAD,KAAYG,EAAIovC,QAChB,kBAACvvC,EAAA,EAAD,KAAYG,EAAIqvC,eAChB,kBAACxvC,EAAA,EAAD,CAAWC,MAAM,SAASE,EAAIokB,cAKtC,yBAAKrtB,UAAWD,EAAQw4C,SACtB,kBAACJ,EAAA,EAAD,CAAM56C,MAAM,UAAU4gC,KAAK,IAAIz8B,QAAS81B,GAAxC,qBCxDR,IAAMz5B,EAAYC,KAAW,SAAAC,GAAK,MAAK,CACrCyrB,MAAO,CACL1iB,QAAS/I,EAAMG,QAAQ,GACvB6H,QAAS,OACTvG,SAAU,SACVwG,cAAe,SACfoF,OAAQ,yBAaGmtC,IATY,WACzB,IAAM14C,EAAUhC,IAChB,OACE,kBAAC2K,EAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC8uB,EAAD,S,wFCbN,SAASnB,EAAWC,EAAMjqB,GACxB,MAAO,CAAEiqB,OAAMjqB,UAGjB,IAAMhlB,EAAO,CACXgvC,EAAW,QAAS,GACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,MACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,MACpBA,EAAW,QAAS,MACpBA,EAAW,aAASx7B,IAGP,SAAS07B,IACtB,IAAMt5C,EAAQi3B,cAEd,OACE,kBAAC,IAAMxqB,SAAP,KACE,kBAACvN,EAAA,EAAD,oBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkL,KAAMA,EACNyC,OAAQ,CACNI,IAAK,GACLssC,MAAO,GACP7pB,OAAQ,EACR8pB,KAAM,KAGR,kBAAC,IAAD,CAAO77B,QAAQ,OAAO87B,OAAQz5C,EAAMK,QAAQ6mB,KAAKwyB,YACjD,kBAAC,IAAD,CAAOD,OAAQz5C,EAAMK,QAAQ6mB,KAAKwyB,WAChC,kBAAC,IAAD,CACEC,MAAO,IACPrxC,SAAS,OACTvE,MAAO,CAAE61C,WAAY,SAAUC,KAAM75C,EAAMK,QAAQ6mB,KAAK5mB,UAH1D,cAQF,kBAAC,IAAD,CAAMwF,KAAK,WAAW6X,QAAQ,SAAS87B,OAAQz5C,EAAMK,QAAQC,QAAQC,KAAMu5C,KAAK,O,YC3CpFh6C,E,MAAYC,IAAW,SAAAC,GAAK,MAAK,CACrCyrB,MAAO,CACL1iB,QAAS/I,EAAMG,QAAQ,GACvB6H,QAAS,OACTvG,SAAU,SACVwG,cAAe,SACfoF,OAAQ,yBAcGotC,IAVS,WACtB,IAAM34C,EAAUhC,IAChB,OAEI,kBAAC2K,EAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC6tB,EAAD,S,kHCdR,SAAS/f,EAAep2B,GACtBA,EAAMo2B,iBAGR,IAAMz5B,EAAYC,YAAW,CAC3Bi6C,eAAgB,CACd14C,KAAM,KAIK,SAAS24C,IACtB,IAAMn4C,EAAUhC,IAChB,OACE,kBAAC,IAAM2M,SAAP,KACE,kBAACvN,EAAA,EAAD,oBACA,kBAAC2E,EAAA,EAAD,CAAYzE,UAAU,IAAIC,QAAQ,MAAlC,aAGA,kBAACwE,EAAA,EAAD,CAAYvE,MAAM,gBAAgByC,UAAWD,EAAQk4C,gBAArD,qBAGA,6BACE,kBAACE,EAAA,EAAD,CAAM56C,MAAM,UAAU4gC,KAAK,IAAIz8B,QAAS81B,GAAxC,kBCvBR,IAAMz5B,EAAYC,KAAW,SAAAC,GAAK,MAAK,CACrCyrB,MAAO,CACL1iB,QAAS/I,EAAMG,QAAQ,GACvB6H,QAAS,OACTvG,SAAU,SACVwG,cAAe,SACfoF,OAAQ,yBAaGqtC,IATU,WACvB,IAAM54C,EAAUhC,IAChB,OACE,kBAAC2K,EAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAACwuB,EAAD,S,4JCRN,SAASb,EAAWj1C,EAAI4nC,EAAMrqC,EAAM04C,EAAQC,EAAejrB,GACzD,MAAO,CAAEjrB,KAAI4nC,OAAMrqC,OAAM04C,SAAQC,gBAAejrB,UAGlD,IAAM4M,EAAO,CACXod,EAAW,EAAG,eAAgB,gBAAiB,aAAc,2CAAmB,QAChFA,EAAW,EAAG,eAAgB,iBAAkB,aAAc,2CAAmB,QACjFA,EAAW,EAAG,eAAgB,aAAc,aAAc,yCAAiB,QAC3EA,EAAW,EAAG,eAAgB,kBAAmB,WAAY,2CAAmB,QAChFA,EAAW,EAAG,eAAgB,oBAAqB,kBAAmB,2CAAmB,SAG3F,SAAS7f,EAAep2B,GACtBA,EAAMo2B,iBAGR,IAAMz5B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCs6C,QAAS,CACPr1C,UAAWjF,EAAMG,QAAQ,QAId,SAASo6C,IACtB,IAAMz4C,EAAUhC,IAChB,OACE,kBAAC,IAAM2M,SAAP,KACE,kBAACvN,EAAA,EAAD,qBACA,kBAACwL,EAAA,EAAD,CAAOiC,KAAK,SACV,kBAAChC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,iBAGJ,kBAACC,EAAA,EAAD,KACGixB,EAAKr0B,KAAI,SAAAqD,GAAG,OACX,kBAACJ,EAAA,EAAD,CAAU/C,IAAKmD,EAAI7G,IACjB,kBAAC0G,EAAA,EAAD,KAAYG,EAAI+gC,MAChB,kBAAClhC,EAAA,EAAD,KAAYG,EAAItJ,MAChB,kBAACmJ,EAAA,EAAD,KAAYG,EAAIovC,QAChB,kBAACvvC,EAAA,EAAD,KAAYG,EAAIqvC,eAChB,kBAACxvC,EAAA,EAAD,CAAWC,MAAM,SAASE,EAAIokB,cAKtC,yBAAKrtB,UAAWD,EAAQw4C,SACtB,kBAACJ,EAAA,EAAD,CAAM56C,MAAM,UAAU4gC,KAAK,IAAIz8B,QAAS81B,GAAxC,qBCxDR,IAAMz5B,EAAYC,KAAW,SAAAC,GAAK,MAAK,CACrCyrB,MAAO,CACL1iB,QAAS/I,EAAMG,QAAQ,GACvB6H,QAAS,OACTvG,SAAU,SACVwG,cAAe,SACfoF,OAAQ,yBAeGstC,IAXU,WACvB,IAAM74C,EAAUhC,IAChB,OAEI,kBAAC2K,EAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC8uB,EAAD,S,4JCTR,SAASnB,EAAWj1C,EAAI4nC,EAAMrqC,EAAM04C,EAAQC,EAAejrB,GACzD,MAAO,CAAEjrB,KAAI4nC,OAAMrqC,OAAM04C,SAAQC,gBAAejrB,UAGlD,IAAM4M,EAAO,CACXod,EAAW,EAAG,eAAgB,gBAAiB,aAAc,2CAAmB,QAChFA,EAAW,EAAG,eAAgB,iBAAkB,aAAc,2CAAmB,QACjFA,EAAW,EAAG,eAAgB,aAAc,aAAc,yCAAiB,QAC3EA,EAAW,EAAG,eAAgB,kBAAmB,WAAY,2CAAmB,QAChFA,EAAW,EAAG,eAAgB,oBAAqB,kBAAmB,2CAAmB,SAG3F,SAAS7f,EAAep2B,GACtBA,EAAMo2B,iBAGR,IAAMz5B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCs6C,QAAS,CACPr1C,UAAWjF,EAAMG,QAAQ,QAId,SAASo6C,IACtB,IAAMz4C,EAAUhC,IAChB,OACE,kBAAC,IAAM2M,SAAP,KACE,kBAACvN,EAAA,EAAD,wBACA,kBAACwL,EAAA,EAAD,CAAOiC,KAAK,SACV,kBAAChC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,iBAGJ,kBAACC,EAAA,EAAD,KACGixB,EAAKr0B,KAAI,SAAAqD,GAAG,OACX,kBAACJ,EAAA,EAAD,CAAU/C,IAAKmD,EAAI7G,IACjB,kBAAC0G,EAAA,EAAD,KAAYG,EAAI+gC,MAChB,kBAAClhC,EAAA,EAAD,KAAYG,EAAItJ,MAChB,kBAACmJ,EAAA,EAAD,KAAYG,EAAIovC,QAChB,kBAACvvC,EAAA,EAAD,KAAYG,EAAIqvC,eAChB,kBAACxvC,EAAA,EAAD,CAAWC,MAAM,SAASE,EAAIokB,cAKtC,yBAAKrtB,UAAWD,EAAQw4C,SACtB,kBAACJ,EAAA,EAAD,CAAM56C,MAAM,UAAU4gC,KAAK,IAAIz8B,QAAS81B,GAAxC,qBCxDR,IAAMz5B,EAAYC,KAAW,SAAAC,GAAK,MAAK,CACrCyrB,MAAO,CACL1iB,QAAS/I,EAAMG,QAAQ,GACvB6H,QAAS,OACTvG,SAAU,SACVwG,cAAe,SACfoF,OAAQ,yBAeGutC,IAXa,WAC1B,IAAM94C,EAAUhC,IAChB,OAEI,kBAAC2K,EAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC8uB,EAAD,S,4JCTR,SAASnB,EAAWj1C,EAAI4nC,EAAMrqC,EAAM04C,EAAQC,EAAejrB,GACzD,MAAO,CAAEjrB,KAAI4nC,OAAMrqC,OAAM04C,SAAQC,gBAAejrB,UAGlD,IAAM4M,EAAO,CACXod,EAAW,EAAG,eAAgB,gBAAiB,aAAc,2CAAmB,QAChFA,EAAW,EAAG,eAAgB,iBAAkB,aAAc,2CAAmB,QACjFA,EAAW,EAAG,eAAgB,aAAc,aAAc,yCAAiB,QAC3EA,EAAW,EAAG,eAAgB,kBAAmB,WAAY,2CAAmB,QAChFA,EAAW,EAAG,eAAgB,oBAAqB,kBAAmB,2CAAmB,SAG3F,SAAS7f,EAAep2B,GACtBA,EAAMo2B,iBAGR,IAAMz5B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCs6C,QAAS,CACPr1C,UAAWjF,EAAMG,QAAQ,QAId,SAASo6C,IACtB,IAAMz4C,EAAUhC,IAChB,OACE,kBAAC,IAAM2M,SAAP,KACE,kBAACvN,EAAA,EAAD,uBACA,kBAACwL,EAAA,EAAD,CAAOiC,KAAK,SACV,kBAAChC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,iBAGJ,kBAACC,EAAA,EAAD,KACGixB,EAAKr0B,KAAI,SAAAqD,GAAG,OACX,kBAACJ,EAAA,EAAD,CAAU/C,IAAKmD,EAAI7G,IACjB,kBAAC0G,EAAA,EAAD,KAAYG,EAAI+gC,MAChB,kBAAClhC,EAAA,EAAD,KAAYG,EAAItJ,MAChB,kBAACmJ,EAAA,EAAD,KAAYG,EAAIovC,QAChB,kBAACvvC,EAAA,EAAD,KAAYG,EAAIqvC,eAChB,kBAACxvC,EAAA,EAAD,CAAWC,MAAM,SAASE,EAAIokB,cAKtC,yBAAKrtB,UAAWD,EAAQw4C,SACtB,kBAACJ,EAAA,EAAD,CAAM56C,MAAM,UAAU4gC,KAAK,IAAIz8B,QAAS81B,GAAxC,qBCxDR,IAAMz5B,EAAYC,KAAW,SAAAC,GAAK,MAAK,CACrCyrB,MAAO,CACL1iB,QAAS/I,EAAMG,QAAQ,GACvB6H,QAAS,OACTvG,SAAU,SACVwG,cAAe,SACfoF,OAAQ,yBAaGwtC,IATa,WAC1B,IAAM/4C,EAAUhC,IAChB,OACE,kBAAC2K,EAAA,EAAD,CAAO1I,UAAWD,EAAQ2pB,OACxB,kBAAC8uB,EAAD,S","file":"static/js/main.9394f4c6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h1\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { lazy, Suspense } from 'react';\n\nconst loadable = (importFunc, { fallback = null } = { fallback: null }) => {\n  const LazyComponent = lazy(importFunc);\n\n  return props => (\n    <Suspense fallback={fallback}>\n      <LazyComponent {...props} />\n    </Suspense>\n  );\n};\n\nexport default loadable;\n","/**\n * Asynchronously loads the component for NotFoundPage\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","// in src/MyAppBar.js\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  useTranslate,\n  HideOnScroll,\n  MenuItemLink,\n  toggleSidebar,\n} from \"react-admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  makeStyles,\n  AppBar as MuiAppBar,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Settings from \"@material-ui/icons/Settings\";\nimport Dns from \"@material-ui/icons/Dns\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { useDispatch } from \"react-redux\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport HouseIcon from \"@material-ui/icons/House\";\nimport GroupWorkIcon from \"@material-ui/icons/GroupWork\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Store from \"@material-ui/icons/Store\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Business from \"@material-ui/icons/Business\";\nimport { AccountCircle, LocationCity, Storefront } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(\n  (theme) => ({\n    toolbar: {\n      paddingRight: theme.spacing(3),\n      backgroundColor: theme.palette.primary.main,\n      transition: theme.transitions.create([\"background-color\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    menuButton: {\n      marginLeft: \"0.5em\",\n      marginRight: \"0.5em\",\n    },\n    menuButtonIconClosed: {\n      transition: theme.transitions.create([\"transform\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      transform: \"rotate(0deg)\",\n    },\n    menuButtonIconOpen: {\n      transition: theme.transitions.create([\"transform\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      transform: \"rotate(180deg)\",\n    },\n    title: {\n      flex: 1,\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n    },\n  }),\n  { name: \"RaAppBar\" }\n);\n\nconst xeroStyle = {\n  color: \"white\",\n};\n\nconst MyAppBar = ({\n  children,\n  classes: classesOverride,\n  className,\n  logo,\n  logout,\n  open,\n  title,\n  userMenu,\n  ...rest\n}) => {\n  const translate = useTranslate();\n  const dispatch = useDispatch();\n  const classes = useStyles({ classes: classesOverride });\n  const isXSmall = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\n  const [settingsMenu, setSettingsMenu] = useState(null);\n  const [uMenu, setUserMenu] = useState(null);\n\n  const handleSettingsClick = (event) => {\n    setSettingsMenu(event.currentTarget);\n  };\n  const handleSettingsClose = (event) => {\n    setSettingsMenu(null);\n  };\n  const handleUserClick = (event) => {\n    setUserMenu(event.currentTarget);\n  };\n  const handleUserClose = (event) => {\n    setUserMenu(null);\n  };\n\n  return (\n    <HideOnScroll>\n      <MuiAppBar className={className} color=\"primary\" {...rest}>\n        <Toolbar\n          disableGutters\n          variant={isXSmall ? \"regular\" : \"dense\"}\n          className={classes.toolbar}\n        >\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => dispatch(toggleSidebar())}\n            className={classNames(classes.menuButton)}\n          >\n            <MenuIcon\n              classes={{\n                root: open\n                  ? classes.menuButtonIconOpen\n                  : classes.menuButtonIconClosed,\n              }}\n            />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {translate(\"softwareName\")}\n          </Typography>\n          <Link to=\"/xero\" style={xeroStyle}>\n            <IconButton color=\"inherit\">\n              <Dns />\n            </IconButton>\n          </Link>\n          <IconButton\n            aria-label=\"Settings\"\n            aria-controls=\"long-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={handleSettingsClick}\n          >\n            <Settings />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={settingsMenu}\n            keepMounted\n            open={Boolean(settingsMenu)}\n            onClose={handleSettingsClose}\n          >\n            <MenuItemLink\n              to=\"/Product\"\n              primaryText={translate(\"menu.item.product\")}\n              leftIcon={<AllInboxIcon />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/Supplier\"\n              primaryText={translate(\"menu.item.supplier\")}\n              leftIcon={<LocationCity />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/Customer\"\n              primaryText={translate(\"menu.item.customer\")}\n              leftIcon={<Storefront />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/Warehouse\"\n              primaryText={translate(\"menu.item.warehouse\")}\n              leftIcon={<HouseIcon />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/ProductCategory\"\n              primaryText={translate(\"menu.item.productCategory\")}\n              leftIcon={<GroupWorkIcon />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/CustomerGroup\"\n              primaryText={translate(\"menu.item.customerGroup\")}\n              leftIcon={<GroupIcon />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/CustomerShop\"\n              primaryText={translate(\"menu.item.customerShop\")}\n              leftIcon={<Store />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/User\"\n              primaryText={translate(\"menu.item.user\")}\n              leftIcon={<GroupIcon />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/UserGroup\"\n              primaryText={translate(\"menu.item.userGroup\")}\n              leftIcon={<Business />}\n              onClick={handleSettingsClose}\n            />\n          </Menu>\n          <IconButton\n            aria-label=\"Warren Chan\"\n            aria-controls=\"long-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={handleUserClick}\n          >\n            <AccountCircle />\n            &nbsp;\n            <Typography>{localStorage.getItem(\"token\")}</Typography>\n          </IconButton>\n          <Menu\n            id=\"user-menu\"\n            anchorEl={uMenu}\n            keepMounted\n            open={Boolean(uMenu)}\n            onClose={handleUserClose}\n          >\n            {logout}\n          </Menu>\n        </Toolbar>\n      </MuiAppBar>\n    </HideOnScroll>\n  );\n};\n\nexport default MyAppBar;\n","import React from 'react';\nimport { Sidebar as AdminSidebar } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  drawerPaper: {\n    marginTop: 0,\n    transition: theme.transitions.create('height', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  }\n}));\n\nconst Sidebar = props => {\n  const classes = useStyles();\n  return (\n    <AdminSidebar {...props} classes={classes} size={200} />\n  );\n}\n\nexport default Sidebar;\n","// in src/Menu.js\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport pluralize from 'pluralize';\nimport { withRouter } from 'react-router-dom';\nimport { Workflow, WorkflowItem } from 'supplier-ms-react-workflow';\n\nconst Menu = ({\n                location,\n                history,\n              }) => {\n  const open = useSelector(state => state.admin.ui.sidebarOpen);\n  const paths = location.pathname.split('/');\n  const isActive = (type) => paths.length > 1 && pluralize.singular(paths[1]) === type;\n  const handleClick = (type) => () => history.push(`/${type}`);\n  if (!open) return null;\n  return (\n    <Workflow open>\n      <WorkflowItem.Supplier onClick={handleClick('Supplier')} active={isActive('Supplier')} />\n      <WorkflowItem.PurchaseOrder onClick={handleClick('PurchaseOrder')} active={isActive('PurchaseOrder')} />\n      <WorkflowItem.Shipping onClick={handleClick('Shipping')} active={isActive('Shipping')} />\n      <WorkflowItem.Inventory onClick={handleClick('Inventory')} active={isActive('Inventory')} />\n      <WorkflowItem.SalesOrder onClick={handleClick('SalesOrder')} active={isActive('SalesOrder')} />\n      <WorkflowItem.Invoice onClick={handleClick('Invoice')} active={isActive('Invoice')} />\n      <WorkflowItem.DeliveryNote onClick={handleClick('DeliveryNote')} active={isActive('DeliveryNote')} />\n      <WorkflowItem.Customer onClick={handleClick('Customer')} active={isActive('Customer')} />\n      <WorkflowItem.ReceivePayment onClick={handleClick('ReceivePayment')} active={isActive('ReceivePayment')} />\n      <WorkflowItem.Report onClick={handleClick('Report')} active={isActive('Report')} />\n    </Workflow>\n  );\n};\n\nexport default withRouter(Menu);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux'\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport { Breadcrumbs as MuiBreadcrumbs } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  breadcrumb: {\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4),\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst Breadcrumb = () => {\n  const breadcrumbs = useSelector(state => state.breadcrumb);\n  const classes = useStyles();\n\n  const links = [...breadcrumbs];\n  let last = links.pop();\n\n  const linkStyle = {\n    textDecoration: 'none',\n    color: '#666',\n    hover: {\n      textDecoration: 'underline',\n    },\n  };\n\n  return (\n    <MuiBreadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumb}>\n      {links.map(bc => (\n        <Link key={`linkTo${bc.url}`} to={bc.url} style={linkStyle}>\n          {bc.label}\n        </Link>\n      ))}\n      {last && (\n        <Typography color=\"textPrimary\">{last.label}</Typography>\n      )}\n    </MuiBreadcrumbs>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { useEffect, useState } from 'react';\nimport pluralize from 'pluralize';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { WorkflowColors } from 'supplier-ms-react-workflow';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { Notification, setSidebarVisibility } from 'react-admin';\nimport AppBar from './AppBar';\nimport Sidebar from './Sidebar';\nimport Workflow from './Workflow';\nimport Breadcrumb from '../../components/Breadcrumb';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 1,\n    minHeight: '100vh',\n    backgroundColor: theme.palette.background.default,\n    position: 'relative',\n    minWidth: 'fit-content',\n    width: '100%',\n  },\n  appFrame: {\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up('xs')]: {\n      marginTop: theme.spacing(6),\n    },\n    [theme.breakpoints.down('xs')]: {\n      marginTop: theme.spacing(7),\n    },\n  },\n  contentWithSidebar: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    flexBasis: 0,\n    padding: theme.spacing(3),\n    paddingTop: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      padding: 0,\n    },\n  },\n}));\n\nconst Layout = ({\n  children,\n  dashboard,\n  logout,\n  title,\n  theme,\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const open = useSelector(state => state.admin.ui.sidebarOpen);\n  // const location = useLocation();\n  // const [theme, setTheme] = useState(defaultTheme);\n  // useEffect(() => {\n  //   const paths = location.pathname.split('/');\n  //   const mainColor = (paths.length > 1 && WorkflowColors[pluralize.singular(paths[1])]) || '#f16112';\n  //   const newTheme = createMuiTheme({\n  //     palette: {\n  //       primary: {\n  //         main: mainColor,\n  //       },\n  //     },\n  //     sidebar: {\n  //       width: '100%', // The default value is 240\n  //       closedWidth: '100%', // The default value is 55\n  //     },\n  //   });\n  //\n  //   setTheme(newTheme);\n  // }, [location, setTheme]);\n\n  useEffect(() => {\n    dispatch(setSidebarVisibility(true));\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          <AppBar open={open} logout={logout} />\n          <main className={classes.contentWithSidebar}>\n            <Workflow logout={logout} hasDashboard={!!dashboard} />\n            <Breadcrumb />\n            <div className={classes.content}>\n              {children}\n            </div>\n          </main>\n          <Notification />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  dashboard: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n  ]),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Layout;\n","/**\n *\n * Asynchronously loads the component for MonthlyReportPage\n *\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","/**\n *\n * Asynchronously loads the component for QuarterReportPage\n *\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","/**\n *\n * Asynchronously loads the component for AnnualReportPage\n *\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","import React from 'react';\nimport { useTranslate, Loading } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\n\nconst GET_ITEM_LIST = gql`\n  query inventoryItems($where: InventoryItemWhereInput!) {\n    inventoryItems(where: $where) {\n      id\n      warehouse {\n        id\n        code\n      }\n      label\n      expiryDay\n      name\n      brand\n      sku\n      image\n      price\n      unit\n    }\n  }\n`;\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function ItemListForm({ id, labelFrom, onChange }) {\n  const classes = useStyles();\n  const translate = useTranslate();\n  const { loading, data } = useQuery(GET_ITEM_LIST, { variables: { where: { warehouse: { id }, label_contains: '' } } });\n\n  if (loading) return <Loading loadingPrimary=\"menu.item.product\" />;\n\n  const { inventoryItems } = data;\n\n  return (\n    <Box component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>{translate('product.label')}</TableCell>\n            <TableCell align=\"right\">{translate('purchaseOrder.productCode')}</TableCell>\n            <TableCell align=\"right\">{translate('purchaseOrder.productName')}</TableCell>\n            <TableCell align=\"right\">{translate('product.expiryDate')}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {inventoryItems.map(row => (\n            <TableRow key={row.code}>\n              <TableCell align=\"right\">{row.label}</TableCell>\n              <TableCell align=\"right\">{row.code}</TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.expiryDate}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n}","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_WAREHOUSES = gql`\n  query warehouses($where: WarehouseWhereInput!) {\n    warehouses(where: $where) {\n      id\n      name\n      type\n    }\n  }\n`;\n\nexport default function WarehouseAutocomplete({ onChange, defaultValue, className, where = { where: { type: \"NORMAL\" } } }) {\n  const translate = useTranslate();\n  const { loading: fetching, data } = useQuery(GET_WAREHOUSES, {\n    variables: where,\n  });\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = fetching || (open && options.length === 0);\n\n  React.useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      const { warehouses } = data;\n      setOptions(warehouses.map((obj) => ({ id: obj.id, name: obj.name })));\n    }\n  }, [loading, data]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = (evt, value) => {\n    const { warehouses } = data;\n    onChange(warehouses.find((warehouse) => warehouse.id === value.id));\n  };\n\n  return (\n    <Autocomplete\n      className={className}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionLabel={(option) => option.name}\n      options={options}\n      loading={loading}\n      value={defaultValue && { id: defaultValue.id, name: defaultValue.name }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={translate(\"product.warehouse\")}\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport { useTranslate } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport ItemListForm from './ItemListForm';\nimport Card from '@material-ui/core/Card';\nimport { Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport House from '@material-ui/icons/House';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport WarehouseAutocomplete from '../../components/Inputs/WarehouseAutocomplete';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n}));\n\nconst StepperConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nexport default function StockTransfer() {\n  const translate = useTranslate();\n  const classes = useStyles();\n  const [warehouseId, setWarehouseId] = useState();\n\n  const handleSave = () => console.log;\n  return (\n    <React.Fragment>\n      <Box display=\"flex\">\n        <Box flex={1} mr=\"0.5em\">\n          <Typography variant=\"h5\">{translate('inventory.stockTransfer')}</Typography>\n          <Card className={classes.card}>\n            <Stepper alternativeLabel connector={<StepperConnector />}>\n              <Step key={translate('inventory.warehouse')}>\n                <StepLabel StepIconComponent={House}>{translate('inventory.warehouse')} {translate('common.to')}</StepLabel>\n              </Step>\n            </Stepper>\n          </Card>\n        </Box>\n      </Box>\n      <Card className={classes.card}>\n        <Box display=\"flex\">\n          <Box flex={1} mr=\"0.5em\">\n            <WarehouseAutocomplete onChange={setWarehouseId} label={translate('inventory.warehouse') + ' ' + translate('common.from')} />\n          </Box>\n          <Box flex={1} mr=\"0.5em\">\n            <WarehouseAutocomplete onChange={setWarehouseId} label={translate('inventory.warehouse') + ' ' + translate('common.to')} />\n          </Box>\n        </Box>\n      </Card>\n      {warehouseId && (\n        <React.Fragment>\n          <Box display=\"flex\">\n            <Box flex={1} mr=\"0.5em\">\n              <Card className={classes.card}>\n                <Typography variant=\"h6\">{translate('inventory.productItem')}</Typography>\n                <ItemListForm id={warehouseId} />\n              </Card>\n            </Box>\n          </Box>\n          <Card className={classes.card}>\n            <Box display=\"flex\">\n              <Box flex={1} mr=\"0.5em\" style={{ textAlign: 'right' }}>\n                <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>{translate('common.transfer')}</Button>\n              </Box>\n            </Box>\n          </Card>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { useTranslate, Loading } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\nconst GET_ITEM_LIST = gql`\n  query inventoryItems($where: InventoryItemWhereInput!) {\n    inventoryItems(where: $where) {\n      id\n      warehouse {\n        id\n        code\n      }\n      label\n      expiryDay\n      name\n      brand\n      sku\n      image\n      price\n      unit\n    }\n  }\n`;\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function ItemListForm({ id, labelFrom, onChange }) {\n  const classes = useStyles();\n  const translate = useTranslate();\n  const { loading, data } = useQuery(GET_ITEM_LIST, { variables: { where: { warehouse: { id }, label_contains: '' } } });\n\n  if (loading) return <Loading loadingPrimary=\"menu.item.product\" />;\n\n  const { inventoryItems } = data;\n  const itemGroups = Object.values(inventoryItems.reduce((results, item) => {\n    const { name, brand, sku, expiryDay, price, unit } = item;\n    if (!results[sku]) results[sku] = { name, brand, sku, expiryDay, price, unit, quantity: 0 };\n    results[sku].quantity++;\n    return results;\n  }, {}));\n\n  let cur = parseInt(labelFrom, 10);\n  itemGroups.forEach(itemGroup => {\n    itemGroup.labelFrom = cur;\n    itemGroup.labelTo = cur + itemGroup.quantity;\n    cur = cur + itemGroup.quantity + 1;\n  });\n\n  // const handleChange = () => {\n  //   onChange();\n  // };\n\n  return (\n    <Box component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>{translate('purchaseOrder.productCode')}</TableCell>\n            <TableCell align=\"right\">{translate('purchaseOrder.productName')}</TableCell>\n            <TableCell align=\"right\">{translate('product.expiryDate')}</TableCell>\n            <TableCell align=\"right\">{translate('product.quantity')}</TableCell>\n            <TableCell align=\"right\">{translate('shipping.labelFrom')}</TableCell>\n            <TableCell align=\"right\">{translate('shipping.labelTo')}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {itemGroups.map(row => (\n            <TableRow key={row.code}>\n              <TableCell align=\"right\">{row.code}</TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.expiryDate}</TableCell>\n              <TableCell align=\"right\">{row.quantity}</TableCell>\n              <TableCell align=\"right\"><TextField label=\"Filled\" variant=\"filled\" defaultValue={row.labelFrom} /></TableCell>\n              <TableCell align=\"right\"><TextField label=\"Filled\" variant=\"filled\" defaultValue={row.labelTo} /></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n}","import React, { useState } from 'react';\nimport { useTranslate } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport ItemListForm from './ItemListForm';\nimport Card from '@material-ui/core/Card';\nimport { Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport House from '@material-ui/icons/House';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport WarehouseAutocomplete from '../../components/Inputs/WarehouseAutocomplete';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n}));\n\nconst StepperConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nexport default function StockDispose() {\n  const translate = useTranslate();\n  const classes = useStyles();\n  const [warehouseId, setWarehouseId] = useState();\n\n  const handleSave = () => console.log;\n  return (\n    <React.Fragment>\n      <Box display=\"flex\">\n        <Box flex={1} mr=\"0.5em\">\n          <Typography variant=\"h5\">{translate('inventory.stockDispose')}</Typography>\n          <Card className={classes.card}>\n            <Stepper alternativeLabel connector={<StepperConnector />}>\n              <Step key={translate('inventory.warehouse')}>\n                <StepLabel StepIconComponent={House}>{translate('inventory.warehouse')} {translate('common.from')}</StepLabel>\n              </Step>\n              <Step key={translate('inventory.trash')}>\n                <StepLabel StepIconComponent={DeleteForever}>{translate('inventory.trash')}</StepLabel>\n              </Step>\n            </Stepper>\n          </Card>\n        </Box>\n      </Box>\n      <Card className={classes.card}>\n        <Box display=\"flex\">\n          <Box flex={1} mr=\"0.5em\">\n            <WarehouseAutocomplete onChange={setWarehouseId} label={translate('inventory.warehouse') + ' ' + translate('common.from')} />\n          </Box>\n        </Box>\n      </Card>\n      {warehouseId && (\n        <React.Fragment>\n          <Box display=\"flex\">\n            <Box flex={1} mr=\"0.5em\">\n              <Card className={classes.card}>\n                <Typography variant=\"h6\">{translate('inventory.productItem')}</Typography>\n                <ItemListForm id={warehouseId} />\n              </Card>\n            </Box>\n          </Box>\n          <Card className={classes.card}>\n            <Box display=\"flex\">\n              <Box flex={1} mr=\"0.5em\" style={{ textAlign: 'right' }}>\n                <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>{translate('common.transfer')}</Button>\n              </Box>\n            </Box>\n          </Card>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { useTranslate, Loading } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\nconst GET_ITEM_LIST = gql`\n  query inventoryItems($where: InventoryItemWhereInput!) {\n    inventoryItems(where: $where) {\n      id\n      warehouse {\n        id\n        code\n      }\n      label\n      expiryDay\n      name\n      brand\n      sku\n      image\n      price\n      unit\n    }\n  }\n`;\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function ItemListForm({ id, labelFrom, onChange }) {\n  const classes = useStyles();\n  const translate = useTranslate();\n  const { loading, data } = useQuery(GET_ITEM_LIST, { variables: { where: { warehouse: { id }, label_contains: '' } } });\n\n  if (loading) return <Loading loadingPrimary=\"menu.item.product\" />;\n\n  const { inventoryItems } = data;\n  const itemGroups = Object.values(inventoryItems.reduce((results, item) => {\n    const { name, brand, sku, expiryDay, price, unit } = item;\n    if (!results[sku]) results[sku] = { name, brand, sku, expiryDay, price, unit, quantity: 0 };\n    results[sku].quantity++;\n    return results;\n  }, {}));\n\n  let cur = parseInt(labelFrom, 10);\n  itemGroups.forEach(itemGroup => {\n    itemGroup.labelFrom = cur;\n    itemGroup.labelTo = cur + itemGroup.quantity;\n    cur = cur + itemGroup.quantity + 1;\n  });\n\n  return (\n    <Box component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>{translate('purchaseOrder.productCode')}</TableCell>\n            <TableCell align=\"right\">{translate('purchaseOrder.productName')}</TableCell>\n            <TableCell align=\"right\">{translate('product.expiryDate')}</TableCell>\n            <TableCell align=\"right\">{translate('product.quantity')}</TableCell>\n            <TableCell align=\"right\">{translate('shipping.labelFrom')}</TableCell>\n            <TableCell align=\"right\">{translate('shipping.labelTo')}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {itemGroups.map(row => (\n            <TableRow key={row.code}>\n              <TableCell align=\"right\">{row.code}</TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.expiryDate}</TableCell>\n              <TableCell align=\"right\">{row.quantity}</TableCell>\n              <TableCell align=\"right\"><TextField label=\"Filled\" variant=\"filled\" defaultValue={row.labelFrom} /></TableCell>\n              <TableCell align=\"right\"><TextField label=\"Filled\" variant=\"filled\" defaultValue={row.labelTo} /></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n}","import React, { useState } from 'react';\nimport { useTranslate } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport ItemListForm from './ItemListForm';\nimport Card from '@material-ui/core/Card';\nimport { Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport House from '@material-ui/icons/House';\nimport Label from '@material-ui/icons/Label';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport WarehouseAutocomplete from '../../components/Inputs/WarehouseAutocomplete';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n}));\n\nconst StepperConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nexport default function Labelling() {\n  const translate = useTranslate();\n  const classes = useStyles();\n  const [warehouseId, setWarehouseId] = useState();\n  const [labelFrom, setLabelFrom] = useState();\n\n  const handleSave = () => console.log;\n  return (\n    <React.Fragment>\n      <Box display=\"flex\">\n        <Box flex={1} mr=\"0.5em\">\n          <Typography variant=\"h5\">{translate('shipping.labelling')}</Typography>\n          <Card className={classes.card}>\n            <Stepper alternativeLabel connector={<StepperConnector />}>\n              <Step key={translate('shipping.shipment')}>\n                <StepLabel StepIconComponent={Label}>{translate('shipping.label')}</StepLabel>\n              </Step>\n              <Step key={translate('shipping.warehouse')}>\n                <StepLabel StepIconComponent={House}>{translate('shipping.warehouse')}</StepLabel>\n              </Step>\n            </Stepper>\n          </Card>\n        </Box>\n      </Box>\n      <Card className={classes.card}>\n        <Box display=\"flex\">\n          <Box flex={1} mr=\"0.5em\">\n            <WarehouseAutocomplete onChange={setWarehouseId} />\n          </Box>\n          <Box flex={1} mr=\"0.5em\">\n            <TextField label={translate('shipping.labelFrom')} variant=\"filled\" onChange={setLabelFrom} fullWidth />\n          </Box>\n        </Box>\n      </Card>\n      {warehouseId && (\n        <React.Fragment>\n          <Box display=\"flex\">\n            <Box flex={1} mr=\"0.5em\">\n              <Card className={classes.card}>\n                <Typography variant=\"h6\">{translate('shipping.unlabelledItem')}</Typography>\n                <ItemListForm id={warehouseId} labelFrom={labelFrom} />\n              </Card>\n            </Box>\n          </Box>\n          <Card className={classes.card}>\n            <Box display=\"flex\">\n              <Box flex={1} mr=\"0.5em\" style={{ textAlign: 'right' }}>\n                <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>{translate('common.assign')} {translate('shipping.label')}</Button>\n              </Box>\n            </Box>\n          </Card>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nconst BilingualField = ({ source, record = {}, label }) => {\n  return (\n    <Typography variant=\"body1\">\n      {record[`${source}Chi`]}<br/>\n      {record[`${source}En`]}\n    </Typography>\n  );\n}\n\nBilingualField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nexport default BilingualField;","import React from 'react';\nimport { NumberField } from 'react-admin';\nimport dayjs from 'dayjs';\n\nexport function handleExpectedSales({ monthlySalesOnAverage }, expectedSalesDate) {\n  const monthDiff = dayjs(expectedSalesDate).diff(dayjs(), 'month');\n  const expectedSales = monthlySalesOnAverage * (monthDiff) * 1.05\n  if (Math.floor(expectedSales) < 0) {\n    return 0\n  } else {\n    return Math.floor(expectedSales).toFixed(1);\n  }\n}\n\nexport default ({ label, record, options }) => {\n  const value = handleExpectedSales(record, options.expectedSalesDate);\n\n  return (\n    <NumberField label={label} record={{ value }} source=\"value\" />\n  )\n}\n","import React from 'react';\nimport { NumberField } from 'react-admin';\nimport dayjs from 'dayjs';\n\nexport default ({ label, options }) => {\n  const value = dayjs(options.expectedSalesDate).diff(dayjs(), 'month');\n\n  return (\n    <NumberField label={label} record={{ value }} source=\"value\" />\n  )\n}\n","import isArray from 'lodash/isArray';\n\n/**\n * constants\n */\n\nexport const SET_BREADCRUMBS = 'SET_BREADCRUMBS';\nexport const ADD_BREADCRUMBS = 'ADD_BREADCRUMBS';\n\n/**\n * action creators\n */\n\nexport function setBreadcrumbs(breadcrumbs) {\n  return {\n    type: SET_BREADCRUMBS,\n    payload: breadcrumbs,\n  }\n}\n\nexport function addBreadcrumbs(breadcrumbs) {\n  return {\n    type: ADD_BREADCRUMBS,\n    payload: breadcrumbs,\n  }\n}\n\n/**\n * initialState\n */\n\nexport const initialState = [\n  { url: '/', label: 'Dashboard' },\n];\n\n/**\n * reducer\n */\n\nexport default (previousState = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_BREADCRUMBS:\n      return [...initialState, ...payload];\n    case ADD_BREADCRUMBS:\n      if (previousState[previousState.length - 1].url === payload.url) {\n        return previousState;\n      }\n      return isArray(payload) ? [...previousState, ...payload] : [...previousState, payload];\n    default:\n      return previousState;\n  }\n}","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { Search } from \"@material-ui/icons\";\nimport jsonExport from \"jsonexport/dist\";\nimport { Edit } from \"@material-ui/icons\";\nimport Button from \"@material-ui/core/Button\";\nimport dayjs from \"dayjs\";\nimport {\n  NumberField,\n  Datagrid,\n  EditButton,\n  FunctionField,\n  List,\n  TextField,\n  downloadCSV,\n  ReferenceField,\n  Filter,\n  TextInput,\n  usePermissions,\n} from \"react-admin\";\nimport BilingualField from \"../../components/BilingualField\";\nimport ExpectedQuantityField, {\n  handleExpectedSales,\n} from \"./ExpectedQuantityField\";\nimport MonthDiffField from \"./MonthDiffField\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst breadcrumbBase = { url: \"/Inventory\", label: \"Inventory\" };\nfunction Inventory({ staticContext, ...props }) {\n  const { permissions } = usePermissions();\n  const [expectedSalesDate, setExpectedSalesDate] = useState(\n    dayjs().add(4, \"month\")\n  );\n  const history = useHistory();\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  const exporter = (products) => {\n    const postsForExport = products.map((product) => {\n      const {\n        code,\n        nameChi,\n        quantity,\n        monthlySalesOnAverage,\n        incomingQuantity,\n      } = product; // omit backlinks and author\n      return {\n        code,\n        name: nameChi,\n        stock: quantity,\n        avg: monthlySalesOnAverage,\n        incoming: incomingQuantity,\n        nextShipment: dayjs(expectedSalesDate).diff(dayjs(), \"month\"),\n        expectedSales: handleExpectedSales(product, expectedSalesDate),\n      };\n    });\n    jsonExport(\n      postsForExport,\n      {\n        headers: [\n          \"code\",\n          \"name\",\n          \"stock\",\n          \"avg\",\n          \"incoming\",\n          \"nextShipment\",\n          \"expectedSales\",\n        ], // order fields in the export\n      },\n      (err, csv) => {\n        downloadCSV(csv, \"posts\"); // download as 'posts.csv` file\n      }\n    );\n  };\n\n  const toEdit = () => (id) => {\n    history.push(`/Inventory/${id}/editStock`);\n  };\n\n  const SearchFilter = (props) => (\n    <Filter {...props}>\n      <TextInput\n        label=\"Search Product no.\"\n        source=\"code_starts_with\"\n        alwaysOn\n      ></TextInput>\n    </Filter>\n  );\n  const StatusEditButton = ({ record, props, permissions }) =>\n    permissions === \"admin\" ? (\n      <EditButton basePath={`/Inventory/editStock`} record={record} />\n    ) : null;\n\n  return (\n    <React.Fragment>\n      <List\n        resource=\"Product\"\n        hasCreate={false}\n        hasEdit={false}\n        hasShow={false}\n        hasList={true}\n        basePath=\"/Inventory\"\n        exporter={exporter}\n        {...props}\n        filters={<SearchFilter />}\n      >\n        <Datagrid>\n          <ReferenceField\n            label=\"Product No.\"\n            source=\"id\"\n            reference=\"Product\"\n            link={(product, reference) => `/${reference}/${product.id}/show`}\n          >\n            <TextField source=\"code\" />\n          </ReferenceField>\n          <ReferenceField\n            label=\"name\"\n            source=\"id\"\n            reference=\"Product\"\n            link={(product, reference) => `/${reference}/${product.id}/show`}\n          >\n            <BilingualField source=\"name\" />\n          </ReferenceField>\n          <NumberField label=\"Stock\" source=\"quantity\" sortable={false} />\n          <FunctionField\n            render={(record) => (\n              <StatusEditButton\n                record={record}\n                props={props}\n                permissions={permissions}\n              />\n            )}\n            sortable={false}\n          />\n          <NumberField source=\"monthlySalesOnAverage\" sortable={false} />\n          <NumberField source=\"outgoingQuantity\" sortable={false} />\n          <NumberField source=\"incomingQuantity\" sortable={false} />\n          <MonthDiffField\n            label=\"Months till Next shipment\"\n            options={{ expectedSalesDate }}\n            sortable={false}\n          />\n          <ExpectedQuantityField\n            label=\"Expected Sales till next shipment\"\n            options={{ expectedSalesDate }}\n            sortable={false}\n          />\n        </Datagrid>\n      </List>\n      <Grid container justify=\"flex-end\" alignItems=\"center\">\n        <Typography variant=\"button\">\n          Expected next shipment month and default after 4 month :{\" \"}\n        </Typography>\n        <DatePicker\n          style={{ width: 200, margin: 10 }}\n          inputVariant=\"filled\"\n          value={expectedSalesDate}\n          openTo=\"year\"\n          views={[\"year\", \"month\"]}\n          onChange={setExpectedSalesDate}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Inventory;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_PURCHASE_ORDER = gql`\n  query purchaseOrders(\n    $where: PurchaseOrderWhereInput\n    $orderBy: PurchaseOrderOrderByInput!\n  ) {\n    purchaseOrders(where: $where, orderBy: $orderBy) {\n      id\n      code\n      supplier {\n        id\n        name\n      }\n      products {\n        id\n        quantity\n        price\n        totalPrice\n        product {\n          id\n          code\n          nameEn\n          nameChi\n        }\n      }\n      expectedDeliveryAt\n      totalPrice\n      state\n    }\n  }\n`;\n\nexport default function PurchaseOrderAutocomplete({\n  onChange,\n  defaultValue,\n  className,\n}) {\n  const translate = useTranslate();\n  const { loading: fetching, data } = useQuery(GET_PURCHASE_ORDER, {\n    variables: {\n      where: { state_in: [\"CONFIRMED\", \"APPROVED\"] },\n      orderBy: \"updatedAt_DESC\",\n    },\n  });\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = fetching || (open && options.length === 0);\n\n  React.useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      const { purchaseOrders } = data;\n      setOptions(purchaseOrders.map((obj) => ({ id: obj.id, name: obj.code })));\n    }\n  }, [loading, data]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = (evt, value) => {\n    const { purchaseOrders } = data;\n    onChange(purchaseOrders.find((po) => po.id === value.id));\n  };\n\n  return (\n    <Autocomplete\n      className={className}\n      id=\"purchase-order-autocomplete\"\n      style={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionLabel={(option) => option.name}\n      options={options}\n      loading={loading}\n      value={defaultValue && { id: defaultValue.id, name: defaultValue.code }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={translate(\"purchaseOrder.purchaseOrder\")}\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","const numberAfter = (invoiceNumber, increment = 1) => {\n  if (!invoiceNumber) throw new Error('invoiceNumber cannot be empty');\n  const array = invoiceNumber.split(/[_/:\\-;\\\\]+/);\n  const lastSegment = array.pop();\n  const priorSegment = invoiceNumber.substr(0, invoiceNumber.indexOf(lastSegment));\n  const nextNumber = [...Array(increment)].reduce((result) => alphaNumericIncrementer(result), lastSegment);\n  return priorSegment + nextNumber;\n}\n\nconst alphaNumericIncrementer = (str) => {\n  if (!str || str.length === 0) {\n    return '';\n  }\n\n\n  let invNum = str.replace(/([^a-z0-9]+)/gi, '');\n  invNum = invNum.toUpperCase();\n  let index = invNum.length - 1;\n\n  while (index >= 0) {\n    if (invNum.substr(index, 1) === '9') {\n      invNum = invNum.substr(0, index) + '0' + invNum.substr(index + 1);\n    } else if (invNum.substr(index, 1) === 'Z') {\n      invNum = invNum.substr(0, index) + 'A' + invNum.substr(index + 1);\n    } else {\n      const char = String.fromCharCode(invNum.charCodeAt(index) + 1);\n      invNum = invNum.substr(0, index) + char + invNum.substr(index + 1);\n      index = 0;\n    }\n    index--;\n  }\n  return invNum;\n}\n\nexport default {\n  numberAfter\n};","import React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { SimpleForm, useTranslate, FormDataConsumer, useNotify, useGetOne, Loading } from \"react-admin\";\nimport { TextField, Grid, Button, makeStyles } from \"@material-ui/core\";\nimport { Save } from \"@material-ui/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport WarehouseAutocomplete from \"../../components/Inputs/WarehouseAutocomplete\";\nimport PurchaseOrderAutocomplete from \"../../components/Inputs/PurchaseOrderAutocomplete\";\nimport sequentialNumber from \"../../utils/sequentialNumber\";\nimport gql from \"graphql-tag\";\n\nconst useStyle = makeStyles((theme) => ({\n  autocomplete: {\n    width: 500,\n  },\n  poAutocomplete: {\n    width: 700,\n  },\n}));\n\nexport default function AddStock({ staticContext, ...props }) {\n  const productId = props.match.params.productId;\n  const initialValues = {\n    stock: 0,\n    purchaseOrder: null,\n    warehouse: null,\n    productId: productId,\n    labelFrom: null,\n    labelTo: null,\n    expiryDate: \"-\",\n    cost: 0,\n  };\n  const [formData, setFormData] = useState(initialValues);\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const notify = useNotify();\n  const redirect = () => \"/Inventory\";\n  const INWAREHOUSE = gql`\n    mutation inWarehouse($data: [InventoryItemCreateInput!]!) {\n      inWarehouse(data: $data) {\n        id\n      }\n    }\n  `;\n  const [inWarehouse] = useMutation(INWAREHOUSE);\n  const Product = () => {\n    const { data, loading, error } = useGetOne(\"Product\", productId);\n    if (loading) {\n      return <Loading />;\n    }\n    if (error) {\n      return <p>ERROR</p>;\n    }\n    return (\n      <div>\n        Product :<div>{data.nameChi}</div>\n      </div>\n    );\n  };\n  const handleOnPurchaseOrderChange = (purchaseOrder) => {\n    setFormData({\n      ...formData,\n      purchaseOrder,\n    });\n  };\n  const handleOnWarehouseChange = (warehouse) => {\n    setFormData({\n      ...formData,\n      warehouse,\n    });\n  };\n  const handleOnExpiryDateChange = (e) => {\n    const expiryDate = e.target.value;\n    setFormData({\n      ...formData,\n      expiryDate,\n    });\n  };\n  const handleOnLabelFromChange = (e) => {\n    const labelFrom = e.target.value.toUpperCase();\n    var labelTo = null;\n    if (labelFrom && labelFrom.length > 0) {\n      labelTo = sequentialNumber.numberAfter(labelFrom, formData.stock);\n    }\n    setFormData({\n      ...formData,\n      labelFrom,\n      labelTo,\n    });\n  };\n  const handleOnLabelToChange = (e) => {\n    const labelTo = e.target.value.toUpperCase();\n    setFormData({\n      ...formData,\n      labelTo,\n    });\n  };\n\n  const handleOnStockChange = (e) => {\n    const stock = e.target.value;\n    setFormData({\n      ...formData,\n      stock,\n    });\n  };\n  const handleOnCostChange = (e) => {\n    const cost = e.target.value;\n    setFormData({\n      ...formData,\n      cost,\n    });\n  };\n  const handleSave = () => {\n    console.log(formData);\n    const inventoryItemlist = [];\n    var currentLabel = formData.labelFrom;\n    for (let index = 0; index < formData.stock; index++) {\n      const item = {\n        productId: formData.productId,\n        warehouse: { connect: { id: formData.warehouse.id } },\n        purchaseOrderId: formData.purchaseOrder.id,\n        expiryDate: formData.expiryDate,\n        label: currentLabel,\n      };\n      currentLabel = sequentialNumber.numberAfter(currentLabel);\n      inventoryItemlist.push(item);\n    }\n    inventoryItemlist.map((x) => console.log(x));\n    inWarehouse({\n      variables: {\n        data: [...inventoryItemlist],\n      },\n    })\n      .then((value) => {\n        console.log(\"res\", value);\n        notify(`Save Success.`);\n      })\n      .catch((error) => {\n        notify(`Error: ${error.message}`, \"warning\");\n      });\n  };\n  const classes = useStyle();\n  return (\n    <React.Fragment>\n      <SimpleForm\n        toolbar={\n          <Button color=\"primary\" size=\"small\" onClick={handleSave} style={{ marginTop: 20 }}>\n            <Save />\n            &nbsp;Save\n          </Button>\n        }\n        redirect={redirect}\n      >\n        <Grid container style={{ height: 500 }} alignContent=\"space-around\" alignItems=\"flex-start\">\n          <Product />\n          <PurchaseOrderAutocomplete onChange={handleOnPurchaseOrderChange} defaultValue={formData.purchaseOrder} className={classes.poAutocomplete} />\n          <WarehouseAutocomplete defaultValue={formData.warehouse} onChange={handleOnWarehouseChange} className={classes.autocomplete} />\n          <TextField\n            label={`ExpiryDate`}\n            type=\"date\"\n            value={formData.expiryDate}\n            variant=\"filled\"\n            onChange={handleOnExpiryDateChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            label={`Stock`}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={formData.stock}\n            onChange={handleOnStockChange}\n          />\n          <TextField\n            label={`${translate(\"product.label\")} ${translate(\"common.from\")}`}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={formData.labelFrom}\n            onChange={handleOnLabelFromChange}\n          />\n          <TextField\n            label={`${translate(\"product.label\")} ${translate(\"common.to\")}`}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={formData.labelTo}\n            onChange={handleOnLabelToChange}\n          />\n          <TextField\n            label={`Cost`}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={formData.cost}\n            onChange={handleOnCostChange}\n          />\n        </Grid>\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/Inventory\", label: \"Inventory\" },\n                { url: `/Inventory/editStock/${productId}`, label: `Edit Stock` },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Dns from \"@material-ui/icons/Dns\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst CREATE_REDIRECT = gql`\n  mutation CreateRedirect {\n    createRedirect(data: {}) {\n      id\n      redirectUrl\n    }\n  }\n`;\n\nconst CHECKING = gql`\n  query Check {\n    checking\n  }\n`;\n\nconst DISCONNECT = gql`\n  mutation Disconnect {\n    disconnect\n  }\n`;\nfunction Xero() {\n  return (\n    <div>\n      <h1>ERP-system</h1>\n    </div>\n  );\n}\n\nexport default Xero;\n","import React, { useState, useEffect } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Dns from \"@material-ui/icons/Dns\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst CREATE_AUTH = gql`\n  mutation CreateAuth($data: AuthCreateInput!) {\n    createAuth(data: $data) {\n      id\n    }\n  }\n`;\n\nfunction XeroCallback({ match, location }) {\n  return <div>Loading...</div>;\n}\n\nexport default XeroCallback;\n","import React, { useState } from \"react\";\nimport { useTranslate, useNotify } from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport WarehouseAutocomplete from \"../../components/Inputs/WarehouseAutocomplete\";\nimport { Paper, Grid, TextField } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { useHistory } from \"react-router-dom\";\n\nconst QUERY_ITEM = gql`\n  query getItem($where: InventoryItemWhereUniqueInput!) {\n    inventoryItem(where: $where) {\n      label\n      id\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nconst DELETE_DELIVERY_ITEM = gql`\n  mutation deleteItem($where: DeliveryItemWhereUniqueInput!) {\n    deleteDeliveryItem(where: $where) {\n      id\n    }\n  }\n`;\n\nconst TRANSFER = gql`\n  mutation transfer($data: TransferWarehouse!) {\n    transferWarehouse(data: $data) {\n      id\n    }\n  }\n`;\n\nexport default function DeliveryItemDelete(props) {\n  const translate = useTranslate();\n  // const classes = useStyles();\n  const notify = useNotify();\n  const [warehouseId, setWarehouseId] = useState();\n  const [deleteDeliveryItem] = useMutation(DELETE_DELIVERY_ITEM);\n  const [transfer] = useMutation(TRANSFER);\n  const { record } = props.location.state;\n  const { loading, data } = useQuery(QUERY_ITEM, {\n    variables: { where: { id: record.item.id } },\n  });\n  const history = useHistory();\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n  const itemData = data && data.inventoryItem;\n  console.log(record);\n  console.log(itemData);\n\n  if (loading) {\n    return <h1>Loading...</h1>;\n  }\n\n  const handleSave = async () => {\n    try {\n      await deleteDeliveryItem({\n        variables: {\n          where: { id: record.id },\n        },\n      });\n\n      await transfer({\n        variables: {\n          data: {\n            toWarehouseId: warehouseId.id,\n            inventoryItemIds: [itemData.id],\n            fromWarehouseIds: [itemData.warehouse.id],\n          },\n        },\n      }).then((value) => {\n        console.log(\"res\", value);\n        notify(`Save Success.`);\n        redirect();\n      });\n    } catch (error) {\n      notify(`Error: ${error.message}`, \"warning\");\n    }\n  };\n\n  return (\n    <Paper>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        style={{ height: 300, padding: 10 }}\n      >\n        <h1>Delete Deliery Item</h1>\n        <Grid item>\n          <TextField\n            id=\"id\"\n            label=\"Delivery Item\"\n            variant=\"filled\"\n            defaultValue={itemData.label}\n            disabled={true}\n          />\n        </Grid>\n        <Grid xs={4} item>\n          <WarehouseAutocomplete\n            onChange={setWarehouseId}\n            label={\n              translate(\"inventory.warehouse\") + \" \" + translate(\"common.from\")\n            }\n            where={{ where: { name_not_in: \" \" } }}\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","// in src/customRoutes.js\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport MonthlyReportPage from \"./containers/MonthlyReportPage/Loadable\";\nimport QuarterReportPage from \"./containers/QuarterReportPage/Loadable\";\nimport AnnualReportPage from \"./containers/AnnualReportPage/Loadable\";\nimport StockTransfer from \"./containers/StockTransfer\";\nimport StockDispose from \"./containers/StockDispose\";\nimport Labelling from \"./containers/Labelling\";\nimport Inventory from \"./containers/Inventory\";\nimport AddStock from \"./containers/Inventory/AddStock\";\nimport Xero from \"./containers/Xero\";\nimport XeroCallback from \"./containers/Xero/callback\";\nimport DeliveryItemDelete from \"./containers/DeliveryItem\";\n\nexport default [\n  <Route exact path=\"/Report\" component={MonthlyReportPage} />,\n  <Route exact path=\"/Report/quarter\" component={QuarterReportPage} />,\n  <Route exact path=\"/Report/annual\" component={AnnualReportPage} />,\n  <Route exact path=\"/Inventory\" component={Inventory} />,\n  <Route exact path=\"/Inventory/:productId\" component={StockTransfer} />,\n  <Route exact path=\"/Inventory/editStock/:productId/\" component={AddStock} />,\n  <Route exact path=\"/Inventory/Item/:itemId\" component={StockTransfer} />,\n  <Route exact path=\"/Inventory/Labelling\" component={Labelling} />,\n  <Route exact path=\"/Inventory/StockDispose\" component={StockDispose} />,\n  <Route exact path=\"/Xero\" component={Xero} />,\n  <Route exact path=\"/Callback\" component={XeroCallback} />,\n  <Route exact path=\"/DeliveryItem/:deliveryNoteId/delete\" component={DeliveryItemDelete} />,\n];\n","import buildVariables from './buildVariables';\nimport buildGqlQuery from './buildGqlQuery';\nimport getResponseParser from './getResponseParser';\n\nexport const buildQueryFactory = (\n    buildVariablesImpl,\n    buildGqlQueryImpl,\n    getResponseParserImpl\n) => introspectionResults => {\n    const knownResources = introspectionResults.resources.map(r => r.type.name);\n    console.log('knownResources', knownResources);\n\n    return (aorFetchType, resourceName, params) => {\n        const resource = introspectionResults.resources.find(\n            r => r.type.name === resourceName\n        );\n\n        if (!resource) {\n            throw new Error(\n                `Unknown resource ${resourceName}. Make sure it has been declared on your server side schema. Known resources are ${knownResources.join(\n                    ', '\n                )}`\n            );\n        }\n\n        const queryType = resource[aorFetchType];\n\n        if (!queryType) {\n            throw new Error(\n                `No query or mutation matching fetch type ${aorFetchType} could be found for resource ${\n                    resource.type.name\n                }`\n            );\n        }\n\n        const variables = buildVariablesImpl(introspectionResults)(\n            resource,\n            aorFetchType,\n            params,\n            queryType\n        );\n        const query = buildGqlQueryImpl(introspectionResults)(\n            resource,\n            aorFetchType,\n            queryType,\n            variables\n        );\n        const parseResponse = getResponseParserImpl(introspectionResults)(\n            aorFetchType,\n            resource,\n            queryType\n        );\n\n        return {\n            query,\n            variables,\n            parseResponse,\n        };\n    };\n};\n\nexport default buildQueryFactory(\n    buildVariables,\n    buildGqlQuery,\n    getResponseParser\n);\n","import { TypeKind } from 'graphql';\n\n/**\n * Ensure we get the real type even if the root type is NON_NULL or LIST\n * @param {GraphQLType} type\n */\nconst getFinalType = type => {\n    if (type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST) {\n        return getFinalType(type.ofType);\n    }\n\n    return type;\n};\n\nexport default getFinalType;\n","import { TypeKind } from 'graphql';\n\nconst isList = type => {\n    if (type.kind === TypeKind.NON_NULL) {\n        return isList(type.ofType);\n    }\n\n    return type.kind === TypeKind.LIST;\n};\n\nexport default isList;\n","/* eslint-disable default-case */\nimport {\n  GET_LIST,\n  GET_ONE,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  CREATE,\n  UPDATE,\n  DELETE,\n} from 'ra-core';\nimport { isObject, isArray, isDate, isString, every, isNumber } from 'lodash';\nimport { isPlural } from 'pluralize';\nimport getFinalType from './getFinalType';\nimport isList from './isList';\n\nconst sanitizeValue = (type, value) => {\n  if (type.name === 'Int') {\n    return parseInt(value, 10);\n  }\n\n  if (type.name === 'Float') {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n\nconst castType = (value, type) => {\n  switch (`${type.kind}:${type.name}`) {\n    case 'SCALAR:Int':\n      return Number(value);\n\n    case 'SCALAR:String':\n      return String(value);\n\n    case 'SCALAR:Boolean':\n      return Boolean(value);\n\n    default:\n      return value;\n  }\n};\n\nconst prepareParams = (params, queryType, introspectionResults) => {\n  const result = {};\n\n  if (!params) {\n    return params;\n  }\n\n  Object.keys(params).forEach(key => {\n    const param = params[key];\n    let arg = null;\n\n    if (!param) {\n      result[key] = param;\n      return;\n    }\n\n    if (queryType && Array.isArray(queryType.args)) {\n      arg = queryType.args.find(item => item.name === key);\n    }\n\n    if (param instanceof File) {\n      result[key] = param;\n      return;\n    }\n\n    if (\n      param instanceof Object &&\n      !Array.isArray(param) &&\n      arg &&\n      arg.type.kind === 'INPUT_OBJECT'\n    ) {\n      const args = introspectionResults.types.find(\n        item =>\n          item.kind === arg.type.kind && item.name === arg.type.name,\n      ).inputFields;\n      result[key] = prepareParams(param, { args }, introspectionResults);\n      return;\n    }\n\n    if (param instanceof Object && !Array.isArray(param)) {\n      result[key] = prepareParams(param, queryType, introspectionResults);\n      return;\n    }\n\n    if (!arg) {\n      result[key] = param;\n      return;\n    }\n\n    result[key] = castType(param, arg.type);\n  });\n\n  return result;\n};\n\nconst buildGetListVariables = introspectionResults => (\n  resource,\n  aorFetchType,\n  params,\n) => {\n  if (!params || !params.filter) return {};\n  const filter = Object.keys(params.filter).reduce((acc, key) => {\n    if (key === 'ids') {\n      return { ...acc, id_in: params.filter[key] };\n    }\n\n    if (typeof params.filter[key] === 'object') {\n      const type = introspectionResults.types.find(\n        t => t.name === `${resource.type.name}WhereInput`,\n      );\n      const filterSome = type.inputFields.find(t => t.name === `${key}_some`);\n\n      if (filterSome) {\n        const filter = Object.keys(params.filter[key]).reduce(\n          (filter_acc, k) => ({\n            ...filter_acc,\n            [`${k}_in`]: params.filter[key][k],\n          }),\n          {},\n        );\n        return { ...acc, [`${key}_some`]: filter };\n      }\n    }\n\n    const parts = key.split('.');\n\n    if (parts.length > 1) {\n      if (parts[1] === 'id') {\n        const type = introspectionResults.types.find(\n          t => t.name === `${resource.type.name}WhereInput`,\n        );\n        const filterSome = type.inputFields.find(\n          t => t.name === `${parts[0]}_some`,\n        );\n\n        if (filterSome) {\n          return {\n            ...acc,\n            [`${parts[0]}_some`]: { id: params.filter[key] },\n          };\n        }\n\n        return { ...acc, [parts[0]]: { id: params.filter[key] } };\n      }\n\n      const resourceField = resource.type.fields.find(f => f.name === parts[0]);\n      const type = getFinalType(resourceField.type);\n      return { ...acc, [key]: sanitizeValue(type, params.filter[key]) };\n    }\n\n    const resourceField = resource.type.fields.find(f => f.name === key);\n\n    if (resourceField) {\n      const type = getFinalType(resourceField.type);\n      const isAList = isList(resourceField.type);\n\n      if (isAList) {\n        return {\n          ...acc,\n          [key]: Array.isArray(params.filter[key])\n            ? params.filter[key].map(value =>\n              sanitizeValue(type, value),\n            )\n            : sanitizeValue(type, [params.filter[key]]),\n        };\n      }\n\n      return { ...acc, [key]: sanitizeValue(type, params.filter[key]) };\n    }\n\n    return { ...acc, [key]: params.filter[key] };\n  }, {});\n\n  return {\n    skip: parseInt((params.pagination.page - 1) * params.pagination.perPage),\n    first: parseInt(params.pagination.perPage),\n    orderBy: `${params.sort.field}_${params.sort.order}`,\n    where: filter,\n  };\n};\n\nconst buildCreateVariables = (\n  resource,\n  aorFetchType,\n  params,\n) => {\n  const variables = Object.keys(params.data).reduce((acc, key) => {\n    if (['id', 'createdAt', 'updatedAt'].includes(key) || key.endsWith('Ids')) {\n      return acc;\n    }\n\n\n    const value = params.data[key];\n    if (isDate(value)) {\n      return {\n        ...acc,\n        [key]: value.toISOString(),\n      };\n    } else if (isArray(value)) {\n      if (every(value, isString) || every(value, isNumber)) {\n        return {\n          ...acc,\n          [key]: { set: value },\n        };\n      }\n      // to-many (Type)\n      const connect = [];\n      const create = [];\n      value.forEach((v) => {\n        if (v && isString(v.id)) {\n          connect.push({ id: v.id });\n        } else {\n          create.push(v);\n        }\n      });\n\n      const param = {};\n      // TODO: handle link to Type and \"Update Delete Create\" at the same time\n      if (aorFetchType === 'UPDATE' && params.previousData[key].length > 0) {\n        // update if exists have value\n        const previousValue = params.previousData[key];\n        if (create.length > previousValue.length) {\n          param.create = create.slice(previousValue.length);\n        } else if (create.length < previousValue.length) {\n          param.deleteMany = previousValue.slice(create.length);\n        } else {\n          param.updateMany = previousValue.map((pv, i) => ({\n            where: pv,\n            data: create[i],\n          }));\n        }\n\n      } else {\n        // CREATE or no array data before when UPDATE\n        if (connect.length > 0) {\n          param.connect = connect;\n        }\n        if (create.length > 0) {\n          param.create = create;\n        }\n      }\n\n      return {\n        ...acc,\n        [key]: { ...param },\n      };\n    } else if (isObject(value)) {\n      // to-one (Type)\n      if (isString(value.id)) {\n        return {\n          ...acc,\n          [key]: { connect: { id: value.id } },\n        };\n      } else {\n        return {\n          ...acc,\n          [key]: { create: value },\n        };\n      }\n    }\n\n    // Never return nested types as variables for now\n    const parts = key.split('.');\n    if (parts.length > 1) {\n      // params.data[key].map(item => {\n      //   console.log(key, item)\n      // })\n      return acc;\n    }\n\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n  console.log('params/var', params, variables);\n  return variables;\n}\n\n/**\n * Deep diff between two object, using lodash\n * @param  {Object} object Object compared\n * @param  {Object} base   Object to compare with\n * @return {Object}        Return a new object who represent the diff\n */\nconst difference = (object, base) => {\n  function changes(object, base) {\n    return _.transform(object, function (result, value, key) {\n      if (!_.isEqual(value, base[key])) {\n        result[key] = (_.isObject(value) && _.isObject(base[key])) ? changes(value, base[key]) : value;\n      }\n    });\n  }\n\n  return changes(object, base);\n}\n\nconst buildUpdateVariables = (\n  resource,\n  aorFetchType,\n  { data, previousData },\n) => {\n  const differences = difference(data, previousData);\n  console.log('params/var diff', data, previousData, differences);\n  const variables = Object.keys(differences).reduce((acc, key) => {\n    if (['id', 'createdAt', 'updatedAt'].includes(key)) {\n      return acc;\n    }\n\n    const value = data[key];\n    if (isDate(value)) {\n      return {\n        ...acc,\n        [key]: value.toISOString(),\n      };\n    } else if (key.endsWith('Ids')) {\n      return {\n        ...acc,\n        [key.substr(0, key.length - 3)]: { connect: value.map((id) => ({ id })) },\n      };\n    } else if (isArray(value)) {\n      if (every(value, isString) || every(value, isNumber)) {\n        return {\n          ...acc,\n          [key]: { set: value },\n        };\n      }\n      // to-many (Type)\n      const connect = [];\n      const create = [];\n      value.forEach((v) => {\n        if (v && isString(v.id)) {\n          connect.push({ id: v.id });\n        } else {\n          create.push(v);\n        }\n      });\n\n      const param = {};\n      // TODO: handle link to Type and \"Update Delete Create\" at the same time\n      if (aorFetchType === 'UPDATE' && previousData[key].length > 0) {\n        // update if exists have value\n        const previousValue = previousData[key];\n        if (create.length > previousValue.length) {\n          param.create = create.slice(previousValue.length);\n        } else if (create.length < previousValue.length) {\n          param.deleteMany = previousValue.slice(create.length);\n        } else {\n          param.updateMany = previousValue.map((pv, i) => ({\n            where: pv,\n            data: create[i],\n          }));\n        }\n\n      } else {\n        // CREATE or no array data before when UPDATE\n        if (connect.length > 0) {\n          param.connect = connect;\n        }\n        if (create.length > 0) {\n          param.create = create;\n        }\n      }\n\n      return {\n        ...acc,\n        [key]: { ...param },\n      };\n    } else if (isObject(value)) {\n      console.log('isObject', value, every(value, isNumber));\n      // to-one (Type)\n      if (isString(value.id)) {\n        return {\n          ...acc,\n          [key]: { connect: { id: value.id } },\n        };\n      } else {\n        return {\n          ...acc,\n          [key]: { create: value },\n        };\n      }\n    }\n\n    // Never return nested types as variables for now\n    const parts = key.split('.');\n    if (parts.length > 1) {\n      // params.data[key].map(item => {\n      //   console.log(key, item)\n      // })\n      return acc;\n    }\n\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n  return variables;\n}\n\nexport default introspectionResults => (\n  resource,\n  aorFetchType,\n  params,\n  queryType,\n) => {\n  // console.log('buildVariables introspectionResults', resource, aorFetchType, params, queryType);\n  const preparedParams = prepareParams(\n    params,\n    queryType,\n    introspectionResults,\n  );\n\n  switch (aorFetchType) {\n    case GET_LIST: {\n      return buildGetListVariables(introspectionResults)(\n        resource,\n        aorFetchType,\n        preparedParams,\n        queryType,\n      );\n    }\n    case GET_MANY:\n      return {\n        where: { id_in: preparedParams.ids.length > 0 && isObject(preparedParams.ids[0]) ? preparedParams.ids.map(v => v.id) : preparedParams.ids },\n      };\n    case GET_MANY_REFERENCE: {\n      const parts = preparedParams.target.split('.');\n      const where = isPlural(parts[0]) ? { [`${parts[0]}_some`]: { id: params.id } } : { [parts[0]]: { id: params.id } };\n      return {\n        skip: parseInt((params.pagination.page - 1) * params.pagination.perPage),\n        first: parseInt(params.pagination.perPage),\n        orderBy: `${params.sort.field}_${params.sort.order}`,\n        where,\n      };\n    }\n    case GET_ONE:\n    case DELETE:\n      return {\n        where: {\n          id: preparedParams.id,\n        },\n      };\n    case CREATE: {\n      return {\n        data: buildCreateVariables(\n          resource,\n          aorFetchType,\n          preparedParams,\n          queryType,\n        ),\n      };\n    }\n    case UPDATE: {\n      return {\n        data: buildUpdateVariables(\n          resource,\n          aorFetchType,\n          preparedParams,\n          queryType,\n        ),\n        where: {\n          id: preparedParams.id,\n        },\n      };\n    }\n  }\n};\n","import { TypeKind } from 'graphql';\n\nconst isRequired = type => {\n    if (type.kind === TypeKind.LIST) {\n        return isRequired(type.ofType);\n    }\n\n    return type.kind === TypeKind.NON_NULL;\n};\n\nexport default isRequired;\n","import { CREATE, UPDATE, GET_ONE, GET_LIST, GET_MANY, GET_MANY_REFERENCE, DELETE } from 'ra-core';\nimport { QUERY_TYPES } from 'ra-data-graphql';\nimport { TypeKind } from 'graphql';\nimport * as gqlTypes from 'graphql-ast-types-browser';\n\nimport getFinalType from './getFinalType';\nimport isList from './isList';\nimport isRequired from './isRequired';\n\nexport const buildFields = (introspectionResults, path = []) => fields =>\n  fields.reduce((acc, field) => {\n    const type = getFinalType(field.type);\n\n    if (type.name.startsWith('_')) {\n      return acc;\n    }\n\n    if (type.kind !== TypeKind.OBJECT && type.kind !== TypeKind.INTERFACE) {\n      return [...acc, gqlTypes.field(gqlTypes.name(field.name))];\n    }\n\n    const linkedResource = introspectionResults.resources.find(\n      r => r.type.name === type.name\n    );\n\n    if (linkedResource) {\n      return [\n        ...acc,\n        gqlTypes.field(\n          gqlTypes.name(field.name),\n          null,\n          null,\n          null,\n          gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name('id'))])\n        ),\n      ];\n    }\n\n    const linkedType = introspectionResults.types.find(\n      t => t.name === type.name\n    );\n\n    if (linkedType && !path.includes(linkedType.name)) {\n      path.push(linkedType.name);\n\n      return [\n        ...acc,\n        gqlTypes.field(\n          gqlTypes.name(field.name),\n          null,\n          null,\n          null,\n          gqlTypes.selectionSet(\n            buildFields(introspectionResults, path)(\n              linkedType.fields\n            )\n          )\n        ),\n      ];\n    }\n\n    // NOTE: We might have to handle linked types which are not resources but will have to be careful about\n    // ending with endless circular dependencies\n    return acc;\n  }, []);\n\nexport const getArgType = arg => {\n  const type = getFinalType(arg.type);\n  const required = isRequired(arg.type);\n  const list = isList(arg.type);\n\n  if (list) {\n    if (required) {\n      return gqlTypes.listType(\n        gqlTypes.nonNullType(\n          gqlTypes.namedType(gqlTypes.name(type.name))\n        )\n      );\n    }\n    return gqlTypes.listType(gqlTypes.namedType(gqlTypes.name(type.name)));\n  }\n\n  if (required) {\n    return gqlTypes.nonNullType(gqlTypes.namedType(gqlTypes.name(type.name)));\n  }\n\n  return gqlTypes.namedType(gqlTypes.name(type.name));\n};\n\nexport const buildArgs = (query, variables, inputType) => {\n  // console.log('buildArgs', query, variables, inputType);\n  if (query.args.length === 0) {\n    return [];\n  }\n\n  const validVariables = Object.keys(variables).filter(\n    k => typeof variables[k] !== 'undefined'\n  );\n  let args;\n  if (inputType) {\n    if (inputType.name.endsWith('CreateInput')) {\n      args = [\n        gqlTypes.argument(\n          gqlTypes.name('data'),\n          gqlTypes.variable(gqlTypes.name('data'))\n        )\n      ];\n    } else if (inputType.name.endsWith('UpdateInput')) {\n      args = [\n        gqlTypes.argument(\n          gqlTypes.name('data'),\n          gqlTypes.variable(gqlTypes.name('data'))\n        ),\n        gqlTypes.argument(\n          gqlTypes.name('where'),\n          gqlTypes.variable(gqlTypes.name('where'))\n        )\n      ];\n    } else {\n      args = inputType.inputFields\n        .filter(a => validVariables.includes(a.name))\n        .reduce(\n          (acc, arg) => [\n            ...acc,\n            gqlTypes.argument(\n              gqlTypes.name(arg.name),\n              gqlTypes.variable(gqlTypes.name(arg.name))\n            ),\n          ],\n          []\n        );\n    }\n  } else {\n    args = query.args\n      .filter(a => validVariables.includes(a.name))\n      .reduce(\n        (acc, arg) => [\n          ...acc,\n          gqlTypes.argument(\n            gqlTypes.name(arg.name),\n            gqlTypes.variable(gqlTypes.name(arg.name))\n          ),\n        ],\n        []\n      );\n  }\n\n  return args;\n};\n\nexport const buildApolloArgs = (query, variables, inputType, resource) => {\n  if (query.args.length === 0) {\n    return [];\n  }\n\n  const validVariables = Object.keys(variables).filter(\n    k => typeof variables[k] !== 'undefined'\n  );\n\n  // console.log('Apollo ARgs', query, variables, validVariables)\n\n  let args;\n  if (inputType) {\n    console.log('inputType', inputType);\n    if (inputType.name.endsWith('CreateInput')) {\n      args = [gqlTypes.variableDefinition(\n        gqlTypes.variable(gqlTypes.name('data')),\n        gqlTypes.nonNullType(gqlTypes.namedType(gqlTypes.name(inputType.name)))\n      )];\n    } else if (inputType.name.endsWith('UpdateInput')) {\n      args = [\n        gqlTypes.variableDefinition(\n          gqlTypes.variable(gqlTypes.name('data')),\n          gqlTypes.nonNullType(gqlTypes.namedType(gqlTypes.name(inputType.name)))\n        ),\n        gqlTypes.variableDefinition(\n          gqlTypes.variable(gqlTypes.name('where')),\n          gqlTypes.nonNullType(gqlTypes.namedType(gqlTypes.name(`${resource.type.name}WhereUniqueInput`)))\n        ),\n      ];\n    } else {\n      args = inputType.inputFields\n        .filter(a => validVariables.includes(a.name))\n        .reduce((acc, arg) => {\n          return [\n            ...acc,\n            gqlTypes.variableDefinition(\n              gqlTypes.variable(gqlTypes.name(arg.name)),\n              getArgType(arg)\n            ),\n          ];\n        }, []);\n    }\n  } else {\n    args = query.args\n      .filter(a => validVariables.includes(a.name))\n      .reduce((acc, arg) => {\n        return [\n          ...acc,\n          gqlTypes.variableDefinition(\n            gqlTypes.variable(gqlTypes.name(arg.name)),\n            getArgType(arg)\n          ),\n        ];\n      }, []);\n  }\n\n  return args;\n};\nexport const getInputObjectForType = (\n  introspectionResults,\n  type,\n  aorFetchType\n) => {\n  const typeName = type.name;\n  let argName;\n  if (aorFetchType === CREATE) {\n    argName = `${typeName}CreateInput`;\n  }\n  if (aorFetchType === UPDATE) {\n    argName = `${typeName}UpdateInput`;\n  }\n  return introspectionResults.types.find(arg => arg.name === argName);\n};\n\nexport default introspectionResults => (\n  resource,\n  aorFetchType,\n  queryType,\n  variables\n) => {\n  const inputType = getInputObjectForType(\n    introspectionResults,\n    resource.type,\n    aorFetchType\n  );\n  const { sortField, sortOrder, ...metaVariables } = variables;\n  const apolloArgs = buildApolloArgs(queryType, variables, inputType, resource);\n  const args = buildArgs(queryType, variables, inputType);\n  const metaArgs = buildArgs(queryType, metaVariables);\n  const fields = buildFields(introspectionResults)(resource.type.fields);\n  // console.log('variables', apolloArgs, args, metaArgs, fields, resource);\n  if (\n    aorFetchType === GET_LIST ||\n    aorFetchType === GET_MANY ||\n    aorFetchType === GET_MANY_REFERENCE\n  ) {\n    console.log('introspectionResults', aorFetchType, args, metaArgs.filter(arg => !['skip', 'first'].includes(arg.name.value)));\n    return gqlTypes.document([\n      gqlTypes.operationDefinition(\n        'query',\n        gqlTypes.selectionSet([\n          gqlTypes.field(\n            gqlTypes.name(queryType.name),\n            gqlTypes.name('items'),\n            args,\n            null,\n            gqlTypes.selectionSet(fields)\n          ),\n          gqlTypes.field(\n            gqlTypes.name(`${queryType.name}Connection`),\n            gqlTypes.name('total'),\n            metaArgs.filter(arg => !['skip', 'first'].includes(arg.name.value)),\n            null,\n            gqlTypes.selectionSet([\n              gqlTypes.field(\n                gqlTypes.name('aggregate'),\n                null,\n                null,\n                null,\n                gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name('count'))])\n              ),\n            ])\n          ),\n        ]),\n        gqlTypes.name(queryType.name),\n        apolloArgs\n      ),\n    ]);\n  }\n\n  if (aorFetchType === DELETE) {\n    return gqlTypes.document([\n      gqlTypes.operationDefinition(\n        'mutation',\n        gqlTypes.selectionSet([\n          gqlTypes.field(\n            gqlTypes.name(queryType.name),\n            gqlTypes.name('data'),\n            args,\n            null,\n            gqlTypes.selectionSet([\n              gqlTypes.field(gqlTypes.name('id')),\n            ])\n          ),\n        ]),\n        gqlTypes.name(queryType.name),\n        apolloArgs\n      ),\n    ]);\n  }\n\n  if (aorFetchType === GET_ONE) {\n    return gqlTypes.document([\n      gqlTypes.operationDefinition(\n        'query',\n        gqlTypes.selectionSet([\n          gqlTypes.field(\n            gqlTypes.name(queryType.name),\n            gqlTypes.name('data'),\n            args,\n            null,\n            gqlTypes.selectionSet(fields)\n          ),\n        ]),\n        gqlTypes.name(queryType.name),\n        apolloArgs\n      ),\n    ]);\n  }\n\n  if (aorFetchType === UPDATE || aorFetchType === CREATE) {\n    return gqlTypes.document([\n      gqlTypes.operationDefinition(\n        'mutation',\n        gqlTypes.selectionSet([\n          gqlTypes.field(\n            gqlTypes.name(queryType.name),\n            gqlTypes.name('data'),\n            args,\n            null,\n            gqlTypes.selectionSet(fields)\n          ),\n        ]),\n        gqlTypes.name(queryType.name),\n        apolloArgs\n      ),\n    ]);\n  }\n\n  return gqlTypes.document([\n    gqlTypes.operationDefinition(\n      QUERY_TYPES.includes(aorFetchType) ? 'query' : 'mutation',\n      gqlTypes.selectionSet([\n        gqlTypes.field(\n          gqlTypes.name(queryType.name),\n          gqlTypes.name('data'),\n          args,\n          null,\n          gqlTypes.selectionSet(fields)\n        ),\n      ]),\n      gqlTypes.name(queryType.name),\n      apolloArgs\n    ),\n  ]);\n};\n","import { GET_LIST, GET_MANY, GET_MANY_REFERENCE } from 'ra-core';\n\nconst sanitizeResource = data => {\n  const result = Object.keys(data).reduce((acc, key) => {\n    if (key.startsWith('_')) {\n      return acc;\n    }\n\n    const dataKey = data[key];\n\n    if (dataKey === null || dataKey === undefined) {\n      return acc;\n    }\n\n    if (Array.isArray(dataKey)) {\n      if (typeof dataKey[0] === 'object') {\n        return {\n          ...acc,\n          [key]: dataKey.map(sanitizeResource),\n          [`${key}Ids`]: dataKey.map(d => d.id),\n        };\n      } else {\n        return { ...acc, [key]: dataKey };\n      }\n    }\n\n    if (typeof dataKey === 'object') {\n      return {\n        ...acc,\n        ...(dataKey &&\n          dataKey.id && {\n            [`${key}.id`]: dataKey.id,\n          }),\n        [key]: sanitizeResource(dataKey),\n      };\n    }\n\n    return { ...acc, [key]: dataKey };\n  }, {});\n\n  return result;\n};\n\nexport default introspectionResults => aorFetchType => response => {\n  const data = response.data;\n  console.log('response.data', data, aorFetchType);\n\n  if (\n    aorFetchType === GET_LIST ||\n    aorFetchType === GET_MANY ||\n    aorFetchType === GET_MANY_REFERENCE\n  ) {\n    console.log({\n      data: response.data.items.map(sanitizeResource),\n      total: response.data.total.aggregate.count,\n    });\n    return {\n      data: response.data.items.map(sanitizeResource),\n      total: response.data.total.aggregate.count,\n    };\n  }\n\n  return { data: sanitizeResource(data.data) };\n};\n","import merge from 'lodash/merge';\nimport buildDataProvider from 'ra-data-graphql';\nimport { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, DELETE, DELETE_MANY, UPDATE, UPDATE_MANY } from 'ra-core';\nimport camelCase from 'lodash/camelCase';\nimport pluralize from 'pluralize'\n\nimport defaultBuildQuery from './buildQuery';\n\nconst defaultOptions = {\n  buildQuery: defaultBuildQuery,\n  introspection: {\n    operationNames: {\n      [GET_LIST]: resource => {\n        return `${pluralize(camelCase(resource.name))}`\n      },\n      [GET_ONE]: resource => `${camelCase(resource.name)}`,\n      [GET_MANY]: resource => `${pluralize(camelCase(resource.name))}`,\n      [GET_MANY_REFERENCE]: resource => `${pluralize(camelCase(resource.name))}`,\n      [CREATE]: resource => `create${resource.name}`,\n      [UPDATE]: resource => `update${resource.name}`,\n      [DELETE]: resource => `delete${resource.name}`\n    },\n  }\n};\n\nexport const buildQuery = defaultBuildQuery;\n\nexport default options => {\n  return buildDataProvider(merge({}, defaultOptions, options)).then(\n    defaultDataProvider => {\n      return (fetchType, resource, params) => {\n        // This provider does not support multiple deletions so instead we send multiple DELETE requests\n        // This can be optimized using the apollo-link-batch-http link\n        if (fetchType === DELETE_MANY) {\n          const { ids, ...otherParams } = params;\n          return Promise.all(\n            ids.map(id =>\n              defaultDataProvider(DELETE, resource, {\n                id,\n                ...otherParams,\n              })\n            )\n          ).then(results => {\n            const data = results.reduce(\n              (acc, { data }) => [...acc, data.id],\n              []\n            );\n\n            return { data };\n          });\n        }\n        // This provider does not support multiple deletions so instead we send multiple UPDATE requests\n        // This can be optimized using the apollo-link-batch-http link\n        if (fetchType === UPDATE_MANY) {\n          const { ids, data, ...otherParams } = params;\n          return Promise.all(\n            ids.map(id =>\n              defaultDataProvider(UPDATE, resource, {\n                data: {\n                  id,\n                  ...data,\n                },\n                ...otherParams,\n              })\n            )\n          ).then(results => {\n            const data = results.reduce(\n              (acc, { data }) => [...acc, data.id],\n              []\n            );\n\n            return { data };\n          });\n        }\n\n        return defaultDataProvider(fetchType, resource, params);\n      };\n    }\n  );\n};\n","import { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\n\nimport buildGraphQLProvider from \"ra-data-prisma\";\n\n/**\n * Convert a `File` object returned by the upload input into a base 64 string.\n * That's not the most optimized way to store images in production, but it's\n * enough to illustrate the idea of data provider decoration.\n */\nconst convertFileToBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file.rawFile);\n\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n  });\n\nconst defaultOptions = {\n  watchQuery: {\n    fetchPolicy: \"no-cache\",\n    errorPolicy: \"ignore\",\n  },\n  query: {\n    fetchPolicy: \"no-cache\",\n    errorPolicy: \"all\",\n  },\n};\nconst link = new HttpLink({\n  // uri: \"http://localhost:4000/\",\n  uri: \"http://35.232.67.13:4000/\",\n});\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  defaultOptions,\n});\n\nexport const apolloClient = new ApolloClient(client);\n\nexport const getDataProvider = async () => {\n  try {\n    const provider = await buildGraphQLProvider({ client: apolloClient });\n    return (fetchType, resource, params) => {\n      if (\n        resource !== \"Product\" ||\n        !params.data ||\n        !params.data.images ||\n        params.data.images.length === 0\n      ) {\n        return provider(fetchType, resource, params);\n      }\n\n      if (fetchType === \"UPDATE\") {\n        delete params.data.imagesIds;\n        /**\n         * For posts update only, convert uploaded image in base 64 and attach it to\n         * the `picture` sent property, with `src` and `title` attributes.\n         */\n        // Freshly dropped pictures are File objects and must be converted to base64 strings\n        const newPictures = params.data.images.filter(\n          (p) => p.rawFile instanceof File\n        );\n        const formerPictures = params.data.images.filter(\n          (p) => !(p.rawFile instanceof File)\n        );\n\n        return Promise.all(newPictures.map(convertFileToBase64))\n          .then((base64Pictures) =>\n            base64Pictures.map((picture64) => ({\n              src: picture64,\n              title: `${params.data.name} (${params.data.code})`,\n            }))\n          )\n          .then((transformedNewPictures) =>\n            provider(\"UPDATE\", resource, {\n              ...params,\n              data: {\n                ...params.data,\n                images: [...formerPictures, ...transformedNewPictures],\n              },\n            })\n          );\n      } else if (fetchType === \"CREATE\") {\n        // Freshly dropped pictures are File objects and must be converted to base64 strings\n        const newPictures = params.data.images.filter(\n          (p) => p.rawFile instanceof File\n        );\n\n        return Promise.all(newPictures.map(convertFileToBase64))\n          .then((base64Pictures) =>\n            base64Pictures.map((picture64) => ({\n              src: picture64,\n              title: `${params.data.name} (${params.data.code})`,\n            }))\n          )\n          .then((transformedNewPictures) =>\n            provider(\"CREATE\", resource, {\n              ...params,\n              data: {\n                ...params.data,\n                images: transformedNewPictures,\n              },\n            })\n          );\n      } else {\n        return provider(fetchType, resource, params);\n      }\n    };\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n","import { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { apolloClient } from \"./index\";\n\nconst GET_USER = gql`\n  query users($where: UserWhereInput) {\n    users(where: $where) {\n      id\n      name\n      password\n      permission\n      group {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst authProvider = {\n  login: async ({ username, password }) => {\n    const response = await apolloClient.query({\n      query: GET_USER,\n      variables: {\n        where: {\n          AND: [\n            {\n              name: username,\n            },\n            {\n              password: password,\n            },\n          ],\n        },\n      },\n    });\n    const loginUser = response.data.users[0];\n    if (response.data.users.length === 0) {\n      throw new Error(\"Login Error\");\n    }\n    localStorage.setItem(\"token\", loginUser.name);\n    localStorage.setItem(\"permissions\", loginUser.permission.toLowerCase());\n    localStorage.setItem(\n      \"group\",\n      JSON.stringify({\n        name: loginUser.group.name,\n        id: loginUser.group.id,\n      })\n    );\n    return Promise.resolve(loginUser);\n  },\n\n  logout: () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"permissions\");\n    localStorage.removeItem(\"group\");\n    return Promise.resolve();\n  },\n  checkAuth: () => {\n    console.log(\"checkAuth\", localStorage.getItem(\"token\"));\n    return localStorage.getItem(\"token\") ? Promise.resolve() : Promise.reject();\n  },\n  checkError: (error) => {\n    console.log(\"checkError\", error);\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"token\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem(\"permissions\");\n    return role ? Promise.resolve(role) : Promise.reject();\n  },\n};\n\nexport default authProvider;\n","import React from 'react';\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  SimpleShowLayout,\n\n\n  EditButton,\n  DeleteButton,\n\n  TextField,\n\n  TextInput,\n  RadioButtonGroupInput,\n\n  required, FormDataConsumer, ShowController, ShowView,\n} from 'react-admin';\nimport { useDispatch } from 'react-redux';\nimport { setBreadcrumbs } from '../../redux/breadcrumbs';\n\nconst redirect = () => '/Warehouse';\nconst breadcrumbBase = { url: '/Warehouse', label: 'Warehouse' };\n\nexport const WarehouseCreate = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([\n    breadcrumbBase,\n    { url: '/Warehouse/create', label: 'Create New' },\n  ]));\n  return (\n    <Create {...props}>\n      <SimpleForm  variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n        <TextInput source=\"description\" />\n        <TextInput source=\"address\" />\n        <RadioButtonGroupInput source=\"type\" choices={[\n          { id: 'NORMAL', name: 'Normal' },\n          { id: 'TEMPORARY', name: 'Temporary' },\n        ]} />\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport const WarehouseEdit = props => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm  variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n        <TextInput source=\"description\" />\n        <TextInput source=\"address\" />\n        <RadioButtonGroupInput source=\"type\" choices={[\n          { id: 'NORMAL', name: 'Normal' },\n          { id: 'TEMPORARY', name: 'Temporary' },\n        ]} />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(setBreadcrumbs([breadcrumbBase, { url: `/Warehouse/${formData.id}`, label: `Edit: ${formData.name}` }]));\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport const WarehouseList = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"name\" />\n        <TextField source=\"description\" />\n        <TextField source=\"type\" />\n\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n}\n\nexport const WarehouseShow = props => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {controllerProps => {\n        const label = controllerProps.record ? controllerProps.record.name : '';\n        const id = controllerProps.record ? controllerProps.record.id : '';\n        dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerGroup/${id}/show`, label: `Details: ${label}` }]));\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <TextField source=\"id\" />\n              <TextField source=\"name\" />\n              <TextField source=\"description\" />\n              <TextField source=\"address\" />\n              <TextField source=\"type\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n}\n","import React from \"react\";\nimport { Create, Edit, SimpleForm, List, Datagrid, Show, SimpleShowLayout, EditButton, DeleteButton, TextField, EmailField, DateField, TextInput, required, email, FormDataConsumer, ShowController, ShowView } from \"react-admin\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/Supplier\";\nconst breadcrumbBase = { url: \"/Supplier\", label: \"Supplier\" };\n\nexport const SupplierCreate = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase, { url: \"/Supplier/create\", label: \"Create New\" }]));\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n        <TextInput source=\"email\" validate={email()} />\n        <TextInput source=\"country\" />\n        <TextInput source=\"phone\" />\n        <TextInput source=\"fax\" />\n        <TextInput multiline source=\"paymentTerms\" />\n        <TextInput multiline source=\"creditLine\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const SupplierEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n        <TextInput source=\"email\" validate={email()} />\n        <TextInput source=\"country\" />\n        <TextInput source=\"phone\" />\n        <TextInput source=\"fax\" />\n        <TextInput source=\"paymentTerms\" />\n        <TextInput source=\"creditLine\" />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(setBreadcrumbs([breadcrumbBase, { url: `/Supplier/${formData.id}`, label: `Edit: ${formData.name}` }]));\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const SupplierShow = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        const label = controllerProps.record ? controllerProps.record.name : \"\";\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(setBreadcrumbs([breadcrumbBase, { url: `/Supplier/${id}/show`, label: `Details: ${label}` }]));\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <TextField source=\"name\" />\n              <EmailField source=\"email\" />\n              <TextField source=\"country\" />\n              <TextField source=\"phone\" />\n              <TextField source=\"fax\" />\n              <TextField source=\"paymentTerms\" />\n              <TextField source=\"creditLine\" />\n              <DateField source=\"createdAt\" />\n              <DateField source=\"updatedAt\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const SupplierList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props} sort={{ field: \"createdAt\", order: \"DESC\" }}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"name\" />\n        <EmailField source=\"email\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from \"react\";\nimport {\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  Create,\n  ReferenceInput,\n  DeleteButton,\n  TextField,\n  DateField,\n  SelectInput,\n  DateTimeInput,\n  required,\n  ReferenceField,\n  DateInput,\n  SimpleShowLayout,\n  TextInput,\n  FormDataConsumer,\n  ShowController,\n  ShowView,\n} from \"react-admin\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/ReceivePayment\";\nconst breadcrumbBase = { url: \"/ReceivePayment\", label: \"Receive Payment\" };\n\nexport const ReceivePaymentCreate = (props) => {\n  const dispatch = useDispatch();\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/ReceivePayment/create\", label: \"Create New\" },\n    ])\n  );\n  return (\n    <Create {...props}>\n      <SimpleForm redirect={redirect}>\n        <ReferenceInput\n          label=\"Invoice\"\n          source=\"invoiceId\"\n          reference=\"Invoice\"\n          sort={{ field: \"createdAt\", order: \"DESC\" }}\n        >\n          <SelectInput optionText=\"code\" label=\"Receive Payment No.\" />\n        </ReferenceInput>\n        <SelectInput\n          source=\"paymentMethod\"\n          validate={required()}\n          choices={[\n            { id: \"COD\", name: \"Cash on Delivery\" },\n            { id: \"CREDIT\", name: \"Credit\" },\n            { id: \"DEBIT\", name: \"Debit\" },\n          ]}\n        />\n        <DateInput source=\"paidAt\" validate={required()} />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const ReceivePaymentEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm redirect={redirect}>\n        <ReferenceInput label=\"Invoice\" source=\"invoiceId\" reference=\"Invoice\">\n          <SelectInput optionText=\"code\" label=\"Receive Payment No.\" />\n        </ReferenceInput>\n        <SelectInput\n          source=\"paymentMethod\"\n          validate={required()}\n          choices={[\n            { id: \"COD\", name: \"Cash on Delivery\" },\n            { id: \"Credit\", name: \"Credit\" },\n            { id: \"Debit\", name: \"Debit\" },\n          ]}\n        />\n        <DateTimeInput source=\"paidAt\" validate={required()} />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                breadcrumbBase,\n                { url: `/ReceivePayment/${formData.id}`, label: \"Edit\" },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const ReceivePaymentShow = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        const label = \"Details\";\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(\n          setBreadcrumbs([\n            breadcrumbBase,\n            { url: `/CustomerGroup/${id}/show`, label: `Details: ${label}` },\n          ])\n        );\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <ReferenceField\n                label=\"Invoice\"\n                reference=\"Invoice\"\n                source=\"invoice.id\"\n              >\n                <TextField source=\"code\" label=\"Receive Payment No.\" />\n              </ReferenceField>\n              <DateField source=\"paidAt\" />\n              <TextField source=\"paymentMethod\" />\n              <DateField source=\"createdAt\" />\n              <DateField source=\"updatedAt\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const ReceivePaymentList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props} sort={{ field: \"createdAt\", order: \"DESC\" }}>\n      <Datagrid rowClick=\"show\">\n        <ReferenceField label=\"Invoice\" reference=\"Invoice\" source=\"invoice.id\">\n          <TextField source=\"code\" label=\"Receive Payment No.\" />\n        </ReferenceField>\n        <DateField source=\"paidAt\" />\n        <TextField source=\"paymentMethod\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    padding: theme.spacing(1),\n    paddingBottom: 0,\n    color: theme.palette.text.hint,\n  },\n  text: {\n    padding: theme.spacing(1),\n    paddingTop: 0,\n    color: theme.palette.text.primary,\n  }\n}));\n\nfunction ShowText({ label, children }) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <div className={classes.label}>\n        <Typography variant=\"caption\">{label}</Typography>\n      </div>\n      <div className={classes.text}>\n        <Typography variant=\"inherit\">{children}</Typography>\n      </div>\n    </React.Fragment>\n  );\n}\n\nShowText.propTypes = {\n  label: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ShowText;","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  SelectInput,\n  NumberField,\n  ReferenceInput,\n  TextInput,\n  ReferenceField,\n  Datagrid,\n  required,\n  useTranslate,\n  FormDataConsumer,\n  TextField,\n  ReferenceArrayField,\n  DateInput,\n  Show,\n  ReferenceFieldController,\n} from \"react-admin\";\nimport ShowText from \"../../../components/Shows/ShowText\";\nimport BilingualField from \"../../../components/BilingualField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { Field } from \"react-final-form\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\n// import { TextField } from '@material-ui/core';\n\nfunction InvoiceSelector({ formProps }) {\n  const translate = useTranslate();\n\n  const renderSalesOrderDetails = (formData) => {\n    return (\n      <React.Fragment>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate(\"invoice.totalPrice\")}>\n            <ReferenceField\n              resource=\"DeliveryNote\"\n              basePath=\"/DeliveryNote\"\n              source=\"invoiceId\"\n              reference=\"Invoice\"\n              record={formData}\n              link={false}\n            >\n              <NumberField\n                source=\"totalPrice\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </ReferenceField>\n          </ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate(\"invoice.state\")}>\n            <ReferenceField\n              resource=\"DeliveryNote\"\n              basePath=\"/DeliveryNote\"\n              source=\"invoiceId\"\n              reference=\"Invoice\"\n              record={formData}\n              link={false}\n            >\n              <TextField source=\"state\" />\n            </ReferenceField>\n          </ShowText>\n        </Grid>\n        <Grid item xs={12}>\n          <ReferenceField\n            resource=\"DeliveryNote\"\n            basePath=\"/DeliveryNote\"\n            source=\"salesOrderId\"\n            reference=\"SalesOrder\"\n            record={formData}\n            link={false}\n          >\n            <ReferenceArrayField\n              reference=\"SalesOrderItem\"\n              source=\"productsIds\"\n              addLabel={false}\n            >\n              <Datagrid>\n                <ReferenceField\n                  label=\"#\"\n                  source=\"product.id\"\n                  reference=\"Product\"\n                  link=\"show\"\n                >\n                  <TextField source=\"code\" label=\"Product No.\" />\n                </ReferenceField>\n                <ReferenceField\n                  label=\"Product Name\"\n                  source=\"product.id\"\n                  reference=\"Product\"\n                  link=\"show\"\n                >\n                  <BilingualField source=\"name\" />\n                </ReferenceField>\n                <NumberField\n                  source=\"price\"\n                  options={{ style: \"currency\", currency: \"HKD\" }}\n                />\n                <TextField source=\"quantity\" />\n                <NumberField\n                  source=\"totalPrice\"\n                  options={{ style: \"currency\", currency: \"HKD\" }}\n                />\n              </Datagrid>\n            </ReferenceArrayField>\n          </ReferenceField>\n        </Grid>\n      </React.Fragment>\n    );\n  };\n\n  const renderCustomerInput = (formData) => {\n    return (\n      <Grid item xs={12} sm={6}>\n        <ReferenceField\n          resource=\"DeliveryNote\"\n          basePath=\"/DeliveryNote\"\n          source=\"salesOrderId\"\n          reference=\"SalesOrder\"\n          record={formData}\n          link={false}\n        >\n          <ReferenceFieldController\n            source=\"shop.id\"\n            reference=\"CustomerShop\"\n            record={formData}\n            link={false}\n          >\n            {({ referenceRecord }) => (\n              <SelectInput\n                fullWidth\n                choices={\n                  referenceRecord && [\n                    {\n                      id: referenceRecord.id,\n                      name: `${referenceRecord.nameChi} (${referenceRecord.code})`,\n                    },\n                  ]\n                }\n                defaultValue={referenceRecord && referenceRecord.id}\n                disabled\n                source=\"customerId\"\n              />\n            )}\n          </ReferenceFieldController>\n        </ReferenceField>\n      </Grid>\n    );\n  };\n\n  const renderStatusInput = (formData) => {\n    return (\n      <Field name=\"state\">\n        {({ input }) => {\n          const { value, name, onChange } = input;\n          if (!value) {\n            onChange(\"SENT\");\n          }\n\n          const handleChange = (state) => {\n            onChange(state);\n          };\n          return (\n            <Grid item xs={12} sm={6}>\n              <FormControl variant=\"filled\" fullWidth>\n                <InputLabel id=\"form-state\">\n                  {translate(\"salesOrder.state\")}\n                </InputLabel>\n                <Select\n                  label=\"form-state\"\n                  onChange={(e) => handleChange(e.target.value)}\n                  title=\"Status\"\n                  defaultValue=\"SENT\"\n                >\n                  {[\n                    { id: \"SENT\", name: \"SENT\" },\n                    { id: \"PICKED\", name: \"PICKED\" },\n                    { id: \"PACKED\", name: \"PACKED\" },\n                    { id: \"DELIVERED\", name: \"DELIVERED\" },\n                  ].map((d) => (\n                    <MenuItem key={`DN${d.id}`} value={d.id}>\n                      {d.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          );\n        }}\n      </Field>\n    );\n  };\n\n  const renderInvoiceDetails = (formData, setFormData) => {\n    const { invoiceId } = formData;\n    return (\n      <React.Fragment>\n        <Grid item xs={12} sm={6}>\n          <ReferenceField\n            resource=\"DeliveryNote\"\n            basePath=\"/DeliveryNote\"\n            source=\"invoiceId\"\n            reference=\"Invoice\"\n            record={formData}\n            link={false}\n          >\n            <ReferenceFieldController\n              source=\"salesOrder.id\"\n              reference=\"SalesOrder\"\n              record={formData}\n              link={false}\n            >\n              {({ referenceRecord }) => (\n                <SelectInput\n                  fullWidth\n                  defaultValue={referenceRecord && referenceRecord.id}\n                  disabled\n                  choices={\n                    referenceRecord && [\n                      { id: referenceRecord.id, name: referenceRecord.code },\n                    ]\n                  }\n                  source=\"salesOrderId\"\n                />\n              )}\n            </ReferenceFieldController>\n          </ReferenceField>\n        </Grid>\n        {formData.salesOrderId && renderCustomerInput(formData)}\n        {formData.customerId && renderStatusInput(formData)}\n        {formData.customerId && renderSalesOrderDetails(formData)}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={6}>\n        <ReferenceInput\n          label=\"Select Invoice\"\n          source=\"invoiceId\"\n          reference=\"Invoice\"\n          resource=\"DeliveryNote\"\n          validate={required()}\n          filterToQuery={(searchText) => ({ code_contains: searchText })}\n          sort={{ field: \"createdAt\", order: \"DESC\" }}\n        >\n          <SelectInput optionText=\"code\" fullWidth label=\"Invoice No.\" />\n        </ReferenceInput>\n      </Grid>\n      <FormDataConsumer subscription={{ values: true }}>\n        {({ formData, ...others }) => {\n          return formData.invoiceId && renderInvoiceDetails(formData);\n        }}\n      </FormDataConsumer>\n    </Grid>\n  );\n}\n\nexport default InvoiceSelector;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\n// remove query warehouse\nconst GET_ITEMS = gql`\n  query inventoryItems($where: InventoryItemWhereInput) {\n    inventoryItems(where: $where, first: 10) {\n      id\n      label\n      expiryDate\n      product {\n        id\n        code\n        nameEn\n        nameChi\n      }\n    }\n  }\n`;\n\nexport default function InventoryItemAutocomplete({\n  onChange,\n  defaultValue,\n  products,\n}) {\n  console.log(products.map((product) => product.product.id));\n  const [label, setLabel] = useState(\"\");\n  const translate = useTranslate();\n  const { loading: fetching, data } = useQuery(GET_ITEMS, {\n    variables: {\n      where: {\n        label_contains: label,\n        productId_in: products.map((p) => p.product.id),\n        warehouse: { name_not: \"OUT\" },\n      },\n    },\n  });\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = fetching || (open && options.length === 0);\n\n  React.useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      console.log(\"get!!!!data\", data);\n      const { inventoryItems } = data;\n      const filteredItems = inventoryItems.filter((item) =>\n        products.map((p) => p.product.code).includes(item.product.code)\n      );\n      // setOptions(\n      //   filteredItems.map((obj) => ({\n      //     id: obj.id,\n      //     name: `(${obj.label} - ${obj.product.code}-${obj.product.nameChi} `,\n      //   }))\n      // );\n      setOptions(\n        inventoryItems.map((obj) => ({\n          id: obj.id,\n          name: `(${obj.label} - ${obj.product.code}-${obj.product.nameChi} `,\n        }))\n      );\n    }\n  }, [loading, data]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = (evt, value) => {\n    const { inventoryItems } = data;\n    if (!value) {\n      return;\n    }\n    onChange(inventoryItems.find((obj) => obj.id === value.id));\n    setLabel(\"\");\n  };\n\n  const handleInputChange = (e, value) => {\n    setLabel(value);\n  };\n\n  return (\n    <Autocomplete\n      id=\"purchase-order-autocomplete\"\n      autoSelect\n      autoComplete\n      autoHighlight\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      onInputChange={handleInputChange}\n      getOptionLabel={(option) => option.name}\n      getOptionSelected={(option) => option.id}\n      options={options}\n      loading={loading}\n      value={defaultValue && { id: defaultValue.id, name: defaultValue.code }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Search by label...\"\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\n// remove query warehouse\nconst GET_PRODUCTS = gql`\n  query products($where: ProductWhereInput) {\n    products(where: $where) {\n      id\n      code\n      nameChi\n      nameEn\n      inventoryItems {\n        id\n        label\n        expiryDate\n        product {\n          id\n          code\n          nameChi\n          nameEn\n        }\n        warehouse {\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst GET_PRODUCT_ID = gql`\n  query products($where: ProductWhereInput!) {\n    products(where: $where) {\n      id\n    }\n  }\n`;\n// product -> item\nconst GET_ITEM = gql`\n  query inventoryItems($where: InventoryItemWhereInput!) {\n    inventoryItems(where: $where, first: 20) {\n      id\n      label\n      expiryDate\n      product {\n        id\n        code\n        nameChi\n        nameEn\n      }\n      warehouse {\n        name\n      }\n    }\n  }\n`;\n\nexport default function ProductAutocomplete({ onChange, value, productIds }) {\n  const [code, setCode] = useState(\"\");\n  const [productID, setProductID] = useState(\"\");\n  const { loading: fetchID, productData } = useQuery(GET_PRODUCT_ID, {\n    variables: {\n      where: { id_in: productIds, code_contains: code },\n    },\n    onCompleted: (value) => {\n      getItem({\n        variables: {\n          where: {\n            productId_in:\n              value.products.length >= 1 ? value.products[0].id : \"\",\n          },\n        },\n      });\n    },\n  });\n\n  const [getItem, { loading: fetching, data }] = useLazyQuery(GET_ITEM, {\n    onCompleted: (value) => {\n      const inventoryItems = !!value ? value.inventoryItems : [];\n\n      const item = inventoryItems\n        .filter((item) => item.warehouse.name !== \"OUT\")\n        .reduce((results, item) => {\n          results = [\n            ...results,\n            {\n              id: `${item.product.id}-${item.id}`,\n              name: `${item.product.code}-${item.product.nameChi} (${\n                item.label || \"No Label\"\n              })`,\n            },\n          ];\n          return results;\n        }, []);\n\n      setOptions(item);\n    },\n  });\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = fetching || (open && options.length === 0);\n\n  // React.useEffect(() => {\n  //   if (!loading) {\n  //     return undefined;\n  //   }\n\n  //   if (data) {\n  //     const { inventoryItems } = data;\n  //\n  //     const item = inventoryItems\n  //       .filter((item) => item.warehouse.name !== \"OUT\")\n  //       .reduce((results, item) => {\n  //\n\n  //         results = [\n  //           ...results,\n  //           {\n  //             id: `${item.product.id}-${item.id}`,\n  //             name: `${item.product.code}-${item.product.nameChi} (${\n  //               item.label || \"No Label\"\n  //             })`,\n  //           },\n  //         ];\n  //         return results;\n  //       }, []);\n  //\n  //     setOptions(item);\n  //   }\n  // }, [loading, data]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = (evt, value) => {\n    const [productId, itemId] = value ? value.id.split(\"-\") : [];\n    const { inventoryItems } = data;\n    if (!inventoryItems) {\n      return;\n    }\n    onChange(inventoryItems.find((obj) => obj.id === itemId));\n    setCode(\"\");\n  };\n\n  const handleInputChange = (e, value) => {\n    setCode(value);\n  };\n\n  return (\n    <Autocomplete\n      id=\"product-autocomplete\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      onInputChange={handleInputChange}\n      getOptionLabel={(option) => option.name}\n      getOptionSelected={(option) => option.id}\n      options={options}\n      loading={loading}\n      value={value}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Search by product code...\"\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport {\n  useNotify,\n  Datagrid,\n  TextField,\n  FormDataConsumer,\n  useTranslate,\n  NumberField,\n} from \"react-admin\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Field } from \"react-final-form\";\nimport gql from \"graphql-tag\";\nimport ItemAutocomplete from \"./ItemAutocomplete\";\nimport ProductAutocomplete from \"./ProductAutocomplete\";\nimport ShowText from \"../../../components/Shows/ShowText\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport BilingualField from \"../../../components/BilingualField\";\nimport Chip from \"@material-ui/core/Chip\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { List, Avatar, Button, Skeleton } from \"antd\";\n\nconst GET_INVOICE = gql`\n  query invoice($where: InvoiceWhereUniqueInput!) {\n    invoice(where: $where) {\n      salesOrder {\n        id\n        products {\n          id\n          quantity\n          product {\n            id\n            code\n            nameChi\n            nameEn\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ChipsArrayField = ({ source, record = {}, label, onDelete }) => {\n  return (\n    <React.Fragment>\n      {record[source] &&\n        record[source].map((item) => (\n          <Chip\n            key={`chip-${item.itemId}`}\n            // label={`${item.label || \"No label\"} from ${item.warehouseName}`}\n            label={`${item.label || \"No label\"}`}\n            onDelete={() => onDelete(item)}\n            color=\"primary\"\n          />\n        ))}\n    </React.Fragment>\n  );\n};\n\nexport default () => {\n  return (\n    <Field name=\"items\">\n      {({ input }) => {\n        const translate = useTranslate();\n        const { value, name, onChange } = input;\n        if (!value) {\n          onChange([]);\n        }\n        const handleChange = (inventoryItem) => {\n          // check already exists\n          if (value.map((v) => v.itemId).includes(inventoryItem.id)) {\n            return;\n          }\n          onChange([\n            ...value,\n            {\n              itemId: inventoryItem.id,\n              productId: inventoryItem.product.id,\n              productCode: inventoryItem.product.code,\n              productNameEn: inventoryItem.product.nameEn,\n              productNameChi: inventoryItem.product.nameChi,\n              // warehouseId: inventoryItem.warehouse.id,\n              // warehouseName: inventoryItem.warehouse.name,\n              label: inventoryItem.label,\n              expiryDate: inventoryItem.expiryDate,\n              boxNum: 1,\n            },\n          ]);\n        };\n\n        const handleDeleteChange = (item) => {\n          onChange(value.filter((v) => v.itemId !== item.itemId));\n        };\n\n        return (\n          <FormDataConsumer subscription={{ values: true }}>\n            {({ formData }) => {\n              console.log(\"formData\", formData);\n              const { invoiceId, items } = formData;\n              const notify = useNotify();\n              // request invoice info\n              const { data } = useQuery(GET_INVOICE, {\n                variables: { where: { id: invoiceId } },\n              });\n              // preparing data\n              const products = data ? data.invoice.salesOrder.products : [];\n              console.log(\"fetching date here:\", products);\n              const record = products.reduce((results, p) => {\n                // flatten product\n                const { product, ...other } = p;\n                results[product.id] = { ...product, ...other };\n                return results;\n              }, {});\n              // merge selected items\n              items.forEach((item) => {\n                const { productId } = item;\n                if (!record[productId]) {\n                  notify(\"deliveryNote.noNeedThisProduct\", \"info\");\n                  return;\n                }\n                const selected = record[productId].selected || [];\n                record[productId].selected = [...selected, item];\n                record[productId].selectedNum =\n                  record[productId].selected.length;\n              });\n\n              return (\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <ShowText label={translate(\"common.addNew\")}>\n                      <ItemAutocomplete\n                        onChange={handleChange}\n                        placeholder=\"search by label...\"\n                        products={products}\n                      />\n                    </ShowText>\n                  </Grid>\n                  <Grid item xs={6} style={{ marginTop: 29 }}>\n                    <ProductAutocomplete\n                      onChange={handleChange}\n                      placeholder=\"search by product no...\"\n                      productIds={Object.keys(record)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Datagrid\n                      data={record}\n                      ids={Object.keys(record)}\n                      resource=\"DeliveryNote\"\n                      basePath=\"/DeliveryNote\"\n                      currentSort={{ field: \"code\", order: \"ASC\" }}\n                    >\n                      <TextField source=\"code\" label=\"Delivery Note No.\" />\n                      <BilingualField source=\"name\" />\n                      <NumberField source=\"quantity\" />\n                      <ChipsArrayField\n                        source=\"selected\"\n                        onDelete={handleDeleteChange}\n                      />\n                      <NumberField\n                        source=\"selectedNum\"\n                        label=\"Selected quantity\"\n                      />\n                    </Datagrid>\n                  </Grid>\n                </Grid>\n              );\n            }}\n          </FormDataConsumer>\n        );\n      }}\n    </Field>\n  );\n};\n","import React, { useState } from 'react';\nimport range from 'lodash/range';\nimport { useNotify, Datagrid, TextField, FormDataConsumer, useTranslate, NumberField } from 'react-admin';\nimport Grid from '@material-ui/core/Grid';\nimport { Field } from 'react-final-form';\nimport gql from 'graphql-tag';\nimport ItemAutocomplete from './ItemAutocomplete';\nimport ProductAutocomplete from './ProductAutocomplete';\nimport ShowText from '../../../components/Shows/ShowText';\nimport { useQuery } from '@apollo/react-hooks';\nimport BilingualField from '../../../components/BilingualField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst BoxSelectField = ({ source, record = {}, label, onChange, maxBox }) => {\n  const boxNum = record[source];\n  const handleChange = (e) => {\n    onChange(e.target.value, record.itemId)\n  };\n  return (\n    <FormControl>\n      <InputLabel id=\"demo-simple-select-label\">Box</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={boxNum}\n        onChange={handleChange}\n      >\n        {range(maxBox + 1).map(i => (\n          <MenuItem key={`option-${record.itemId}-${i + 1}`} value={i + 1}>Box {i + 1}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default () => {\n  const [maxBox, setMaxBox] = useState(1);\n  return (\n    <Field name=\"items\">\n      {({ input }) => {\n        const translate = useTranslate();\n        const { value, name, onChange } = input;\n        console.log('value in box form', value);\n\n        const handleChange = (boxNum, itemId) => {\n          // check already exists\n          const item = value.find(v => v.itemId === itemId);\n          item.boxNum = boxNum;\n\n          onChange([...value]);\n          if (boxNum > maxBox) {\n            setMaxBox(boxNum);\n          }\n        };\n\n        // preparing record\n        const record = value.reduce((r, v) => {\n          r[v.itemId] = v;\n          return r;\n        }, {});\n\n        return (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Datagrid\n                data={record}\n                ids={Object.keys(record)}\n                resource=\"DeliveryNote\"\n                basePath=\"/DeliveryNote\"\n                currentSort={{ field: 'code', order: 'ASC' }}\n              >\n                <TextField source=\"productCode\" />\n                <BilingualField source=\"productName\" />\n                <NumberField source=\"label\" />\n                <BoxSelectField source=\"boxNum\" onChange={handleChange} maxBox={maxBox} />\n              </Datagrid>\n            </Grid>\n          </Grid>\n        );\n      }}\n    </Field>\n  );\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport dayjs from 'dayjs';\nimport { FormDataConsumer, Datagrid, ReferenceField, DateField, TextField, useTranslate, NumberField } from 'react-admin';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Grid from '@material-ui/core/Grid';\nimport TableRow from '@material-ui/core/TableRow';\nimport BilingualField from '../../../components/BilingualField';\nimport ShowText from '../../../components/Shows/ShowText';\n\nfunction Review({ formProps }) {\n  const translate = useTranslate();\n  console.log(formProps);\n\n  return (\n    <FormDataConsumer subscription={{ values: true }}>\n      {({ formData }) => {\n        const { invoiceId, salesOrderId, customerId, items } = formData;\n        const record = formData.items.reduce((r, i) => {\n          r[i.itemId] = i;\n          return r;\n        }, {});\n        return (\n          <React.Fragment>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ShowText label={translate('customer.shippingAddress')}>\n                <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    \n                    <TextField source=\"deliverAddress\" />\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n                <ShowText label=\"Attn.\">\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"customer.id\"\n                    reference=\"Customer\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"nameChi\" />\n                  </ReferenceField>\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n                <ShowText label=\"Tel..\">\n                <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"customer.id\"\n                    reference=\"Customer\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"mobile\" />\n                  </ReferenceField>\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n                <ShowText label={translate('customer.billingAddress')}>\n                <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"customer.id\"\n                    reference=\"Customer\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"billingAddress\" />\n                  </ReferenceField>\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n                <ShowText label=\"Attn.\">\n                <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"customer.id\"\n                    reference=\"Customer\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"nameChi\" />\n                  </ReferenceField>\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n                <ShowText label=\"Tel..\">\n                <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"customer.id\"\n                    reference=\"Customer\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"mobile\" />\n                  </ReferenceField>\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n              </Grid>\n              <Grid item xs={6}>\n                <ShowText label={translate('common.date')}>\n                  {dayjs().format('YYYY-MM-DD')}\n                </ShowText>\n                <ShowText label=\"Ref.\">\n                  <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"invoiceId\"\n                    reference=\"Invoice\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"code\" label=\"Delivery Note No.\" />\n                  </ReferenceField>\n                </ShowText>\n                <ShowText label={translate('deliveryNote.deliveryDate')}>\n                  <TextField source=\"deliveryDate\" record={formData} />\n                </ShowText>\n                <ShowText label={translate('common.salesman')}>\n                  Jacky Lee\n                </ShowText>\n              </Grid>\n              <Grid item xs={12}>\n                <Datagrid\n                  data={record}\n                  ids={Object.keys(record)}\n                  resource=\"DeliveryNote\"\n                  basePath=\"/DeliveryNote\"\n                  currentSort={{ field: 'code', order: 'ASC' }}\n                >\n                  <TextField source=\"productCode\" />\n                  <BilingualField source=\"productName\" />\n                  <NumberField source=\"label\" />\n                  <DateField source=\"expiryDate\" />\n                  <TextField label=\"Box Num\" source=\"boxNum\" />\n                </Datagrid>\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        );\n      }}\n    </FormDataConsumer>\n  );\n}\n\nexport default Review;","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  useTranslate,\n  FormWithRedirect,\n  SaveButton,\n  Toolbar,\n  useCreate,\n  useRedirect,\n  useNotify,\n} from \"react-admin\";\nimport { useFormState } from \"react-final-form\";\nimport { useHistory } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport InvoiceSelector from \"./1_InvoiceSelector\";\nimport QuantityCheckForm from \"./2_QuantityCheckForm\";\nimport BoxingForm from \"./3_BoxingForm\";\nimport Review from \"./4_Review\";\nimport Box from \"@material-ui/core/Box\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../../redux/breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n}));\nconst GET_INVOICE = gql`\n  query getInvoice($id: ID!) {\n    invoice(where: { id: $id }) {\n      code\n    }\n  }\n`;\n\nconst SaveWithNoteButton = (props) => {\n  const [create] = useCreate(\"DeliveryNote\");\n  const redirectTo = useRedirect();\n  const notify = useNotify();\n  const formState = useFormState();\n  const { basePath, redirect } = props;\n  const { loading, data: res } = useQuery(GET_INVOICE, {\n    variables: { id: formState.values.invoiceId },\n  });\n  const handleClick = useCallback(() => {\n    // call dataProvider.create() manually\n    const { items, ...others } = formState.values;\n    console.log(res.invoice.code);\n    create(\n      {\n        payload: {\n          data: {\n            ...others,\n            code: `DN-${res.invoice.code}`,\n            items: items.map(({ productId, itemId, boxNum }) => ({\n              productId,\n              itemId,\n              boxNum,\n            })),\n          },\n        },\n      },\n      {\n        onSuccess: ({ data: newRecord }) => {\n          notify(\"ra.notification.created\", \"info\", {\n            smart_count: 1,\n          });\n          redirectTo(redirect, basePath, newRecord.id, newRecord);\n        },\n        onFailure: (error) => notify(`Error: ${error.message}`, \"warning\"),\n      }\n    );\n  }, [create, notify, redirectTo, basePath, formState, redirect]);\n\n  return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n};\n\n// const ADD_DELIVERY_NOTE = gql`\n//   mutation createDeliveryNote($data: DeliveryNoteCreateInput!) {\n//     createDeliveryNote(data: $data) {\n//       id\n//     }\n//   }\n// `;\n\nexport default (props) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const classes = useStyles();\n  const history = useHistory();\n  // const [addDeliveryNote] = useMutation(ADD_DELIVERY_NOTE);\n  const [activeStep, setActiveStep] = useState(0);\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/DeliveryNote\", label: \"Delivery Note\" },\n      { url: \"/DeliveryNote/create\", label: \"Create New\" },\n    ])\n  );\n  // const initialValues = {\n  //   purchaseOrder: null,\n  // };\n  // const [formData, setFormData] = useState(initialValues);\n\n  const steps = [\n    translate(\"deliveryNote.selectInvoice\"),\n    translate(\"deliveryNote.quantityCheck\"),\n    translate(\"deliveryNote.packingBox\"),\n    translate(\"deliveryNote.review\"),\n  ];\n\n  // const handleSave = () => {\n  //   const data = {\n  //     salesOrderId: formData.salesOrder.id,\n  //     invoiceId: formData.invoice.id,\n  //     deliveryDate: formData.invoice.shipmentDate,\n  //     contactPerson: formData.invoice.contactPerson,\n  //     items: {\n  //       create: formData.items.map(item => ({\n  //         id: item.id,\n  //         productId: item.product.id,\n  //         code: item.product.code,\n  //         label: item.label,\n  //         boxNum: item.boxNum,\n  //       })),\n  //     },\n  //     state: 'PACKED',\n  //   };\n  //   console.log('create data', data);\n  //   addDeliveryNote({ variables: { data } })\n  //     .then(() => {\n  //       history.push('/DeliveryNote');\n  //     });\n  // };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <FormWithRedirect\n      {...props}\n      render={(formProps) => {\n        return (\n          <form>\n            <main className={classes.layout}>\n              <Paper className={classes.paper}>\n                <Stepper activeStep={activeStep} className={classes.stepper}>\n                  {steps.map((label) => (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  ))}\n                </Stepper>\n\n                <React.Fragment>\n                  {activeStep === 0 && (\n                    <InvoiceSelector formProps={formProps} />\n                  )}\n                  {activeStep === 1 && (\n                    <QuantityCheckForm formProps={formProps} />\n                  )}\n                  {activeStep === 2 && <BoxingForm formProps={formProps} />}\n                  {activeStep === 3 && <Review formProps={formProps} />}\n\n                  <Toolbar>\n                    <Box display=\"flex\" justifyContent=\"flex-end\" width=\"100%\">\n                      {activeStep > 0 && (\n                        <Button onClick={handleBack} color=\"primary\">\n                          {translate(\"common.prev\")}\n                        </Button>\n                      )}\n                      {activeStep < steps.length - 1 && (\n                        <Button onClick={handleNext} color=\"primary\">\n                          {translate(\"common.next\")}\n                        </Button>\n                      )}\n                      <SaveWithNoteButton\n                        disabled={activeStep !== steps.length - 1}\n                        basePath=\"/DeliveryNote\"\n                        redirect=\"/DeliveryNote\"\n                      />\n                    </Box>\n                  </Toolbar>\n                </React.Fragment>\n              </Paper>\n            </main>\n          </form>\n        );\n      }}\n    />\n  );\n};\n","export default function capitalizeFirstLetter(str) {\n  var splitStr = str\n    .toLowerCase()\n    .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \" \")\n    .split(\" \");\n  for (var i = 0; i < splitStr.length; i++) {\n    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n  }\n  return splitStr.join(\" \");\n}\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport T2W from \"numbers2words\";\nimport capitalizeFirstLetter from \"./capitalizeFirstLetter\";\nimport dayjs from \"dayjs\";\n\nconst SCGenerator = (dataArray) => () => {\n  var now = dayjs();\n  var translator = new T2W(\"EN_US\");\n  let data = [];\n  let col = [\n    { dataKey: \"count\", header: \"Item\" },\n    { dataKey: \"no\", header: \"Product No\" },\n    { dataKey: \"des\", header: \"Description\" },\n    { dataKey: \"qty\", header: \"Qty\" },\n    { dataKey: \"price\", header: \"Price\" },\n    { dataKey: \"amount\", header: \"Amount\" },\n  ];\n\n  var doc = new jsPDF(\"p\", \"pt\");\n  doc.page = 1;\n  var totalPagesExp = \"{total_pages_count_string}\";\n  var width = doc.internal.pageSize.getWidth();\n  var height = doc.internal.pageSize.getHeight();\n  var header = function () {\n    var str = doc.internal.getNumberOfPages().toString();\n    if (typeof doc.putTotalPages === \"function\") {\n      str = str + \" of \" + totalPagesExp;\n    }\n    doc.setFontSize(23);\n    doc.setFontStyle(\"bold\");\n    doc.text(width - 200, 50, \"Sales Contract\");\n\n    doc.setFontSize(10);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 100, \"Bill To:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 100, dataArray.salesOrder.shop.nameEn);\n    doc.text(100, 115, dataArray.salesOrder.shop.deliverAddress);\n    doc.text(100, 130, \"\");\n    doc.text(100, 145, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 165, \"Attn:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 165, dataArray.salesOrder.shop.customer.nameEn);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 180, \"Tel:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 180, dataArray.salesOrder.shop.phone ? dataArray.salesOrder.shop.phone.toString() : \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(200, 180, \"Fax:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(250, 180, dataArray.salesOrder.shop.phone ? dataArray.salesOrder.shop.phone.toString() : \"\");\n\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 100, \"Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 100, now.format(\"DD/MMM/YYYY\"));\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 115, \"REF. No.:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 115, dataArray.salesOrder.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 130, \"Cust. ID:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 130, dataArray.salesOrder.shop.customer.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 145, \"Pay term:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 145, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 160, \"Ship Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 160, dayjs(dataArray.salesOrder.shippingDate).format(\"DD/MMM/YYYY\"));\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 175, \"Salesman:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 175, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 190, \"Page:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 190, str);\n\n    doc.setLineWidth(1.5);\n    doc.setDrawColor(0, 0, 0);\n    doc.line(50, 200, width - 50, 200);\n    doc.line(50, 220, width - 50, 220);\n  };\n\n  var footer = function () {\n    doc.setFontSize(7);\n    doc.text(width - 40, height - 30, \"Page - \" + doc.page);\n    doc.page++;\n  };\n\n  var options = {\n    beforePageContent: header,\n    afterPageContent: footer,\n    theme: \"striped\",\n    columnStyles: {\n      count: { columnWidth: 30 },\n      no: { columnWidth: 70 },\n      des: { columnWidth: 270 },\n      qty: { columnWidth: 30 },\n      price: { columnWidth: 40 },\n      amount: { columnWidth: 50, halign: \"right\" },\n    },\n\n    headStyles: { fillColor: false, textColor: \"black\" },\n    style: { cellWidth: \"auto\" },\n    margin: { top: 200, bottom: 100, horizontal: 50 },\n  };\n\n  dataArray.salesOrder.products.map((item, index) => {\n    let b = {\n      count: index + 1,\n      no: item.product.code,\n      des: item.product.nameEn,\n      qty: item.quantity,\n      price: item.price,\n      amount: item.totalPrice,\n    };\n    data.push(b);\n  });\n\n  doc.autoTable(col, data, options);\n  doc.setFontSize(10);\n  doc.setFontStyle(\"normal\");\n  doc.text(412, doc.autoTable.previous.finalY + 12, \"Sub-total :\");\n  doc.text(width - 53 - 5 * dataArray.salesOrder.subtotal.toFixed(1).toString().length, doc.autoTable.previous.finalY + 12, dataArray.salesOrder.subtotal.toFixed(1).toString());\n  doc.text(376, doc.autoTable.previous.finalY + 27, \"Discount Amount :\");\n  doc.text(width - 47 - 5 * (dataArray.salesOrder.discountAmount.toFixed(1).toString().length + 1), doc.autoTable.previous.finalY + 27, dataArray.salesOrder.discountAmount.toFixed(1).toString());\n  doc.text(400, doc.autoTable.previous.finalY + 47, \"Grand Total :\");\n  doc.text(width - 53 - 5 * dataArray.salesOrder.grandTotal.toFixed(1).toString().length, doc.autoTable.previous.finalY + 47, dataArray.salesOrder.grandTotal.toFixed(1).toString());\n  if (dataArray.salesOrder.grandTotal === parseInt(dataArray.salesOrder.grandTotal, 10)) {\n    doc.text(50, doc.autoTable.previous.finalY + 70, \"Say: Hong Kong Dollar \" + capitalizeFirstLetter(translator.toWords(dataArray.salesOrder.grandTotal)) + \" ONLY.\");\n  } else {\n    const strings = dataArray.salesOrder.grandTotal.toFixed(1).toString().split(\".\");\n    doc.text(50, doc.autoTable.previous.finalY + 70, \"Say: Hong Kong Dollar \" + capitalizeFirstLetter(translator.toWords(parseInt(strings[0]))) + \" And \" + capitalizeFirstLetter(translator.toWords(parseInt(strings[1] * 10))) + \" CENTS ONLY.\");\n  }\n  doc.setFontStyle(\"bold\");\n  doc.text(50, doc.autoTable.previous.finalY + 87, \"Shipterm :\");\n  doc.setFontStyle(\"normal\");\n  doc.text(100, doc.autoTable.previous.finalY + 87, \"Standard Delivery\");\n  doc.setFontStyle(\"bold\");\n  doc.text(50, doc.autoTable.previous.finalY + 105, \"REMARKS :\");\n  doc.setFontStyle(\"normal\");\n  doc.text(115, doc.autoTable.previous.finalY + 105, \"The sales order only valid for 7 days.\");\n  doc.setFontSize(8);\n  doc.text(350, doc.autoTable.previous.finalY + 120, \"RECEIVED THE ABOVE IN GOOD CONDITIONS :\");\n  doc.line(350, doc.autoTable.previous.finalY + 190, width - 50, doc.autoTable.previous.finalY + 190);\n  doc.text(350, doc.autoTable.previous.finalY + 200, \"COMPANY CHOP & AUTHORIZED SIGNATURE :\");\n  doc.setLineWidth(1);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(455, doc.autoTable.previous.finalY, width - 50, doc.autoTable.previous.finalY);\n  doc.line(455, doc.autoTable.previous.finalY + 33, width - 50, doc.autoTable.previous.finalY + 33);\n  doc.line(455, doc.autoTable.previous.finalY + 50, width - 50, doc.autoTable.previous.finalY + 50);\n  doc.line(455, doc.autoTable.previous.finalY + 52, width - 50, doc.autoTable.previous.finalY + 52);\n  doc.setLineWidth(1.5);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(50, doc.autoTable.previous.finalY + 76, width - 50, doc.autoTable.previous.finalY + 76);\n  doc.line(50, doc.autoTable.previous.finalY + 91, width - 50, doc.autoTable.previous.finalY + 91);\n\n  if (typeof doc.putTotalPages === \"function\") {\n    doc.putTotalPages(totalPagesExp);\n  }\n  doc.save(\"SalesContract.pdf\");\n};\nexport default SCGenerator;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport dayjs from \"dayjs\";\nimport lodash from \"lodash\";\n\nconst DNGenerator = ({ deliveryNote }) => () => {\n  var now = dayjs();\n  let data = [];\n  let col = [\n    { dataKey: \"count\", header: \"Item\" },\n    { dataKey: \"no\", header: \"Product No\" },\n    { dataKey: \"des\", header: \"Description\" },\n    { dataKey: \"exDate\", header: \"Expiry Date\" },\n    { dataKey: \"qty\", header: \"Qty\" },\n  ];\n\n  var doc = new jsPDF(\"p\", \"pt\");\n  doc.page = 1;\n  var totalPagesExp = \"{total_pages_count_string}\";\n  var width = doc.internal.pageSize.getWidth();\n  var height = doc.internal.pageSize.getHeight();\n\n  var header = function () {\n    var str = doc.internal.getNumberOfPages().toString();\n    if (typeof doc.putTotalPages === \"function\") {\n      str = str + \" of \" + totalPagesExp;\n    }\n    doc.setFontSize(23);\n    doc.setFontStyle(\"bold\");\n    doc.text(width - 250, 50, \"DELIVERY NOTE\");\n    doc.setFontSize(10);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 80, \"Ship To:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 80, deliveryNote.salesOrder.shop.nameEn);\n    doc.text(100, 95, deliveryNote.salesOrder.shop.deliverAddress);\n    doc.text(100, 110, \"\");\n    doc.text(100, 125, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 145, \"Attn:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 145, deliveryNote.salesOrder.shop.customer.nameEn);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 160, \"Tel:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 160, deliveryNote.salesOrder.shop.phone ? deliveryNote.salesOrder.shop.phone.toString() : \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(200, 160, \"Fax:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(250, 160, deliveryNote.salesOrder.shop.phone ? deliveryNote.salesOrder.shop.phone.toString() : \"\");\n\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 180, \"Bill To:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 180, deliveryNote.salesOrder.shop.nameEn);\n    doc.text(100, 195, deliveryNote.salesOrder.shop.deliverAddress);\n    doc.text(100, 210, \"\");\n    doc.text(100, 225, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 245, \"Attn:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 245, deliveryNote.salesOrder.shop.customer.nameEn);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 260, \"Tel:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 260, deliveryNote.salesOrder.shop.phone ? deliveryNote.salesOrder.shop.phone.toString() : \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(200, 260, \"Fax:\");\n    doc.setFontStyle(\"normal\");\n    // doc.text(250, 260, deliveryNote.customer.mobile)\n    doc.text(250, 260, deliveryNote.salesOrder.shop.phone ? deliveryNote.salesOrder.shop.phone.toString() : \"\");\n\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 100, \"Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 100, now.format(\"DD/MMM/YYYY\"));\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 115, \"REF. No.:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 115, deliveryNote.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 130, \"Cust. ID:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 130, deliveryNote.salesOrder.shop.customer.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 145, \"Pay term:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 145, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 160, \"Ship Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 160, dayjs(deliveryNote.invoice.shipmentDate).format(\"DD/MMM/YYYY\"));\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 175, \"Salesman:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 175, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 190, \"Page:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 190, str);\n\n    doc.setLineWidth(1.5);\n    doc.setDrawColor(0, 0, 0);\n    doc.line(50, 270, width - 50, 270);\n    doc.line(50, 290, width - 50, 290);\n  };\n\n  var footer = function () {\n    doc.setFontSize(7);\n    doc.text(width - 40, height - 30, \"Page - \" + doc.page);\n    doc.page++;\n  };\n\n  var options = {\n    beforePageContent: header,\n    afterPageContent: footer,\n    theme: \"striped\",\n    columnStyles: {\n      count: { columnWidth: 30 },\n      no: { columnWidth: 70 },\n      des: { columnWidth: 270 },\n      exDate: { columnWidth: 80 },\n      qty: { columnWidth: 40 },\n    },\n\n    headStyles: { fillColor: false, textColor: \"black\" },\n    style: { cellWidth: \"auto\" },\n    margin: { top: 270, bottom: 100, horizontal: 50 },\n  };\n\n  const groupedItems = lodash.groupBy(deliveryNote.items, \"product.code\");\n  const items = Object.values(groupedItems).map((array) => {\n    const result = array.reduce((a, b) => {\n      const itemA = dayjs(a.item.expiryDate);\n      const itemB = dayjs(b.item.expiryDate);\n      return Math.abs(itemB - now) < Math.abs(itemA - now) ? b : a;\n    });\n    result.qty = array.length;\n    return result;\n  });\n  items.map((value, index) => {\n    let b = {\n      count: index + 1,\n      no: value.product.code,\n      des: value.product.nameEn,\n      qty: value.qty,\n      exDate: dayjs(value.item.expiryDate).format(\"DD/MMM/YYYY\"),\n    };\n    data.push(b);\n  });\n  console.log(\"data_json\", data);\n  doc.autoTable(col, data, options);\n  doc.setFontSize(10);\n  doc.setFontStyle(\"normal\");\n  doc.setFontSize(8);\n  doc.text(350, doc.autoTable.previous.finalY + 40, \"RECEIVED THE ABOVE IN GOOD CONDITIONS :\");\n  doc.line(350, doc.autoTable.previous.finalY + 110, width - 50, doc.autoTable.previous.finalY + 110);\n  doc.text(350, doc.autoTable.previous.finalY + 120, \"COMPANY CHOP & AUTHORIZED SIGNATURE :\");\n  doc.setLineWidth(1.5);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(50, doc.autoTable.previous.finalY + 6, width - 50, doc.autoTable.previous.finalY + 6);\n  doc.line(50, doc.autoTable.previous.finalY + 21, width - 50, doc.autoTable.previous.finalY + 21);\n\n  if (typeof doc.putTotalPages === \"function\") {\n    doc.putTotalPages(totalPagesExp);\n  }\n  doc.save(\"Delivery Note.pdf\");\n};\nexport default DNGenerator;\n","import { useHistory } from \"react-router-dom\";\nimport {\n  DateField,\n  Datagrid,\n  ReferenceField,\n  ReferenceFieldController,\n  Show,\n  SimpleShowLayout,\n  TextField,\n  FunctionField,\n  useTranslate,\n  ShowController,\n  ShowView,\n  ReferenceManyField,\n  TopToolbar,\n  EditButton,\n  ReferenceArrayField,\n  NumberField,\n} from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport { Add, Edit, Print, DeleteForever } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport SCGenerator from \"../../utils/generateSC\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport DNGenerator from \"../../utils/generateDN\";\n\nconst GET_DN = gql`\n  query deliveryNote($where: DeliveryNoteWhereUniqueInput!) {\n    deliveryNote(where: $where) {\n      id\n      code\n      invoice {\n        shipmentDate\n      }\n      items {\n        product {\n          code\n          nameEn\n        }\n        item {\n          expiryDate\n        }\n      }\n      salesOrder {\n        shop {\n          phone\n          deliverAddress\n          nameEn\n          customer {\n            code\n            nameEn\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ({ permissions, ...props }) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const history = useHistory();\n  console.log(\"DeliveryNote Show\", props);\n  const toEdit = () => {\n    const { id } = props;\n    history.push(`/DeliveryNote/${id}/edit`);\n  };\n  const toEditItem = (record) => () => {\n    console.log(\"record: \", record);\n    history.push(`/DeliveryItem/${record.id}/edit`, {\n      record,\n    });\n  };\n  const toDeleteItem = (record) => () => {\n    console.log(\"record: \", record);\n    history.push(`/DeliveryItem/${record.id}/delete`, {\n      record,\n    });\n  };\n  const toCreateItem = () => {\n    const { id } = props;\n    console.log(\"deliveryNote id : \", id);\n    history.push(\"/DeliveryItem/create\", {\n      record: { DeliveryNote: { id } },\n    });\n  };\n  const { loading, data: res } = useQuery(GET_DN, {\n    variables: { where: { id: props.id } },\n  });\n  if (res) {\n    console.log(\"res\", res.deliveryNote.salesOrder.state);\n  }\n\n  const isAdmin = permissions === \"admin\";\n  let isPaid = true;\n  if (res) {\n    isPaid = res && res.deliveryNote.salesOrder.state === \"PAID\";\n  }\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={4}>\n        <Typography variant=\"h6\">\n          {translate(\"common.information\")}&nbsp;\n          {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={toEdit}>\n              <Edit />\n              &nbsp;{translate(\"common.edit\")}\n            </Button>\n          ) : null}\n          {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={DNGenerator(res)} disabled={loading}>\n              <Print />\n              &nbsp;{translate(\"common.print\")}\n            </Button>\n          ) : null}\n        </Typography>\n        <ShowController title=\"Delivery Note Details\" {...props}>\n          {(controllerProps) => {\n            const label = controllerProps.record ? controllerProps.record.code : \"\";\n            const id = controllerProps.record ? controllerProps.record.id : \"\";\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/DeliveryNote\", label: \"Delivery Note\" },\n                { url: `/DeliveryNote/${id}/show`, label: `Details` },\n              ])\n            );\n            return (\n              <ShowView {...controllerProps}>\n                <SimpleShowLayout>\n                  <TextField label=\"Delivery No.\" source=\"code\" />\n                  <ReferenceField label=\"Shipment Date\" reference=\"Invoice\" source=\"invoice.id\">\n                    <DateField source=\"shipmentDate\" />\n                  </ReferenceField>\n                  <DateField source=\"createdAt\" />\n                  <DateField source=\"updatedAt\" />\n                </SimpleShowLayout>\n              </ShowView>\n            );\n          }}\n        </ShowController>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Customer</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceFieldController label=\"Customer\" reference=\"SalesOrder\" source=\"salesOrder.id\" link={false}>\n                {({ referenceRecord, ...props }) => (\n                  <ReferenceField resource=\"Customer\" basePath=\"/Customer\" source=\"shop.id\" reference=\"CustomerShop\" record={referenceRecord || {}} link=\"show\">\n                    <ReferenceField resource=\"Customer\" basePath=\"/Customer\" source=\"customer.id\" reference=\"Customer\" record={referenceRecord || {}} link=\"show\">\n                      <TextField source=\"nameChi\" />\n                    </ReferenceField>\n                  </ReferenceField>\n                )}\n              </ReferenceFieldController>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Sales Order</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceField label=\"Sales Order No.\" reference=\"SalesOrder\" source=\"salesOrder.id\" link=\"show\">\n                <TextField source=\"code\" />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Invoice</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceField label=\"Invoice No.\" reference=\"Invoice\" source=\"invoice.id\" link=\"show\">\n                <TextField source=\"code\" />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item container xs={5} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Products</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceFieldController label=\"Products\" reference=\"SalesOrder\" source=\"salesOrder.id\" link={false}>\n                {({ referenceRecord, ...props }) => (\n                  <ReferenceArrayField basePath=\"/SalesOrder\" resource=\"SalesOrderItem\" reference=\"SalesOrderItem\" source=\"productsIds\" record={referenceRecord || {}} addLabel={false}>\n                    <Datagrid>\n                      <ReferenceField label=\"#\" source=\"product.id\" reference=\"Product\" link={(item, referece) => `/Product/${item.product.id}/show`}>\n                        <TextField source=\"code\" label=\"Product No.\" />\n                      </ReferenceField>\n                      <ReferenceField label=\"Product Name\" source=\"product.id\" reference=\"Product\" link=\"show\">\n                        <BilingualField source=\"name\" />\n                      </ReferenceField>\n                      <TextField source=\"quantity\" />\n                    </Datagrid>\n                  </ReferenceArrayField>\n                )}\n              </ReferenceFieldController>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">\n          Packing\n          {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={toCreateItem}>\n              <Add />\n              &nbsp;{translate(\"common.create\")}\n            </Button>\n          ) : null}\n        </Typography>\n        <Show actions={<React.Fragment />} {...props}>\n          <ReferenceManyField reference=\"DeliveryItem\" target=\"deliveryNote\" addLabel={false}>\n            <Datagrid>\n              <TextField label=\"Box Num\" source=\"boxNum\" />\n              <ReferenceField label=\"Label\" source=\"item.id\" reference=\"InventoryItem\" link={false}>\n                <TextField source=\"label\" />\n              </ReferenceField>\n              <ReferenceField label=\"ExpiryDate\" source=\"item.id\" reference=\"InventoryItem\" link={false}>\n                <DateField source=\"expiryDate\" />\n              </ReferenceField>\n              <ReferenceField label=\"#\" source=\"product.id\" reference=\"Product\" link=\"show\">\n                <TextField source=\"code\" label=\"Product No.\" />\n              </ReferenceField>\n              <ReferenceField label=\"Product Name\" source=\"product.id\" reference=\"Product\" link=\"show\">\n                <BilingualField source=\"name\" />\n              </ReferenceField>\n              <FunctionField\n                render={(record) => (\n                  <Button color=\"primary\" size=\"small\" onClick={toEditItem(record)} disabled={isPaid}>\n                    <Edit />\n                    &nbsp;{translate(\"common.edit\")}\n                  </Button>\n                )}\n              />\n              <FunctionField\n                render={(record) => (\n                  <Button color=\"primary\" size=\"small\" onClick={toDeleteItem(record)} disabled={isPaid}>\n                    <DeleteForever />\n                    &nbsp;{translate(\"common.delete\")}\n                  </Button>\n                )}\n              />\n            </Datagrid>\n          </ReferenceManyField>\n        </Show>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_CUSTOMER = gql`\n  query customers($where: CustomerWhereInput) {\n    customers(where: $where) {\n      code\n      id\n      nameEn\n      nameChi\n      wholesalePlan\n    }\n  }\n`;\n\nexport default function CustomerAutocomplete({\n  onChange,\n  value: initialValue,\n}) {\n  const translate = useTranslate();\n  const { loading: fetching, data } = useQuery(GET_CUSTOMER, {\n    variables: { state: \"APPROVED\" },\n  });\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const [options, setOptions] = useState([]);\n  const loading = fetching || (open && options.length === 0);\n  useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      setOptions(\n        data.customers.map((obj) => ({ id: obj.id, name: obj.nameChi }))\n      );\n    }\n  }, [loading, data]);\n\n  const [value, setValue] = useState(initialValue);\n  useEffect(() => {\n    if (initialValue) {\n      setValue({ id: initialValue.id, name: initialValue.nameChi });\n    }\n  }, [initialValue]);\n\n  const handleChange = (evt, value) => {\n    setValue(value);\n    onChange(data.customers.find((o) => o.id === value.id));\n  };\n\n  return (\n    <Autocomplete\n      id=\"purchase-order-autocomplete\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionSelected={(option, v) => {\n        return option.id === v;\n      }}\n      getOptionLabel={(option) => {\n        return option.name;\n      }}\n      options={options}\n      loading={loading}\n      value={value}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={translate(\"customer.customer\")}\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport {\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  EditButton,\n  DeleteButton,\n  TextField,\n  DateField,\n  ReferenceField,\n  FormDataConsumer,\n  ReferenceInput,\n  SelectInput,\n  FunctionField,\n  useGetOne,\n} from \"react-admin\";\n\nimport DeliveryNoteCreate from \"./Create\";\nimport DeliveryNoteShow from \"./Show\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport { useTranslate } from \"react-admin\";\nimport CustomerAutocomplete from \"../../components/Inputs/CustomerAutocomplete\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport { DeliveryNoteCreate, DeliveryNoteShow };\n\nconst redirect = () => \"/DeliveryNote\";\nconst breadcrumbBase = { url: \"/DeliveryNote\", label: \"DeliveryNote\" };\n\nexport const DeliveryNoteEdit = (props) => {\n  console.log(props);\n  const dispatch = useDispatch();\n\n  return (\n    <Edit {...props}>\n      <SimpleForm redirect={redirect}>\n        <ReferenceInput label=\"Invoice\" source=\"invoice.id\" reference=\"Invoice\">\n          <SelectInput optionText=\"code\" label=\"Invoice No.\" />\n        </ReferenceInput>\n\n        <ReferenceField\n          label=\"Sales Order\"\n          reference=\"Invoice\"\n          source=\"invoice.id\"\n        >\n          <ReferenceField reference=\"SalesOrder\" source=\"salesOrder.id\">\n            <TextField source=\"code\" label=\"Sales Order No.\" />\n          </ReferenceField>\n        </ReferenceField>\n\n        <ReferenceField\n          label=\"CustomerShop\"\n          reference=\"SalesOrder\"\n          source=\"salesOrder.id\"\n        >\n          <ReferenceField\n            reference=\"CustomerShop\"\n            source=\"shop.id\"\n            link={(shop, referece) => `/CustomerShop/${shop.shop.id}/show`}\n          >\n            <BilingualField source=\"name\" />\n          </ReferenceField>\n        </ReferenceField>\n        <ReferenceField\n          label=\"Customer\"\n          reference=\"SalesOrder\"\n          source=\"salesOrder.id\"\n        >\n          <ReferenceField source=\"shop.id\" reference=\"CustomerShop\">\n            <ReferenceField\n              source=\"customer.id\"\n              reference=\"Customer\"\n              link={(shop, referece) => `/Customer/${shop.customer.id}/show`}\n            >\n              <BilingualField source=\"name\" />\n            </ReferenceField>\n          </ReferenceField>\n        </ReferenceField>\n\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                breadcrumbBase,\n                {\n                  url: `/DeliveryNote/${formData.id}`,\n                  label: `Edit: ${formData.name}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nconst StatusButton = ({ record, props, permissions }) => {\n  const { data, loaded } = useGetOne(\"SalesOrder\", record.salesOrder.id);\n  let isPaid = true;\n  if (data) {\n    isPaid = data.state === \"PAID\";\n  }\n  return !isPaid ? (\n    <div>\n      <EditButton basePath={props.basePath} record={record} />\n      <DeleteButton\n        basePath={props.basePath}\n        record={record}\n        resource={props.resource}\n      />\n    </div>\n  ) : null;\n};\n\nexport const DeliveryNoteList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  console.log(props);\n  return (\n    <List {...props} sort={{ field: \"createdAt\", order: \"DESC\" }}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" />\n        <ReferenceField\n          label=\"Sales Order\"\n          reference=\"SalesOrder\"\n          source=\"salesOrder.id\"\n          link=\"show\"\n        >\n          <TextField source=\"code\" label=\"Sales Order No.\" />\n        </ReferenceField>\n        <ReferenceField\n          label=\"Invoice\"\n          reference=\"Invoice\"\n          source=\"invoice.id\"\n          link=\"show\"\n        >\n          <TextField source=\"code\" label=\"Invoice No.\" />\n        </ReferenceField>\n        <ReferenceField\n          label=\"Customer\"\n          reference=\"SalesOrder\"\n          source=\"salesOrder.id\"\n        >\n          <ReferenceField source=\"shop.id\" reference=\"CustomerShop\">\n            <ReferenceField\n              source=\"customer.id\"\n              reference=\"Customer\"\n              link={(shop, referece) => `/Customer/${shop.customer.id}/show`}\n            >\n              <BilingualField source=\"name\" />\n            </ReferenceField>\n          </ReferenceField>\n        </ReferenceField>\n\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n\n        <FunctionField\n          render={(record) => (\n            <StatusButton\n              record={record}\n              props={props}\n              // permissions={permissions}\n            />\n          )}\n        />\n      </Datagrid>\n    </List>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SaveButton, Toolbar, useCreate, useNotify, Create, SimpleForm, AutocompleteInput, NumberInput, ReferenceInput, SelectInput, Edit, FormDataConsumer, useTranslate } from 'react-admin';\nimport { useFormState } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { addBreadcrumbs } from '../../redux/breadcrumbs';\nimport { Grid, Container } from '@material-ui/core';\nimport ShowText from \"../../components/Shows/ShowText\";\nimport ItemAutocomplete from \"../DeliveryNote/Create/ItemAutocomplete\";\nimport { useLocation } from 'react-router-dom';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport TextField from '@material-ui/core/TextField';\n\n\nconst UPDATEDELIVERY = gql`\n    mutation updateDeliveryNote($data: DeliveryNoteUpdateInput!, $where: DeliveryNoteWhereUniqueInput!) {\n        updateDeliveryNote(data: $data, where: $where) {\n        id\n      }\n    }\n  `;\n\nexport const DeliveryItemEdit = (props) => {\n    const notify = useNotify();\n    const [updateDeliveryNote] = useMutation(UPDATEDELIVERY);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const record = location.state.record;\n    const [selectedProduct, setSelectedProduct] = useState();\n\n    const EditSaveButton = (props) => {\n        const handleClick = () => {\n            updateDeliveryNote({\n                variables: {\n                    where: {\n                        id: record.deliveryNote.id\n                    },\n                    data: {\n                        items: {\n                            update: {\n                                where: { id: record.id },\n                                data: { itemId: selectedProduct.itemId, productId: selectedProduct.id, boxNum: selectedProduct.boxNum }\n                            }\n                        }\n                    }\n                },\n            })\n                .then((value) => {\n                    console.log(\"res\", value);\n                    notify(`Save Success.`);\n                    redirect()\n                })\n                .catch((error) => {\n                    notify(`Error: ${error.message}`, \"warning\");\n                });\n        }\n\n        return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n    };\n\n    const DeliveryEditItemToolbar = (props) => (\n        <Toolbar {...props}>\n            <EditSaveButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n        </Toolbar>\n    );\n\n    const OptionRenderer = (choice) => `${choice.record.code} ${choice.record.nameChi}`;\n\n    const inputText = (record) => () => {\n        setSelectedProduct(record);\n        return `${record.code} ${record.nameChi}`;\n    };\n\n    const searchProduct = (searchText) => ({\n        code_contains: searchText,\n    });\n\n    const redirect = () => {\n        return history.go(-1);\n    };\n\n    const handleOnChange = (value) => {\n        selectedProduct.itemId = value.id;\n    }\n\n    const renderLable = () => {\n        const tempProduct = {\n            id: selectedProduct.id,\n            product: {\n                id: selectedProduct.id,\n                code: selectedProduct.code\n            }\n        }\n        return (\n            <Grid container direction=\"column\" style={{ width: 280 }}>\n                <ShowText label=\"Select lable\">\n                    <ItemAutocomplete onChange={handleOnChange} placeholder=\"Label\" products={[tempProduct]} />\n                </ShowText>\n            </Grid>\n        )\n    }\n    const onNumberChange = (event) => {\n        selectedProduct.boxNum = parseInt(event.target.value)\n    }\n\n    return (\n        <Edit actions={<React.Fragment />} {...props}>\n            <SimpleForm variant=\"standard\" redirect={redirect} toolbar={<DeliveryEditItemToolbar />}>\n                <ReferenceInput filterToQuery={searchProduct} label=\"Product\" source=\"product.id\" reference=\"Product\">\n                    <AutocompleteInput disabled optionText={<OptionRenderer />} label=\"DeliveryNote\" inputText={inputText} matchSuggestion={(filterValue, suggestion) => true} options={{ style: { width: 500 } }} />\n                </ReferenceInput>\n                {selectedProduct && renderLable()}\n                <ShowText label=\"BoxNum\">\n                    <TextField type=\"number\" onChange={onNumberChange} placeholder=\"BoxNumber\" />\n                </ShowText>\n                <FormDataConsumer>\n                    {({ formData }) => {\n                        dispatch(addBreadcrumbs({ url: `/DeliveryItem/${formData.id}`, label: `Edit` }));\n                        return null;\n                    }}\n                </FormDataConsumer>\n            </SimpleForm>\n        </Edit>\n    );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SaveButton, Toolbar, useCreate, useNotify, Create, SimpleForm, AutocompleteInput, NumberInput, ReferenceInput, SelectInput, Edit, FormDataConsumer, useTranslate } from 'react-admin';\nimport { useFormState } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { addBreadcrumbs } from '../../../redux/breadcrumbs';\nimport { Grid } from '@material-ui/core';\nimport ShowText from \"../../../components/Shows/ShowText\";\nimport ItemAutocomplete from \"../../DeliveryNote/Create/ItemAutocomplete\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst CREATE_DELIVERY_ITEM = gql`\n    mutation createDeliveryItem($data: DeliveryItemCreateInput!) {\n        createDeliveryItem(data: $data) {\n        id\n      }\n    }\n  `;\n\nconst SaveItemButton = (props) => {\n    const [createDeliveryItem] = useMutation(CREATE_DELIVERY_ITEM);\n    const [create] = useCreate('DeliveryItem');\n    const history = useHistory();\n    const notify = useNotify();\n    const formState = useFormState();\n\n    const redirect = () => {\n        return history.go(-1);\n    };\n\n    const handleClick = useCallback(() => {\n        if (!formState.valid) {\n            return;\n        }\n        const { product, boxNum, DeliveryNote, itemId, label, ...formValues } = formState.values;\n        createDeliveryItem({\n            variables: {\n                data: {\n                    deliveryNote: {\n                        connect: {\n                            id: DeliveryNote.id\n                        }\n                    },\n                    productId: product.id,\n                    itemId,\n                    boxNum\n                }\n            }\n        })\n            .then((value) => {\n                console.log(\"res\", value);\n                notify(`Save Success.`);\n                redirect()\n            })\n            .catch((error) => {\n                notify(`Error: ${error.message}`, \"warning\");\n            });\n\n        // create(\n        //     {\n        //         payload: {\n        //             data: {\n        //                 deliveryNote: {\n        //                     connect: {\n        //                         id: DeliveryNote.id\n        //                     }\n        //                 },\n        //                 productId: product.id,\n        //                 itemId: itemId,\n        //                 boxNum: boxNum\n        //             },\n        //         },\n        //     },\n        //     {\n        //         onSuccess: ({ data: newRecord }) => {\n        //             notify('ra.notification.created', 'info', {\n        //                 smart_count: 1,\n        //             });\n        //             redirect();\n        //         },\n        //     }\n        // );\n    }, [formState.valid, formState.values, create, notify, redirect]);\n\n    return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n};\n\nconst DeliveryItemCreateToolbar = (props) => (\n    <Toolbar {...props}>\n        <SaveItemButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n    </Toolbar>\n);\n\nexport function DeliveryItemCreate(props) {\n    const [selectedProduct, setSelectedProduct] = useState();\n    const dispatch = useDispatch();\n\n    dispatch(addBreadcrumbs({ url: '/DeliveryItem/create', label: 'Add New Delivery Item' }));\n\n    const searchProduct = (searchText) => ({\n        code_contains: searchText,\n    });\n\n    const inputText = (record) => () => {\n        setSelectedProduct(record);\n        return `${record.code} ${record.nameChi}`;\n    };\n    const handleChange = (formData) => (inventoryItem) => {\n        formData.itemId = inventoryItem.id\n        formData.label = inventoryItem.label\n    }\n\n    const OptionRenderer = (choice) => `${choice.record.code} ${choice.record.nameChi}`;\n\n    const renderInput = () => {\n        return (\n            <FormDataConsumer>\n                {({ formData, ...rest }) => {\n                    formData.quantity = selectedProduct.quantity;\n                    formData.price = selectedProduct.cost;\n                    const tempProduct = {\n                        id: selectedProduct.id,\n                        quantity: selectedProduct.quantity,\n                        product: {\n                            id: selectedProduct.id,\n                            code: selectedProduct.code\n                        }\n                    }\n                    return (\n                        <Grid container direction=\"column\" style={{ width: 280 }}>\n                            <ShowText label=\"Select lable\">\n                                <ItemAutocomplete onChange={handleChange(formData)} placeholder=\"Label\" products={[tempProduct]} />\n                            </ShowText>\n                            <NumberInput source=\"boxNum\" label=\"boxNum\" />\n                        </Grid>\n                    );\n                }}\n            </FormDataConsumer>\n        );\n    };\n\n\n    return (\n        <Create {...props}>\n            <SimpleForm toolbar={<DeliveryItemCreateToolbar />} variant=\"standard\">\n                <ReferenceInput label=\"DeliveryNote\" source=\"DeliveryNote.id\" reference=\"DeliveryNote\">\n                    <SelectInput disabled optionText=\"id\" label=\"DeliveryNote No.\" />\n                </ReferenceInput>\n                <ReferenceInput filterToQuery={searchProduct} label=\"Product\" source=\"product.id\" reference=\"Product\">\n                    <AutocompleteInput optionText={<OptionRenderer />} label=\"DeliveryNote\" inputText={inputText} matchSuggestion={(filterValue, suggestion) => true} options={{ style: { width: 500 } }} />\n                </ReferenceInput>\n                {selectedProduct && renderInput()}\n            </SimpleForm>\n        </Create>\n    );\n}","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_SALES_ORDER = gql`\n  query salesOrders($where: SalesOrderWhereInput) {\n    salesOrders(where: $where, orderBy: updatedAt_DESC) {\n      id\n      code\n      shop {\n        id\n        code\n        nameEn\n        nameChi\n        deliveryDay\n        customer {\n          id\n          nameEn\n          nameChi\n        }\n      }\n      products {\n        id\n        quantity\n        price\n        totalPrice\n        product {\n          code\n          nameEn\n          nameChi\n        }\n      }\n      grandTotal\n      state\n    }\n  }\n`;\n\nexport default function SalesOrderAutocomplete({\n  onChange,\n  defaultValue,\n  where = {},\n}) {\n  const translate = useTranslate();\n  console.log(\"where\", where);\n  const { loading: fetching, data } = useQuery(GET_SALES_ORDER, where);\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = fetching || (open && options.length === 0);\n\n  React.useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      const { salesOrders } = data;\n      setOptions(\n        salesOrders\n          .filter((obj) => !!obj)\n          .map((obj) => ({ id: obj.id, name: obj.code }))\n      );\n    }\n  }, [loading, data]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = (evt, value) => {\n    const { salesOrders } = data;\n    onChange(\n      salesOrders.filter((obj) => !!obj).find((po) => po.id === value.id)\n    );\n  };\n\n  return (\n    <Autocomplete\n      id=\"sales-order-autocomplete\"\n      style={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionLabel={(option) => option.name}\n      options={options}\n      loading={loading}\n      value={defaultValue && { id: defaultValue.id, name: defaultValue.code }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={translate(\"salesOrder.salesOrder\")}\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useTranslate, NumberField } from \"react-admin\";\nimport SalesOrderAutocomplete from \"../../../components/Inputs/SalesOrderAutocomplete\";\nimport ShowText from \"../../../components/Shows/ShowText\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport BilingualField from \"../../../components/BilingualField\";\n\nfunction SalesOrderSelector({ formData, setFormData }) {\n  const translate = useTranslate();\n\n  const handleSelect = (salesOrder) => {\n    setFormData({\n      ...formData,\n      salesOrderCode: salesOrder.code,\n      salesOrderId: salesOrder.id,\n      totalPrice: salesOrder.grandTotal,\n      contactPerson: salesOrder.contactPerson,\n      customerShop: salesOrder.shop,\n      salesOrder,\n    });\n  };\n\n  const renderSalesOrderDetails = () => {\n    const { salesOrder } = formData;\n    const { products } = salesOrder;\n    return (\n      <React.Fragment>\n        <Grid item xs={12} sm={6}>\n          <ShowText label=\"Shop\">{salesOrder.shop.code}</ShowText>\n          <ShowText label={translate(\"salesOrder.customer\")}>\n            {salesOrder.shop.customer.nameChi}\n          </ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate(\"salesOrder.totalPrice\")}>\n            <NumberField\n              source=\"totalPrice\"\n              record={salesOrder}\n              options={{ style: \"currency\", currency: \"HKD\" }}\n            />\n          </ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate(\"salesOrder.state\")}>\n            {salesOrder.state}\n          </ShowText>\n        </Grid>\n        <Grid item xs={12}>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>{translate(\"product.code\")}</TableCell>\n                <TableCell>{translate(\"product.name\")}</TableCell>\n                <TableCell align=\"right\">\n                  {translate(\"shipping.quantityCheck\")}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {translate(\"shipping.status\")}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {translate(\"invoice.totalPrice\")}\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {products.map((row, i) => {\n                return (\n                  <TableRow key={row.id}>\n                    <TableCell>{row.product.code}</TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <BilingualField source=\"name\" record={row.product} />\n                    </TableCell>\n                    <TableCell align=\"right\">{row.quantity}</TableCell>\n                    <TableCell align=\"right\">\n                      <NumberField\n                        source=\"price\"\n                        record={row}\n                        options={{ style: \"currency\", currency: \"HKD\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <NumberField\n                        source=\"totalPrice\"\n                        record={row}\n                        options={{ style: \"currency\", currency: \"HKD\" }}\n                      />\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Grid>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={6}>\n        <SalesOrderAutocomplete\n          where={{ variables: { where: { state: \"CONFIRMED\" } } }}\n          onChange={handleSelect}\n          defaultValue={formData.salesOrder}\n        />\n      </Grid>\n      {formData.salesOrder && renderSalesOrderDetails()}\n    </Grid>\n  );\n}\n\nSalesOrderSelector.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n};\n\nexport default SalesOrderSelector;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { useTranslate, NumberField } from 'react-admin';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Grid from '@material-ui/core/Grid';\nimport TableRow from '@material-ui/core/TableRow';\nimport ShowText from '../../../components/Shows/ShowText';\nimport BilingualField from '../../../components/BilingualField';\n\nfunction Review({ formData }) {\n  const translate = useTranslate();\n  const { salesOrder } = formData;\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        {translate('invoice.invoice')}\n      </Typography>\n      <Grid container>\n        <Grid item xs={12} sm={4}>\n          <ShowText label={translate('invoice.code')}>{formData.code}</ShowText>\n        </Grid>\n\n        <Grid item xs={12} sm={4}>\n          <ShowText label={translate('invoice.customer')}>\n            <BilingualField source=\"name\" record={salesOrder.shop.customer} />\n          </ShowText>\n        </Grid>\n\n        <Grid item xs={12} sm={4}>\n          <ShowText label=\"Shop\" >\n            <BilingualField source=\"name\" record={salesOrder.shop} />\n          </ShowText>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <ShowText label={translate('invoice.state')}>{formData.state}</ShowText>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <ShowText label={translate('invoice.salesOrderCode')}>{formData.salesOrderCode}</ShowText>\n        </Grid>\n        <Grid item xs={12}>\n          <Table aria-label=\"spanning table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\" colSpan={3}>\n                  Details\n                </TableCell>\n                <TableCell align=\"right\">Price</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Description</TableCell>\n                <TableCell align=\"right\">Qty.</TableCell>\n                <TableCell align=\"right\">Unit</TableCell>\n                <TableCell align=\"right\">Total/(HKD)</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                salesOrder.products && salesOrder.products.map(product => {\n                  return (\n                    <TableRow key={product.id}>\n                      <TableCell>\n                        <BilingualField source=\"name\" record={product.product} />\n                      </TableCell>\n                      <TableCell align=\"right\">{product.quantity}</TableCell>\n                      <TableCell align=\"right\">\n                        <NumberField source=\"price\" record={product} options={{ style: 'currency', currency: 'HKD' }} />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <NumberField source=\"totalPrice\" record={product} options={{ style: 'currency', currency: 'HKD' }} />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })\n              }\n              <TableRow>\n                <TableCell colSpan={3}>Total</TableCell>\n                <TableCell align=\"right\">\n                  <NumberField source=\"totalPrice\" record={formData} options={{ style: 'currency', currency: 'HKD' }} />\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Review;\n;","import React, { useEffect } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useTranslate, usePermissions } from \"react-admin\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport dayjs from \"dayjs\";\n\nfunction BasicForm({ formData, setFormData }) {\n  const translate = useTranslate();\n  const { loaded, permissions } = usePermissions();\n  let minDate;\n  let defaultDay = dayjs();\n  let selectedDay;\n  const week = formData.salesOrder.shop.deliveryDay;\n\n  if (![\"admin\"].includes(permissions)) {\n    minDate = new Date();\n    //check hours\n    if (minDate.getHours() >= 16) {\n      defaultDay = dayjs().add(1, \"day\").set(\"hour\", 9);\n      minDate.setDate(minDate.getDate() + 1);\n    }\n\n    // check customer shippment week\n    const matchCaseWeek = week.filter((day) => {\n      const currentDay = defaultDay.day();\n      return currentDay <= day;\n    });\n\n    // auto force to next week\n    if (matchCaseWeek.length == 0) {\n      const nextWeekDay = week.map((day) => day + 6 + 1);\n      defaultDay = dayjs().day(nextWeekDay[0]);\n    } else {\n      defaultDay = dayjs().day(matchCaseWeek[0]);\n    }\n  }\n  useEffect(() => {\n    setFormData({ ...formData, shipmentDate: defaultDay.toISOString() });\n  }, defaultDay);\n  console.log(formData.shipmentDate);\n\n  return (\n    <form noValidate>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <DatePicker\n            minDate={minDate}\n            format=\"ddd DD MMM YYYY\"\n            views={[\"year\", \"month\", \"date\"]}\n            inputVariant=\"filled\"\n            fullWidth\n            value={formData.shipmentDate ? formData.shipmentDate : defaultDay}\n            label={translate(\"invoice.shipmentDate\")}\n            onChange={(newDate) =>\n              setFormData({ ...formData, shipmentDate: newDate.toISOString() })\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            variant=\"filled\"\n            fullWidth\n            value={formData.code}\n            label={translate(\"invoice.code\")}\n            onChange={(e) => setFormData({ ...formData, code: e.target.value })}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl variant=\"filled\" fullWidth>\n            <InputLabel id=\"form-state\">\n              {translate(\"invoice.state\")}\n            </InputLabel>\n            <Select\n              labelId={\"state\"}\n              label=\"form-state\"\n              value={formData.state || \"APPROVED\"}\n              onChange={(e) =>\n                setFormData({ ...formData, state: e.target.value })\n              }\n            >\n              {[\n                { id: \"DRAFT\", name: translate(\"common.draft\") },\n                { id: \"APPROVED\", name: translate(\"common.approved\") },\n                { id: \"CONFIRMED\", name: translate(\"common.confirmed\") },\n                { id: \"DELETED\", name: translate(\"common.deleted\") },\n              ].map((d) => (\n                <MenuItem key={`POSelect${d.id}`} value={d.id}>\n                  {d.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default BasicForm;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslate, useNotify } from \"react-admin\";\nimport { useHistory } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport SalesOrderSelector from \"./SalesOrderSelector\";\nimport Review from \"./Review\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport BasicForm from \"./BasicForm\";\nimport sequentialNumber from \"../../../utils/sequentialNumber\";\nimport dayjs from \"dayjs\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../../redux/breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(2) * 2)]: {\n      width: 1024,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst GET_LAST_INVOICE = gql`\n  query getLastInvoice {\n    invoices(orderBy: createdAt_DESC, first: 1) {\n      id\n      code\n    }\n  }\n`;\n\nconst ADD_INVOICE = gql`\n  mutation createInvoice($data: InvoiceCreateInput!) {\n    createInvoice(data: $data) {\n      id\n      code\n    }\n  }\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const classes = useStyles();\n  const history = useHistory();\n  const [addInvoice] = useMutation(ADD_INVOICE);\n  const [activeStep, setActiveStep] = useState(0);\n  const initialValues = {\n    code: \"IV001\",\n    salesOrderCode: \"\",\n    salesOrderId: \"\",\n    salesOrder: null,\n    contactPerson: \"\",\n    totalPrice: 0,\n    state: \"CONFIRMED\",\n  };\n  const [formData, setFormData] = useState(initialValues);\n\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/Invoice\", label: \"Invoice\" },\n      { url: \"/Invoice/create\", label: \"Create New\" },\n    ])\n  );\n\n  // getting new invoice number\n  const { data: lastInvoice } = useQuery(GET_LAST_INVOICE);\n  useEffect(() => {\n    if (\n      lastInvoice &&\n      lastInvoice.invoices.length > 0 &&\n      formData.code === \"IV001\"\n    ) {\n      const last = lastInvoice.invoices[0];\n      setFormData({\n        ...formData,\n        code: sequentialNumber.numberAfter(last.code),\n      });\n    }\n  }, [lastInvoice, formData]);\n\n  const steps = [\n    translate(\"invoice.selectSalesOrder\"),\n    translate(\"invoice.invoiceDetails\"),\n    translate(\"invoice.review\"),\n  ];\n  const notify = useNotify();\n  const handleSave = () => {\n    const data = {\n      code: formData.code,\n      salesOrderId: formData.salesOrderId,\n      totalPrice: formData.totalPrice,\n      shipmentDate: formData.shipmentDate,\n      state: formData.state,\n      paymentStatus: \"UNPAID\",\n    };\n    addInvoice({ variables: { data } })\n      .then(() => {\n        history.push(\"/Invoice\");\n      })\n      .catch((error) => {\n        notify(`Error: ${error.message}`, \"warning\");\n      });\n  };\n\n  const handleNext = () => {\n    if (formData.salesOrderId === \"\" || formData.code === \"\") {\n      notify(`Error : Please fill all field.`, \"warning\");\n    } else {\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        <React.Fragment>\n          {activeStep === 0 && (\n            <SalesOrderSelector formData={formData} setFormData={setFormData} />\n          )}\n          {activeStep === 1 && (\n            <BasicForm formData={formData} setFormData={setFormData} />\n          )}\n          {activeStep === 2 && <Review formData={formData} />}\n\n          <div className={classes.buttons}>\n            {activeStep > 0 && (\n              <Button onClick={handleBack} color=\"primary\">\n                {translate(\"common.prev\")}\n              </Button>\n            )}\n            {activeStep < steps.length - 1 && (\n              <Button onClick={handleNext} color=\"primary\">\n                {translate(\"common.next\")}\n              </Button>\n            )}\n            {activeStep === steps.length - 1 && (\n              <Button onClick={handleSave} color=\"primary\">\n                {translate(\"common.confirm\")}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      </Paper>\n    </main>\n  );\n};\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport T2W from \"numbers2words\";\nimport capitalizeFirstLetter from \"./capitalizeFirstLetter\";\nimport dayjs from \"dayjs\";\nconst INVGenerator = (dataArray) => () => {\n  const invoice = dataArray.invoice;\n  console.log(\"invoice\", invoice);\n  var now = dayjs();\n  var translator = new T2W(\"EN_US\");\n  let data = [];\n  let col = [\n    { dataKey: \"count\", header: \"Item\" },\n    { dataKey: \"no\", header: \"Product No\" },\n    { dataKey: \"des\", header: \"Description\" },\n    { dataKey: \"qty\", header: \"Qty\" },\n    { dataKey: \"price\", header: \"Price\" },\n    { dataKey: \"amount\", header: \"Amount\" },\n  ];\n\n  var doc = new jsPDF(\"p\", \"pt\");\n  doc.page = 1;\n  var totalPagesExp = \"{total_pages_count_string}\";\n  var width = doc.internal.pageSize.getWidth();\n  var height = doc.internal.pageSize.getHeight();\n\n  var header = function () {\n    var str = doc.internal.getNumberOfPages().toString();\n    if (typeof doc.putTotalPages === \"function\") {\n      str = str + \" of \" + totalPagesExp;\n    }\n    doc.setFontSize(23);\n    doc.setFontStyle(\"bold\");\n    doc.text(width - 150, 50, \"INVOICE\");\n\n    doc.setFontSize(10);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 100, \"Bill To:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 100, invoice.salesOrder.shop.nameEn);\n    doc.text(100, 115, invoice.salesOrder.shop.deliverAddress);\n    doc.text(100, 130, \"\");\n    doc.text(100, 145, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 165, \"Attn:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 165, invoice.salesOrder.shop.customer.nameEn);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 180, \"Tel:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 180, invoice.salesOrder.shop.phone ? invoice.salesOrder.shop.phone.toString() : \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(200, 180, \"Fax:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(250, 180, invoice.salesOrder.shop.phone ? invoice.salesOrder.shop.phone.toString() : \"\");\n\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 100, \"Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 100, now.format(\"DD/MMM/YYYY\"));\n\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 115, \"REF. No.:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 115, invoice.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 130, \"Cust. ID:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 130, invoice.salesOrder.shop.customer.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 145, \"Pay term:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 145, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 160, \"Ship Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 160, dayjs(invoice.shipmentDate).format(\"DD/MMM/YYYY\"));\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 175, \"Salesman:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 175, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 190, \"Page:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 190, str);\n\n    doc.setLineWidth(1.5);\n    doc.setDrawColor(0, 0, 0);\n    doc.line(50, 200, width - 50, 200);\n    doc.line(50, 220, width - 50, 220);\n  };\n\n  var footer = function () {\n    doc.setFontSize(7);\n    doc.text(width - 40, height - 30, \"Page - \" + doc.page);\n    doc.page++;\n  };\n\n  var options = {\n    beforePageContent: header,\n    afterPageContent: footer,\n    theme: \"striped\",\n    columnStyles: {\n      count: { columnWidth: 30 },\n      no: { columnWidth: 70 },\n      des: { columnWidth: 270 },\n      qty: { columnWidth: 30 },\n      price: { columnWidth: 40 },\n      amount: { columnWidth: 50, halign: \"right\" },\n    },\n\n    headStyles: { fillColor: false, textColor: \"black\" },\n    style: { cellWidth: \"auto\" },\n    margin: { top: 200, bottom: 100, horizontal: 50 },\n  };\n\n  invoice.salesOrder.products.map((item, index) => {\n    let b = {\n      count: index + 1,\n      no: item.product.code,\n      des: item.product.nameEn,\n      qty: item.quantity,\n      price: item.price,\n      amount: item.totalPrice,\n    };\n    data.push(b);\n  });\n\n  doc.autoTable(col, data, options);\n  doc.setFontSize(10);\n  doc.setFontStyle(\"normal\");\n  doc.text(412, doc.autoTable.previous.finalY + 12, \"Sub-total :\");\n  doc.text(width - 53 - 5 * invoice.salesOrder.subtotal.toFixed(1).toString().length, doc.autoTable.previous.finalY + 12, invoice.salesOrder.subtotal.toFixed(1).toString());\n  doc.text(376, doc.autoTable.previous.finalY + 27, \"Discount Amount :\");\n  doc.text(width - 47 - 5 * (invoice.salesOrder.discountAmount.toFixed(1).toString().length + 1), doc.autoTable.previous.finalY + 27, invoice.salesOrder.discountAmount.toFixed(1).toString());\n  doc.text(400, doc.autoTable.previous.finalY + 47, \"Grand Total :\");\n  doc.text(width - 53 - 5 * invoice.salesOrder.grandTotal.toFixed(1).toString().length, doc.autoTable.previous.finalY + 47, invoice.salesOrder.grandTotal.toFixed(1).toString());\n\n  if (invoice.salesOrder.grandTotal === parseInt(invoice.salesOrder.grandTotal, 10)) {\n    doc.text(50, doc.autoTable.previous.finalY + 70, \"Say: Hong Kong Dollar \" + capitalizeFirstLetter(translator.toWords(invoice.salesOrder.grandTotal)) + \" ONLY.\");\n  } else {\n    const strings = invoice.salesOrder.grandTotal.toFixed(1).toString().split(\".\");\n    doc.text(50, doc.autoTable.previous.finalY + 70, \"Say: Hong Kong Dollar \" + capitalizeFirstLetter(translator.toWords(parseInt(strings[0]))) + \" And \" + capitalizeFirstLetter(translator.toWords(parseInt(strings[1] * 10))) + \" CENTS ONLY.\");\n  }\n  doc.setFontStyle(\"bold\");\n  doc.text(50, doc.autoTable.previous.finalY + 87, \"Shipterm :\");\n  doc.setFontStyle(\"normal\");\n  doc.text(100, doc.autoTable.previous.finalY + 87, \"Standard Delivery\");\n  doc.setLineWidth(1);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(455, doc.autoTable.previous.finalY, width - 50, doc.autoTable.previous.finalY);\n  doc.line(455, doc.autoTable.previous.finalY + 33, width - 50, doc.autoTable.previous.finalY + 33);\n  doc.line(455, doc.autoTable.previous.finalY + 50, width - 50, doc.autoTable.previous.finalY + 50);\n  doc.line(455, doc.autoTable.previous.finalY + 52, width - 50, doc.autoTable.previous.finalY + 52);\n  doc.setLineWidth(1.5);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(50, doc.autoTable.previous.finalY + 76, width - 50, doc.autoTable.previous.finalY + 76);\n  doc.line(50, doc.autoTable.previous.finalY + 91, width - 50, doc.autoTable.previous.finalY + 91);\n  doc.setFillColor(255, 255, 255);\n  doc.rect(90, doc.autoTable.previous.finalY + 110, 430, 150, \"FD\");\n  doc.setFontStyle(\"bold\");\n  doc.text(280, doc.autoTable.previous.finalY + 128, \"REMARK\");\n  doc.setLineWidth(1);\n  doc.line(100, doc.autoTable.previous.finalY + 134, 510, doc.autoTable.previous.finalY + 134);\n  doc.line(100, doc.autoTable.previous.finalY + 248, 510, doc.autoTable.previous.finalY + 248);\n  doc.text(100, doc.autoTable.previous.finalY + 145, \"Payment Method: Cheque or Bank-In\");\n  doc.text(100, doc.autoTable.previous.finalY + 157, \"Account Name: Petgo Trading Limited\");\n  doc.text(100, doc.autoTable.previous.finalY + 169, \"Account No.: 741-149611-838\");\n  doc.text(100, doc.autoTable.previous.finalY + 181, \"Bank Name: HSBC Hong Kong Bank Code: 004\");\n  doc.text(100, doc.autoTable.previous.finalY + 193, \"SWIFT: HSBCHKHHHKH\");\n  doc.text(100, doc.autoTable.previous.finalY + 205, \"*For Cheques, please write your Invoice No. on the back of the cheque.\");\n  doc.text(100, doc.autoTable.previous.finalY + 217, \"*For Bank-In, please provide the Bank-In Slip to Petgo Trading Limited.\");\n  doc.text(100, doc.autoTable.previous.finalY + 229, \"Cash\");\n  doc.text(100, doc.autoTable.previous.finalY + 241, \"Cash On Delivery.\");\n\n  if (typeof doc.putTotalPages === \"function\") {\n    doc.putTotalPages(totalPagesExp);\n  }\n  doc.save(\"InvoiceGen.pdf\");\n};\n\nexport default INVGenerator;\n","import { useHistory } from \"react-router-dom\";\nimport { DateField, NumberField, Datagrid, ReferenceField, Show, ReferenceArrayField, SimpleShowLayout, TextField, useTranslate, ReferenceManyField } from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport { Edit, Print } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport INVGenerator from \"../../utils/generateINV\";\nimport SCGenerator from \"../../utils/generateSC\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst GET_INVOICE = gql`\n  query invoice($where: InvoiceWhereUniqueInput!) {\n    invoice(where: $where) {\n      id\n      code\n      salesOrder {\n        id\n        code\n        title\n        remark\n        discountAmount\n        grandTotal\n        subtotal\n        state\n        userId\n        shop {\n          nameEn\n          deliverAddress\n          phone\n          customer {\n            id\n            code\n            nameEn\n          }\n        }\n        products {\n          id\n          totalPrice\n          product {\n            nameEn\n            id\n            code\n          }\n          price\n          quantity\n        }\n        createdAt\n        updatedAt\n      }\n      userId\n      state\n      paymentStatus\n      totalPrice\n      title\n      remark\n      shipmentDate\n      createdAt\n      updatedAt\n      paidAt\n    }\n  }\n`;\nexport const InvoiceShow = (props) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const history = useHistory();\n  const toEdit = () => {\n    const { basePath, id } = props;\n    history.push(`${basePath}/${id}/edit`);\n  };\n  const { loading, data } = useQuery(GET_INVOICE, {\n    variables: { where: { id: props.id } },\n  });\n  const label = data && data.invoice.code;\n  const id = data && data.invoice.id;\n  let isPaid = true;\n  if (data) {\n    isPaid = data.invoice.salesOrder.state === \"PAID\";\n  }\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/Invoice\", label: \"Invoice\" },\n      { url: `/Invoice/${id}/show`, label },\n    ])\n  );\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={9}>\n        <Typography variant=\"h6\">\n          Basic Information&nbsp;\n          {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={toEdit}>\n              <Edit />\n              &nbsp;{translate(\"common.edit\")}\n            </Button>\n          ) : null}\n          <Button color=\"primary\" size=\"small\" onClick={INVGenerator(data)} disabled={loading}>\n            <Print />\n            &nbsp;{translate(\"common.print\")}\n          </Button>\n        </Typography>\n        <Show actions={<React.Fragment />} x {...props}>\n          <SimpleShowLayout>\n            <TextField source=\"code\" label=\"Invoice No.\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n          </SimpleShowLayout>\n        </Show>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Total Price</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField source=\"totalPrice\" options={{ style: \"currency\", currency: \"HKD\" }} />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Shipment Date</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <DateField source=\"shipmentDate\" />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Sales Order</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceField label=\"Sales Order\" reference=\"SalesOrder\" source=\"salesOrder.id\" link=\"show\">\n                <TextField source=\"code\" label=\"Sales Order No.\" />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item container xs={12} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Items</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <ReferenceField label=\"Products\" reference=\"SalesOrder\" source=\"salesOrder.id\">\n              <ReferenceArrayField reference=\"SalesOrderItem\" source=\"productsIds\" addLabel={false}>\n                <Datagrid>\n                  <ReferenceField label=\"#\" source=\"product.id\" reference=\"Product\" link=\"show\">\n                    <TextField source=\"code\" label=\"Product No.\" />\n                  </ReferenceField>\n                  <ReferenceField label=\"Product Name\" source=\"product.id\" reference=\"Product\" link=\"show\">\n                    <BilingualField source=\"name\" />\n                  </ReferenceField>\n                  <NumberField source=\"price\" options={{ style: \"currency\", currency: \"HKD\" }} />\n                  <TextField source=\"quantity\" />\n                  <NumberField source=\"totalPrice\" options={{ style: \"currency\", currency: \"HKD\" }} />\n                </Datagrid>\n              </ReferenceArrayField>\n            </ReferenceField>\n          </Show>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  EditButton,\n  DeleteButton,\n  TextField,\n  NumberField,\n  DateField,\n  TextInput,\n  ReferenceField,\n  required,\n  DateInput,\n  SelectInput,\n  FormDataConsumer,\n  FunctionField,\n  useGetOne,\n} from \"react-admin\";\nimport InvoiceCreate from \"./Create\";\nimport { InvoiceShow } from \"./Show\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/Invoice\";\n\nexport { InvoiceCreate, InvoiceShow };\nconst breadcrumbBase = { url: \"/Invoice\", label: \"Invoice\" };\n\nexport const InvoiceEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Invoice No.\" />\n        <DateInput source=\"shipmentDate\" />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                breadcrumbBase,\n                {\n                  url: `/Invoice/${formData.id}`,\n                  label: `Edit: ${formData.code}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nconst StatusButton = ({ record, props, permissions }) => {\n  const { data, loaded } = useGetOne(\"SalesOrder\", record.salesOrder.id);\n  let isPaid = true;\n  if (data) {\n    isPaid = data.state === \"PAID\";\n  }\n  return !isPaid ? (\n    <div>\n      <EditButton basePath={props.basePath} record={record} />\n      <DeleteButton\n        basePath={props.basePath}\n        record={record}\n        resource={props.resource}\n      />\n    </div>\n  ) : null;\n};\n\nexport const InvoiceList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List\n      {...props}\n      filterDefaultValues={{ state_not: \"DELETED\" }}\n      sort={{ field: \"createdAt\", order: \"DESC\" }}\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Invoice No.\" />\n        <DateField source=\"shipmentDate\" />\n        <NumberField\n          source=\"totalPrice\"\n          options={{ style: \"currency\", currency: \"HKD\" }}\n        />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <FunctionField\n          render={(record) => (\n            <StatusButton\n              record={record}\n              props={props}\n              // permissions={permissions}\n            />\n          )}\n        />\n      </Datagrid>\n    </List>\n  );\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslate } from 'react-admin';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nfunction ProductListHeader({ onSort }) {\n  const translate = useTranslate();\n  const [orderBy, setOrderBy] = useState('id');\n  const [desc, setDesc] = useState(false);\n\n  const createOrderBy = (field) => () => {\n    if (field === orderBy) {\n      setDesc(!desc);\n    } else {\n      setOrderBy(field);\n      setDesc(false);\n    }\n    onSort(`${orderBy}_${desc ? 'DESC' : 'ASC'}`);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell />\n        <TableCell>\n          <TableSortLabel\n            active={orderBy === 'code'}\n            direction={desc ? 'desc' : 'asc'}\n            onClick={createOrderBy('code')}\n          >\n            {translate('product.code')}\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>\n          <TableSortLabel\n            active={orderBy === 'nameEn'}\n            direction={desc ? 'desc' : 'asc'}\n            onClick={createOrderBy('nameEn')}\n          >\n            {translate('product.name')}\n          </TableSortLabel>\n        </TableCell>\n        <TableCell align=\"right\">\n          <TableSortLabel\n            active={orderBy === 'quantity'}\n            direction={desc ? 'desc' : 'asc'}\n            onClick={createOrderBy('quantity')}\n          >\n            {translate('inventory.stock')}\n          </TableSortLabel>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n\nProductListHeader.propTypes = {\n  onSort: PropTypes.func.isRequired,\n};\n\nexport default ProductListHeader;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nexport default TablePaginationActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TablePaginationActions from './TablePaginationActions';\n\nfunction ProductListPagination({ totalRows, page, rowsPerPage, setPage, setRowsPerPage }) {\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableFooter>\n      <TableRow>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          colSpan={4}\n          count={totalRows}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          SelectProps={{\n            inputProps: { 'aria-label': 'rows per page' },\n            native: true,\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n          ActionsComponent={TablePaginationActions}\n        />\n      </TableRow>\n    </TableFooter>\n  );\n}\n\nProductListPagination.propTypes = {\n  totalRows: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n  setRowsPerPage: PropTypes.func.isRequired,\n};\n\nexport default ProductListPagination;","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslate } from \"react-admin\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { Search } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GET_PRODUCT_CATEGORIES = gql`\n  query getCategories {\n    productCategories {\n      id\n      nameEn\n      nameChi\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  title: {\n    flex: 1,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n  chips: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nfunction ProductListToolbar({ where, setWhere }) {\n  const translate = useTranslate();\n  const classes = useStyles();\n  const [code, setCode] = useState(\"\");\n  const [search, setSearch] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [timeConstraint, setTimeConstraint] = useState([]);\n  const { data } = useQuery(GET_PRODUCT_CATEGORIES);\n\n  const categories = data ? data.productCategories : [];\n\n  // if where is changed\n  useEffect(() => {\n    if (where.code_starts_with) {\n      setSearch(where.code_starts_with);\n    }\n\n    // TODO: filter categories\n\n    // TODO: filter time constraint\n  }, [where]);\n\n  // if element changed is changed\n  useEffect(() => {\n    const w = {};\n    if (search) {\n      w.code_starts_with = search;\n    }\n\n    // TODO: filter categories\n\n    // TODO: filter time constraint\n\n    setWhere(w);\n  }, [search, selectedCategories, timeConstraint, setWhere]);\n\n  const handleChangeCode = (e) => {\n    setCode(e.target.value);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setSearch(code);\n    setCode(\"\");\n  };\n\n  const handleOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const cancelSearch = () => {\n    setSearch(null);\n  };\n\n  const handleFilter = (field) => () => {\n    if (!timeConstraint.includes(field)) {\n      setTimeConstraint([...timeConstraint, field]);\n    } else {\n      timeConstraint.splice(timeConstraint.indexOf(field), 1);\n      setTimeConstraint([...timeConstraint]);\n    }\n  };\n\n  const handleFilterCat = (id) => () => {\n    if (!selectedCategories.includes(id)) {\n      setSelectedCategories([...selectedCategories, id]);\n    } else {\n      selectedCategories.splice(selectedCategories.indexOf(id), 1);\n      setSelectedCategories([...selectedCategories]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          {translate(\"salesOrder.selectProducts\")}\n        </Typography>\n        <Divider className={classes.divider} orientation=\"vertical\" />\n        <form onSubmit={handleSearch}>\n          <InputBase\n            className={classes.input}\n            value={code}\n            onChange={handleChangeCode}\n            placeholder={`${translate(\"common.search\")} ${translate(\"salesOrder.productCode\")}`}\n            inputProps={{ \"aria-label\": `${translate(\"common.search\")} ${translate(\"salesOrder.productCode\")}` }}\n          />\n          <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n            <Search />\n          </IconButton>\n        </form>\n        {/* <Divider className={classes.divider} orientation=\"vertical\" />\n        <Tooltip title={translate('common.filter')}>\n          <IconButton aria-label=\"filter\" aria-controls=\"category-menu\" aria-haspopup=\"true\" onClick={handleOpen}>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        <Menu id=\"category-menu\" open={Boolean(anchorEl)} keepMounted onClose={handleClose} anchorEl={anchorEl}>\n          {categories.map(category => (\n            <MenuItem key={`menu-${category.id}`} selected={selectedCategories.includes(category.id)} onClick={handleFilterCat(category.id)}>{category.nameEn}</MenuItem>\n          ))}\n          <Divider />\n          <MenuItem selected={timeConstraint.includes('expiredIn6Months')} onClick={handleFilter('expiredIn6Months')}>{translate('product.expiredIn6Months')}</MenuItem>\n        </Menu> */}\n      </Toolbar>\n\n      <div className={classes.chips}>\n        {search && <Chip label={search} onDelete={cancelSearch} />}\n        {timeConstraint.map((tc) => (\n          <Chip key={`product.${tc}`} label={translate(`product.${tc}`)} onDelete={handleFilter(tc)} />\n        ))}\n        {selectedCategories.map((categoryId) => (\n          <Chip key={`product.${categoryId}`} label={categories.find((c) => c.id === categoryId).nameEn} onDelete={handleFilterCat(categoryId)} />\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nProductListToolbar.propTypes = {\n  where: PropTypes.object.isRequired,\n  setWhere: PropTypes.func.isRequired,\n};\n\nexport default ProductListToolbar;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslate } from \"react-admin\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nfunction ProductSelectModal({\n  onSubmit,\n  onCancel,\n  product,\n  open: openProp,\n  customer,\n}) {\n  const translate = useTranslate();\n  const [open, setOpen] = useState(openProp);\n  useEffect(() => {\n    setOpen(openProp);\n  }, [openProp]);\n\n  const [formData, setFormData] = useState({ product });\n\n  let wholeSalePriceList = [\n    formData.wholeSalePrice1,\n    formData.wholeSalePrice2,\n    formData.wholeSalePrice3,\n    formData.wholeSalePrice4,\n    formData.wholeSalePrice5,\n  ];\n  if (product && product.discount && wholeSalePriceList.length > 0) {\n    if (product.discount.includes(\"%\")) {\n      const percent = parseFloat(product.discount) / 100;\n\n      wholeSalePriceList = wholeSalePriceList.map((price) => price * percent);\n    } else if (product.discount.includes(\"HKD\")) {\n      const discountAmount = parseFloat(product.discount.replace(\"HKD\", \"\"));\n      wholeSalePriceList = wholeSalePriceList.map(\n        (price) => price - discountAmount\n      );\n    }\n  }\n\n  useEffect(() => {\n    if (product && customer) {\n      let productWholeSalesPriceList = [\n        product.wholeSalePrice1,\n        product.wholeSalePrice2,\n        product.wholeSalePrice3,\n        product.wholeSalePrice4,\n        product.wholeSalePrice5,\n      ];\n      if (\n        product &&\n        product.discount &&\n        productWholeSalesPriceList.length > 0\n      ) {\n        if (product.discount.includes(\"%\")) {\n          const percent = 1 - parseFloat(product.discount) / 100;\n\n          productWholeSalesPriceList = productWholeSalesPriceList.map(\n            (price) => price * percent\n          );\n        } else if (product.discount.includes(\"HKD\")) {\n          const discountAmount = parseFloat(\n            product.discount.replace(\"HKD\", \"\")\n          );\n          productWholeSalesPriceList = productWholeSalesPriceList.map(\n            (price) => price - discountAmount\n          );\n        }\n      }\n\n      setFormData({\n        ...product,\n        quantity: parseInt(product.minOrderQuantity, 10),\n        price: parseFloat(\n          productWholeSalesPriceList[customer.wholesalePlan - 1]\n        ),\n      });\n    }\n  }, [product]);\n\n  const [selectBtn, setSelectBtn] = useState(customer.wholesalePlan);\n\n  const handleClose = () => {\n    onCancel();\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setFormData({ ...formData, price: parseFloat(formData.price).toFixed(2) });\n    onSubmit(formData);\n    handleClose();\n  };\n\n  const handleWholeSalePrice = (price, index) => () => {\n    setSelectBtn(index + 1);\n    setFormData({ ...formData, price: price });\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        {translate(\"salesOrder.editSalesOrder\")}\n      </DialogTitle>\n      <DialogContent>\n        <form noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              {product && product.code}\n            </Grid>\n            <Grid item xs={12}>\n              {product && product.nameChi}\n            </Grid>\n            <Grid item xs={12}>\n              {product && product.nameEn}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                error={product && formData.quantity > product.quantity}\n                helperText={\n                  product && formData.quantity > product.quantity\n                    ? \"Over Order\"\n                    : \"\"\n                }\n                id=\"quantity\"\n                label={translate(\"product.quantity\")}\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant={\n                  product && formData.quantity > product.quantity\n                    ? \"outlined\"\n                    : \"filled\"\n                }\n                value={formData.quantity}\n                onChange={(e) =>\n                  setFormData({\n                    ...formData,\n                    quantity: parseInt(e.currentTarget.value, 10),\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"price\"\n                label={translate(\"product.price\")}\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"filled\"\n                value={formData.price}\n                onChange={(e) =>\n                  setFormData({ ...formData, price: e.currentTarget.value })\n                }\n              />\n              <ButtonGroup>\n                {wholeSalePriceList.map((price, index) => (\n                  <Button\n                    onClick={handleWholeSalePrice(price, index)}\n                    color={selectBtn == index + 1 ? \"secondary\" : undefined}\n                    variant=\"contained\"\n                  >\n                    {translate(\"product.wholeSalePrice\")}\n                    {index + 1}\n                  </Button>\n                ))}\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          {translate(\"common.cancel\")}\n        </Button>\n        <Button\n          onClick={handleSave}\n          color=\"primary\"\n          disabled={\n            product && formData.quantity && formData.quantity > product.quantity\n          }\n        >\n          {translate(\"common.save\")}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nProductSelectModal.propTypes = {\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n  product: PropTypes.object,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default ProductSelectModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Add, Remove } from \"@material-ui/icons\";\nimport ProductListHeader from \"./ProductListHeader\";\nimport ProductListPagination from \"./ProductListPagination\";\nimport ProductListToolbar from \"./ProductListToolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ProductSelectModal from \"./ProductSelectModal\";\n\nconst GET_PRODUCTS = gql`\n  query getProducts(\n    $where: ProductWhereInput\n    $orderBy: ProductOrderByInput\n    $first: Int\n    $skip: Int\n  ) {\n    productsConnection(\n      where: $where\n      orderBy: $orderBy\n      skip: $skip\n      first: $first\n    ) {\n      edges {\n        node {\n          id\n          code\n          nameChi\n          nameEn\n          minOrderQuantity\n          minStockLevel\n          quantity\n          discount\n          cost\n          wholeSalePrice1\n          wholeSalePrice2\n          wholeSalePrice3\n          wholeSalePrice4\n          wholeSalePrice5\n        }\n      }\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  toolbar: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {},\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  image: {\n    width: 60,\n    height: 60,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n}));\n\nfunction ProductSelector({ selected, onSelected, customer }) {\n  const classes = useStyles();\n  const [where, setWhere] = useState({});\n  const [page, setPage] = useState(0);\n  const [orderBy, setOrderBy] = useState(\"id_ASC\");\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const { loading, error, data } = useQuery(GET_PRODUCTS, {\n    variables: {\n      where,\n      orderBy,\n      first: rowsPerPage,\n      skip: page * rowsPerPage,\n    },\n  });\n  if (error) {\n    return <div>Error</div>;\n  }\n  if (!data && loading) {\n    return <div>loading...</div>;\n  }\n  const rows = data.productsConnection.edges.map((e) => e.node);\n  const totalRows = data.productsConnection.aggregate.count;\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, totalRows - page * rowsPerPage);\n  const selectedIds = selected.map((s) => s.id);\n\n  const handleSelected = (product, selected) => {\n    onSelected(product, selected);\n  };\n\n  const createToggleProduct = (product) => () => {\n    const selected = !selectedIds.includes(product.id);\n    if (!selected) {\n      handleSelected(product, selected);\n    } else {\n      setSelectedProduct(product);\n    }\n  };\n\n  const handleProductAdd = (product) => {\n    handleSelected(product, true);\n    setSelectedProduct(null);\n  };\n\n  const handleClose = () => {\n    setSelectedProduct(null);\n  };\n\n  return (\n    <React.Fragment>\n      <ProductListToolbar where={where} setWhere={setWhere} />\n\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <ProductListHeader onSort={setOrderBy} />\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>\n                <IconButton onClick={createToggleProduct(row)}>\n                  {selectedIds.includes(row.id) ? <Remove /> : <Add />}\n                </IconButton>\n              </TableCell>\n              <TableCell>{row.code}</TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {row.nameChi}\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                      {row.nameEn}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </TableCell>\n              <TableCell align=\"right\">{parseInt(row.quantity, 10)}</TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <ProductListPagination\n          totalRows={totalRows}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          setPage={setPage}\n          setRowsPerPage={setRowsPerPage}\n        />\n      </Table>\n      <ProductSelectModal\n        product={selectedProduct}\n        open={!!selectedProduct}\n        onSubmit={handleProductAdd}\n        onCancel={handleClose}\n        customer={customer}\n      />\n    </React.Fragment>\n  );\n}\n\nProductSelector.propTypes = {\n  selected: PropTypes.array.isRequired,\n  onSelected: PropTypes.func.isRequired,\n};\n\nexport default ProductSelector;\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_CUSTOMER = gql`\n  query customer($where: CustomerWhereUniqueInput!) {\n    customer(where: $where) {\n      code\n      id\n      nameEn\n      nameChi\n      shops {\n        id\n        code\n        nameChi\n        nameEn\n      }\n    }\n  }\n`;\n\nexport default function CustomerShopAutocomplete({\n  onChange,\n  value: initialValue,\n  customerId,\n}) {\n  const translate = useTranslate();\n  console.log(\"customerId\", customerId);\n  const [customerID, setCustomerID] = useState();\n  const { loading: fetching, data } = useQuery(GET_CUSTOMER, {\n    variables: { where: { id: customerId } },\n  });\n  console.log(data && data);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const [options, setOptions] = useState([]);\n  const loading = fetching || (open && options.length === 0);\n  useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      setCustomerID(data.id);\n      // setOptions(data.customer.shops.filter((obj) => !!obj).map((obj) => ({ id: obj.id, name: obj.nameChi })));\n      setOptions(\n        data.customer.shops\n          .filter((obj) => !!obj)\n          .map((obj) => ({ id: obj.id, name: obj.code }))\n      );\n    }\n  }, [loading, data, customerID]);\n\n  const [value, setValue] = useState(initialValue);\n  useEffect(() => {\n    if (initialValue) {\n      // setValue({ id: initialValue.id, name: initialValue.nameChi });\n      setValue({ id: initialValue.id, name: initialValue.code });\n    }\n  }, [initialValue]);\n\n  const handleChange = (evt, value) => {\n    setValue(value);\n    value && onChange(data.customer.shops.find((o) => o.id === value.id));\n  };\n\n  return (\n    <Autocomplete\n      id=\"customer-shop-autocomplete\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionSelected={(option, v) => {\n        return option && option.id === v;\n      }}\n      getOptionLabel={(option) => {\n        return option && option.name;\n      }}\n      options={options}\n      loading={loading}\n      value={value}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"CustomerShop\"\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useTranslate, ReferenceInput, SelectInput } from \"react-admin\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CustomerAutocomplete from \"../../../components/Inputs/CustomerAutocomplete\";\nimport CustomerShopAutocomplete from \"../../../components/Inputs/CustomerShopAutocomplete\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_CUSTOMER = gql`\n  query customer($where: CustomerWhereUniqueInput!) {\n    customer(where: $where) {\n      code\n      id\n      nameEn\n      nameChi\n      shops {\n        id\n        code\n        nameChi\n        nameEn\n      }\n    }\n  }\n`;\n\nfunction BasicForm({ formData, setFormData }) {\n  const translate = useTranslate();\n  const [customerShops, setCustomerShops] = useState();\n\n  const { loading, data } = useQuery(GET_CUSTOMER, {\n    variables: { where: { id: formData.customer && formData.customer.id } },\n  });\n\n  useEffect(() => {\n    if (data) {\n      setCustomerShops(data.customer.shops);\n      console.log(data);\n    }\n  });\n\n  return (\n    <form noValidate>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <CustomerAutocomplete\n            variant=\"filled\"\n            fullWidth\n            value={formData.customer}\n            label={translate(\"salesOrder.code\")}\n            onChange={(newValue) => {\n              setFormData({ ...formData, customer: newValue });\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Autocomplete\n            id=\"customer-shops\"\n            options={customerShops}\n            getOptionLabel={(option) => option.nameEn}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"CustomerShop\"\n                fullWidth\n                variant=\"filled\"\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n            onChange={(event, value) => {\n              console.log(value);\n              setFormData({ ...formData, customerShop: value });\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            variant=\"filled\"\n            fullWidth\n            value={formData.code}\n            label={translate(\"salesOrder.code\")}\n            onChange={(e) => setFormData({ ...formData, code: e.target.value })}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl variant=\"filled\" fullWidth>\n            <InputLabel id=\"form-state\">\n              {translate(\"salesOrder.state\")}\n            </InputLabel>\n            <Select\n              labelId={\"state\"}\n              label=\"form-state\"\n              value={formData.state || \"RECEIVED\"}\n              onChange={(e) =>\n                setFormData({ ...formData, state: e.target.value })\n              }\n              disabled={true}\n            >\n              {[\n                { id: \"RECEIVED\", name: translate(\"common.received\") },\n                // { id: 'CONFIRMED', name: translate('common.confirmed') },\n                // { id: 'PACKED', name: translate('common.packed') },\n                // { id: 'SHIPPED', name: translate('common.shipped') },\n                // { id: 'DELIVERED', name: translate('common.delivered') },\n                // { id: 'PAID', name: translate('common.paid') },\n                // { id: 'DELETED', name: translate('common.deleted') },\n              ].map((d) => (\n                <MenuItem key={`POSelect${d.id}`} value={d.id}>\n                  {d.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default BasicForm;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport { NumberField, useTranslate } from \"react-admin\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport BilingualField from \"../../../components/BilingualField\";\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    fontWeight: \"bold\",\n    textAlign: \"right\",\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nfunction Review({ formData }) {\n  const translate = useTranslate();\n  const classes = useStyles();\n  console.log(\"formdata: \", formData);\n\n  const grandTotal = formData.products\n    .reduce((results, product) => results + product.price * product.quantity, 0)\n    .toFixed(2);\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        {translate(\"salesOrder.salesOrderDetails\")}\n      </Typography>\n      <Grid container>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"salesOrder.code\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.code}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"salesOrder.customer\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.customer.nameChi}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"salesOrder.expectedDeliveryAt\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>\n            {dayjs(formData.expectedDeliveryAt).format(\"YYYY-MM-DD\") +\n              \"(YYYY-MM-DD)\"}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            CustomerShop\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.customerShop.nameEn}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"salesOrder.state\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.state}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Table aria-label=\"spanning table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\" colSpan={4}>\n                  Details\n                </TableCell>\n                <TableCell align=\"right\">Price</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell align=\"right\">Product no.</TableCell>\n                <TableCell>Description</TableCell>\n                <TableCell align=\"right\">Qty.</TableCell>\n                <TableCell align=\"right\">Unit</TableCell>\n                <TableCell align=\"right\">Total/(HK$)</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {formData.products &&\n                formData.products.map((product) => {\n                  const subTotal = (product.quantity * product.price).toFixed(\n                    2\n                  );\n                  return (\n                    <TableRow key={product.id}>\n                      <TableCell align=\"center\">{product.code}</TableCell>\n                      <TableCell>\n                        <BilingualField source=\"name\" record={product} />\n                      </TableCell>\n                      <TableCell align=\"right\">{product.quantity}</TableCell>\n                      <TableCell align=\"right\">\n                        <NumberField\n                          source=\"price\"\n                          record={product}\n                          options={{ style: \"currency\", currency: \"HKD\" }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <NumberField\n                          source=\"subTotal\"\n                          record={{ subTotal }}\n                          options={{ style: \"currency\", currency: \"HKD\" }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              <TableRow>\n                <TableCell colSpan={4}>Total</TableCell>\n                <TableCell align=\"right\">\n                  <NumberField\n                    source=\"grandTotal\"\n                    record={{ grandTotal }}\n                    options={{ style: \"currency\", currency: \"HKD\" }}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Review;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslate, useNotify } from \"react-admin\";\nimport { useHistory } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport ProductSelector from \"./ProductSelector\";\nimport Button from \"@material-ui/core/Button\";\nimport BasicForm from \"./BasicForm\";\nimport Review from \"./Review\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport sequentialNumber from \"../../../utils/sequentialNumber\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../../redux/breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(2) * 2)]: {\n      width: 1024,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst ADD_SALES_ORDER = gql`\n  mutation createSalesOrder($data: SalesOrderCreateInput!) {\n    createSalesOrder(data: $data) {\n      id\n      code\n    }\n  }\n`;\n\nconst GET_LAST_SALES_ORDER = gql`\n  query getLastSalesOrder {\n    salesOrders(orderBy: createdAt_DESC, first: 1) {\n      id\n      code\n    }\n  }\n`;\n\nconst GET_FIRST_CUSTOMER = gql`\n  query getFirstCustomer {\n    customers(first: 1) {\n      code\n      id\n      nameEn\n      nameChi\n      wholesalePlan\n    }\n  }\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const classes = useStyles();\n  const history = useHistory();\n  const notify = useNotify();\n  const [addPO] = useMutation(ADD_SALES_ORDER);\n  const [activeStep, setActiveStep] = useState(0);\n  const initialValues = {\n    code: \"\",\n    customer: null,\n    products: [],\n    state: \"RECEIVED\",\n    customerShop: null,\n  };\n  const [formData, setFormData] = useState(initialValues);\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/SalesOrder\", label: \"Sales Order\" },\n      { url: \"/SalesOrder/create\", label: \"Create New\" },\n    ])\n  );\n\n  // getting new PO number\n  const { loading: loadingPO, data: lastPO } = useQuery(GET_LAST_SALES_ORDER);\n  useEffect(() => {\n    if (lastPO && lastPO.salesOrders.length > 0 && formData.code === \"\") {\n      const last = lastPO.salesOrders[0];\n      setFormData({\n        ...formData,\n        code: sequentialNumber.numberAfter(last.code),\n      });\n    }\n  }, [lastPO, formData]);\n\n  // getting default customer\n  const { loading: loadingCustomer, data: firstCustomer } = useQuery(\n    GET_FIRST_CUSTOMER\n  );\n  useEffect(() => {\n    if (\n      firstCustomer &&\n      firstCustomer.customers.length > 0 &&\n      !formData.customer\n    ) {\n      const customer = firstCustomer.customers[0];\n      setFormData({ ...formData, customer });\n    }\n  }, [firstCustomer, formData]);\n\n  if (loadingPO || loadingCustomer) return \"<div>Loading...</div>\";\n\n  const steps = [\n    translate(\"salesOrder.salesOrderDetails\"),\n    translate(\"salesOrder.selectProducts\"),\n    translate(\"salesOrder.review\"),\n  ];\n\n  const calculateTotalPrice = () => {\n    return formData.products.reduce((r, p) => {\n      return r + parseFloat(p.price) * p.quantity;\n    }, 0);\n  };\n  const calculateSubTotalPrice = () => {\n    return formData.products.reduce((r, p) => {\n      if (p.discount) {\n        if (p.discount.includes(\"%\")) {\n          const percent = 1 - parseFloat(p.discount) / 100;\n          return r + (parseFloat(p.price) / percent) * p.quantity;\n        } else if (p.discount.includes(\"HKD\")) {\n          const discountAmount = parseFloat(p.discount.replace(\"HKD\", \"\"));\n          return r + (parseFloat(p.price) + discountAmount) * p.quantity;\n        }\n      } else {\n        return r + parseFloat(p.price) * p.quantity;\n      }\n    }, 0);\n  };\n\n  const handleSave = () => {\n    const grandTotal = calculateTotalPrice();\n    const subtotal = calculateSubTotalPrice();\n    const data = {\n      code: formData.code,\n      grandTotal,\n      subtotal,\n      discountAmount: subtotal - grandTotal,\n      state: formData.state,\n      shopId: formData.customerShop.id,\n      products: {\n        create: formData.products.map((p) => ({\n          productId: p.id,\n          quantity: parseInt(p.quantity, 10),\n          price: parseFloat(p.price),\n          totalPrice: parseFloat(p.quantity) * parseFloat(p.price),\n        })),\n      },\n    };\n\n    addPO({ variables: { data } })\n      .then(() => {\n        history.push(\"/SalesOrder\");\n      })\n      .catch((error) => {\n        notify(`Error: ${error.message}`, \"warning\");\n      });\n  };\n\n  const handleProductSelected = (product, selected) => {\n    const currentIds = formData.products.map((p) => p.id);\n    if (selected) {\n      if (!currentIds.includes(product.id)) {\n        setFormData({\n          ...formData,\n          products: [...formData.products, product],\n        });\n      }\n    } else {\n      if (currentIds.includes(product.id)) {\n        formData.products.splice(currentIds.indexOf(product.id), 1);\n        setFormData({\n          ...formData,\n          products: formData.products,\n        });\n      }\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n          {translate(\"salesOrder.createSalesOrder\")}\n          <Badge\n            style={{ float: \"right\" }}\n            badgeContent={formData.products.length}\n            color=\"primary\"\n          >\n            <ShoppingCart />\n          </Badge>\n        </Typography>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        <React.Fragment>\n          {activeStep === 0 && (\n            <BasicForm formData={formData} setFormData={setFormData} />\n          )}\n          {activeStep === 1 && (\n            <ProductSelector\n              selected={formData.products}\n              onSelected={handleProductSelected}\n              customer={formData.customer}\n            />\n          )}\n          {activeStep === 2 && <Review formData={formData} />}\n\n          <div className={classes.buttons}>\n            {activeStep > 0 && (\n              <Button onClick={handleBack} color=\"primary\">\n                {translate(\"common.prev\")}\n              </Button>\n            )}\n            {activeStep < 2 && (\n              <Button onClick={handleNext} color=\"primary\">\n                {translate(\"common.next\")}\n              </Button>\n            )}\n            {activeStep === 2 && (\n              <Button onClick={handleSave} color=\"primary\">\n                {translate(\"common.confirm\")}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      </Paper>\n    </main>\n  );\n};\n","import { useHistory } from \"react-router-dom\";\nimport {\n  DateField,\n  NumberField,\n  EditButton,\n  Datagrid,\n  ReferenceField,\n  ReferenceArrayField,\n  Show,\n  SimpleShowLayout,\n  TextField,\n  useTranslate,\n  ShowController,\n  ShowView,\n} from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport { Add, Edit, Print } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport SCGenerator from \"../../utils/generateSC\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst GET_SC = gql`\n  query salesOrder($where: SalesOrderWhereUniqueInput!) {\n    salesOrder(where: $where) {\n      id\n      code\n      subtotal\n      grandTotal\n      discountAmount\n      state\n      shippingDate\n      shop {\n        phone\n        nameEn\n        deliverAddress\n        customer {\n          code\n          billingAddress\n          mobile\n          nameEn\n          paymentMethod\n          wholesalePlan\n        }\n      }\n      products {\n        id\n        totalPrice\n        product {\n          nameEn\n          id\n          code\n        }\n        price\n        quantity\n      }\n    }\n  }\n`;\n\nexport const SalesOrderShow = ({ permissions, ...props }) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const history = useHistory();\n  console.log(\"SalesOrder Show\", props);\n  const toEdit = () => {\n    const { id } = props;\n    history.push(`/SalesOrder/${id}/edit`);\n  };\n  const { loading, data } = useQuery(GET_SC, {\n    variables: { where: { id: props.id } },\n  });\n  const onEditItem = (po) => (e) => {\n    console.log(po);\n    console.log(e);\n  };\n\n  const toCreateItem = () => {\n    const { id } = props;\n    history.push(\"/SalesOrderItem/create\", {\n      record: { salesOrder: { id }, customer: data.salesOrder.shop.customer },\n    });\n  };\n\n  // const isPaid =\n  //   (data && data.salesOrder.state !== \"PAID\") || permissions === \"admin\";\n  let isPaid = true;\n  isPaid = data && data.salesOrder.state === \"PAID\";\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={9}>\n        <Typography variant=\"h6\">\n          {translate(\"common.information\")}&nbsp;\n          {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={toEdit}>\n              <Edit />\n              &nbsp;{translate(\"common.edit\")}\n            </Button>\n          ) : null}\n          {!isPaid ? (\n            <Button\n              color=\"primary\"\n              size=\"small\"\n              onClick={SCGenerator(data)}\n              disabled={loading}\n            >\n              <Print />\n              &nbsp;{translate(\"common.print\")}\n            </Button>\n          ) : null}\n        </Typography>\n        <ShowController title=\"Sales Order Details\" {...props}>\n          {(controllerProps) => {\n            const label = controllerProps.record\n              ? controllerProps.record.code\n              : \"\";\n            const id = controllerProps.record ? controllerProps.record.id : \"\";\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/SalesOrder\", label: \"Sales Order\" },\n                { url: `/SalesOrder/${id}/show`, label: `Details: ${label}` },\n              ])\n            );\n            return (\n              <ShowView {...controllerProps}>\n                <SimpleShowLayout>\n                  <ReferenceField\n                    label=\"Customer\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                  >\n                    <ReferenceField\n                      label=\"Customer\"\n                      source=\"customer.id\"\n                      reference=\"Customer\"\n                      link={(shop, referece) =>\n                        `/Customer/${shop.customer.id}/show`\n                      }\n                    >\n                      <BilingualField source=\"name\" />\n                    </ReferenceField>\n                  </ReferenceField>\n                  <ReferenceField\n                    label=\"Wholesale plan\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    link={false}\n                  >\n                    <ReferenceField\n                      label=\"Customer\"\n                      source=\"customer.id\"\n                      reference=\"Customer\"\n                      link={false}\n                    >\n                      <TextField source=\"wholesalePlan\" />\n                    </ReferenceField>\n                  </ReferenceField>\n                  <ReferenceField\n                    label=\"Shop\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    link=\"show\"\n                  >\n                    <TextField source=\"code\" />\n                  </ReferenceField>\n                  <TextField source=\"code\" label=\"Sales Order No.\" />\n                  <TextField\n                    source=\"shippingDate\"\n                    label=\"Sales Order Shipping Date\"\n                  />\n                  <DateField source=\"createdAt\" />\n                  <DateField source=\"updatedAt\" />\n                </SimpleShowLayout>\n              </ShowView>\n            );\n          }}\n        </ShowController>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Status</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <TextField\n                source=\"state\"\n                addLabel={false}\n                label={translate(\"common.status\")}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Subtotal Price</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"subtotal\"\n                addLabel={false}\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Discount Amount</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"discountAmount\"\n                addLabel={false}\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Grand Total Price</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"grandTotal\"\n                addLabel={false}\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Invoice</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceField\n                label=\"Invoice No.\"\n                reference=\"Invoice\"\n                source=\"invoice.id\"\n                link=\"show\"\n              >\n                <TextField source=\"code\" label=\"Invoice No.\" />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">\n          {translate(\"salesOrder.products\")}&nbsp;\n          {/* {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={toCreateItem}>\n              <Add />\n              &nbsp;{translate(\"common.create\")}\n            </Button>\n          ) : null} */}\n        </Typography>\n        <Show actions={<React.Fragment />} {...props}>\n          <ReferenceArrayField\n            reference=\"SalesOrderItem\"\n            source=\"productsIds\"\n            addLabel={false}\n          >\n            <Datagrid {...props}>\n              <ReferenceField\n                label=\"#\"\n                source=\"product.id\"\n                reference=\"Product\"\n                link=\"show\"\n              >\n                <TextField source=\"code\" label=\"Product No.\" />\n              </ReferenceField>\n              <ReferenceField\n                label=\"Product Name\"\n                source=\"product.id\"\n                reference=\"Product\"\n                link=\"show\"\n              >\n                <BilingualField source=\"name\" />\n              </ReferenceField>\n              <NumberField\n                source=\"price\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <TextField source=\"quantity\" />\n              <NumberField\n                source=\"totalPrice\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              {/* {!isPaid ? (\n                <EditButton />\n              ) : null} */}\n            </Datagrid>\n          </ReferenceArrayField>\n        </Show>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Edit,\n  ReferenceInput,\n  required,\n  SelectInput,\n  SimpleForm,\n  TextInput,\n  useTranslate,\n  SaveButton,\n  Toolbar,\n  useUpdate,\n  useNotify,\n  FormDataConsumer,\n} from \"react-admin\";\nimport { useFormState } from \"react-final-form\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/SalesOrder\";\n\nconst MySaveButton = (props) => {\n  const { record } = props;\n  const [edit] = useUpdate(\"SalesOrder\", record.id);\n  const history = useHistory();\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n\n  const notify = useNotify();\n\n  const formState = useFormState();\n  const handleClick = useCallback(() => {\n    if (!formState.valid) {\n      return;\n    }\n    const { customer, ...formValues } = formState.values;\n    const onSuccess = ({ data: newRecord }) => {\n      notify(\"ra.notification.updated\", \"info\", { smart_count: 1 }, true);\n      redirect();\n    };\n\n    // if (customer.id === record.customer.id) {\n    //   edit(\n    //     {\n    //       payload: {\n    //         data: formState.values,\n    //         previousData: record,\n    //       },\n    //     },\n    //     { undoable: true, onSuccess }\n    //   );\n    // } else {\n    //   edit(\n    //     {\n    //       payload: {\n    //         data: { ...formValues, customerId: customer.id },\n    //         previousData: record,\n    //       },\n    //     },\n    //     { undoable: true, onSuccess }\n    //   );\n    // }\n    edit(\n      {\n        payload: {\n          data: { ...formValues },\n          previousData: record,\n        },\n      },\n      { undoable: true, onSuccess }\n    );\n  }, [formState.valid, formState.values, record, notify, redirect, edit]);\n\n  return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n};\n\nconst MyToolbar = (props) => (\n  <Toolbar {...props}>\n    <MySaveButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n  </Toolbar>\n);\n\nexport const SalesOrderEdit = (props) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const optionRenderer = (customer) => `${customer.code} ${customer.nameChi}`;\n  return (\n    <Edit {...props}>\n      <SimpleForm toolbar={<MyToolbar />} redirect={redirect}>\n        {/* <ReferenceInput label=\"Customer\" source=\"customer.id\" reference=\"Customer\">\n          <SelectInput optionText={optionRenderer} />\n        </ReferenceInput> */}\n        <TextInput\n          source=\"code\"\n          validate={required()}\n          label=\"Sales Order No.\"\n        />\n        <SelectInput\n          source=\"state\"\n          choices={[\n            { id: \"RECEIVED\", name: translate(\"common.received\") },\n            { id: \"CONFIRMED\", name: translate(\"common.confirmed\") },\n            { id: \"PACKED\", name: translate(\"common.packed\") },\n            { id: \"SHIPPED\", name: translate(\"common.shipped\") },\n            { id: \"DELIVERED\", name: translate(\"common.delivered\") },\n            { id: \"PAID\", name: translate(\"common.paid\") },\n            { id: \"DELETED\", name: translate(\"common.deleted\") },\n          ]}\n        />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/SalesOrder\", label: \"Sales Order\" },\n                {\n                  url: `/SalesOrder/${formData.id}`,\n                  label: `Edit: ${formData.code}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  DeleteButton,\n  EditButton,\n  FunctionField,\n  TextField,\n  DateField,\n  NumberField,\n  ReferenceField,\n} from \"react-admin\";\nimport SalesOrderCreate from \"./Create\";\nimport { SalesOrderShow } from \"./Show\";\nimport { SalesOrderEdit } from \"./Edit\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport PropTypes from \"prop-types\";\n\nexport { SalesOrderCreate, SalesOrderShow, SalesOrderEdit };\n\nconst StatusEditButton = ({ record, props, permissions }) =>\n  record.state !== \"PAID\" ? (\n    <EditButton basePath={props.basePath} record={record} />\n  ) : null;\nconst StatusDeleteButton = ({ record, props, permissions }) =>\n  record.state !== \"PAID\" ? (\n    <DeleteButton\n      basePath={props.basePath}\n      record={record}\n      resource={props.resource}\n    />\n  ) : null;\n// const StatusEditButton = ({ record, props, permissions }) => (record.state !== \"PAID\" || permissions === \"admin\" ? <EditButton basePath={props.basePath} record={record} /> : null);\n// const StatusDeleteButton = ({ record, props, permissions }) => (record.state !== \"PAID\" || permissions === \"admin\" ? <DeleteButton basePath={props.basePath} record={record} resource={props.resource} /> : null);\nexport const SalesOrderList = ({ permissions, ...props }) => {\n  console.log(props);\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([{ url: \"/SalesOrder\", label: \"Sales Order\" }]));\n  var state;\n  return (\n    <List\n      {...props}\n      filterDefaultValues={{ state_not: \"DELETED\" }}\n      sort={{ field: \"createdAt\", order: \"DESC\" }}\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Sales Order No.\" />\n        <ReferenceField\n          label=\"Customer\"\n          source=\"shop.id\"\n          reference=\"CustomerShop\"\n        >\n          <ReferenceField\n            label=\"Customer\"\n            source=\"customer.id\"\n            reference=\"Customer\"\n            link={(shop, referece) => `/Customer/${shop.customer.id}/show`}\n          >\n            <BilingualField source=\"name\" />\n          </ReferenceField>\n        </ReferenceField>\n        <ReferenceField\n          label=\"Shop\"\n          source=\"shop.id\"\n          reference=\"CustomerShop\"\n          link=\"show\"\n        >\n          <BilingualField source=\"name\" />\n        </ReferenceField>\n        <NumberField\n          label=\"Grand total price\"\n          source=\"grandTotal\"\n          options={{ style: \"currency\", currency: \"HKD\" }}\n        />\n        <TextField source=\"state\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <FunctionField\n          render={(record) => (\n            <StatusEditButton\n              record={record}\n              props={props}\n              permissions={permissions}\n            />\n          )}\n        />\n        <FunctionField\n          render={(record) => (\n            <StatusDeleteButton\n              record={record}\n              props={props}\n              permissions={permissions}\n            />\n          )}\n        />\n      </Datagrid>\n    </List>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_SUPPLIER = gql`\n  query suppliers($where: SupplierWhereInput) {\n    suppliers(where: $where) {\n      id\n      name\n      creditLine\n    }\n  }\n`;\n\nexport default function SupplierAutocomplete({\n  onChange,\n  value: initialValue,\n}) {\n  const translate = useTranslate();\n  const { loading: fetching, data } = useQuery(GET_SUPPLIER, {\n    variables: { state: \"APPROVED\" },\n  });\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const [options, setOptions] = useState([]);\n  const loading = fetching || (open && options.length === 0);\n  useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      setOptions(\n        data.suppliers.map((obj) => ({\n          id: obj.id,\n          name: obj.name,\n          creditLine: obj.creditLine,\n        }))\n      );\n    }\n  }, [loading, data]);\n\n  const [value, setValue] = useState(initialValue);\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const handleChange = (evt, value) => {\n    console.log(\"value: \", value);\n    setValue(value);\n    onChange(value);\n  };\n\n  return (\n    <Autocomplete\n      id=\"purchase-order-autocomplete\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionSelected={(option, v) => {\n        return option.id === v;\n      }}\n      getOptionLabel={(option) => {\n        return option.name;\n      }}\n      options={options}\n      loading={loading}\n      value={value}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={translate(\"supplier.supplier\")}\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","export const PO_FREEZE_STATE = ['SHIPPED', 'ARRIVED', 'RECEIVED', 'DELETED'];\nexport const PO_CONFIRM_STATE = ['APPROVED', 'SENT', 'ACKED', 'CONFIRMED'];","import React from \"react\";\nimport SupplierAutocomplete from \"../../../components/Inputs/SupplierAutocomplete\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useTranslate } from \"react-admin\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { PO_FREEZE_STATE } from \"../constants\";\n\nfunction BasicForm({ formData, setFormData, permissions }) {\n  const translate = useTranslate();\n  return (\n    <form noValidate>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <SupplierAutocomplete\n            variant=\"filled\"\n            fullWidth\n            value={formData.supplier}\n            label={translate(\"purchaseOrder.code\")}\n            onChange={(newValue) =>\n              setFormData({ ...formData, supplier: newValue })\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            variant=\"filled\"\n            fullWidth\n            value={formData.code}\n            label={translate(\"purchaseOrder.code\")}\n            onChange={(e) => setFormData({ ...formData, code: e.target.value })}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <DatePicker\n            inputVariant=\"filled\"\n            fullWidth\n            value={formData.expectedDeliveryAt}\n            label={translate(\"purchaseOrder.expectedDeliveryAt\")}\n            onChange={(newDate) =>\n              setFormData({ ...formData, expectedDeliveryAt: newDate.toDate() })\n            }\n            format=\"YYYY/MM/DD\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl variant=\"filled\" fullWidth>\n            <InputLabel id=\"form-state\">\n              {translate(\"purchaseOrder.state\")}\n            </InputLabel>\n            <Select\n              disabled={PO_FREEZE_STATE.includes(formData.state)}\n              labelId={\"state\"}\n              label=\"form-state\"\n              value={formData.state || \"APPROVED\"}\n              onChange={(e) =>\n                setFormData({ ...formData, state: e.target.value })\n              }\n            >\n              {[\n                { id: \"DRAFT\", name: translate(\"common.draft\") },\n                { id: \"PENDING\", name: translate(\"common.pending\") },\n              ].map((d) => (\n                <MenuItem key={`POSelect${d.id}`} value={d.id}>\n                  {d.name}\n                </MenuItem>\n              ))}\n              {permissions === \"admin\" && (\n                <MenuItem key=\"POSelectAPPROVED\" value=\"APPROVED\">\n                  {\" \"}\n                  {translate(\"common.approved\")}\n                </MenuItem>\n              )}\n              {/* <MenuItem key=\"POSelectAPPROVED\" value=\"APPROVED\"> */}\n              {/* {\" \"} */}\n              {/* {translate(\"common.approved\")} */}\n              {/* </MenuItem> */}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default BasicForm;\n","import React, { useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport { NumberField, useTranslate } from \"react-admin\";\nimport {\n  TableContainer,\n  Paper,\n  TablePagination,\n  TableBody,\n  TableCell,\n  TableHead,\n  Table,\n  Grid,\n  TableRow,\n} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport BilingualField from \"../../../components/BilingualField\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_SUPPLIER_PO = gql`\n  query getPo($where: PurchaseOrderWhereInput!) {\n    purchaseOrders(where: $where) {\n      totalPrice\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    fontWeight: \"bold\",\n    textAlign: \"right\",\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nfunction Review({ formData, setFormData }) {\n  let end = dayjs().add(1, \"month\").format('YYYY-MM-DD').toString();\n  let start = dayjs().format('YYYY-MM-DD').toString();\n\n  const { loading: loadingPO, data: supplierPO } = useQuery(GET_SUPPLIER_PO, {\n    variables: {\n      where: {\n        createdAt_gt: `${start.substring(0, 7)}`,\n        createdAt_lt: `${end.substring(0, 7)}`,\n        supplierId: formData.supplier.id,\n      },\n    },\n  });\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [page, setPage] = React.useState(0);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const translate = useTranslate();\n  const classes = useStyles();\n  let supplierLine = 0;\n\n  const grandTotal = formData.products.reduce(\n    (results, product) => results + product.price * product.quantity,\n    0\n  );\n  useEffect(() => {\n    if (loadingPO) {\n      console.log('loadingPO')\n    }\n    if (supplierPO) {\n      console.log('supplierPO:', supplierPO)\n      const supplierCreditLine = parseInt(formData.supplier.creditLine);\n      supplierLine = supplierPO.purchaseOrders.reduce(\n        (acc, { totalPrice }) => acc - totalPrice,\n        supplierCreditLine\n      );\n      supplierLine -= grandTotal;\n      console.log('supplierLine', supplierLine)\n      setFormData({ ...formData, canCredit: supplierLine >= 0, supplierLine });\n    }\n    if (!supplierPO) {\n      console.log('error loading supplierPO', supplierPO)\n    }\n  }, [supplierPO, loadingPO]);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        {translate(\"purchaseOrder.purchaseOrderDetails\")}\n      </Typography>\n      <Grid container>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"purchaseOrder.code\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.code}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"purchaseOrder.supplier\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.supplier.name}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            line\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.supplier.creditLine}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"purchaseOrder.expectedDeliveryAt\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>\n            {dayjs(formData.expectedDeliveryAt).format(\"YYYY-MM-DD\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"purchaseOrder.state\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.state}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"spanning table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={3}>\n                    Details\n                  </TableCell>\n                  <TableCell align=\"right\">Price</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Desc</TableCell>\n                  <TableCell align=\"right\">Price</TableCell>\n                  <TableCell align=\"right\">Qty.</TableCell>\n                  <TableCell align=\"right\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {formData.products &&\n                  formData.products\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((product) => {\n                      return (\n                        <TableRow key={product.id}>\n                          <TableCell>\n                            <BilingualField source=\"name\" record={product} />\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <NumberField\n                              source=\"price\"\n                              record={product}\n                              options={{ style: \"currency\", currency: \"HKD\" }}\n                            />\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {product.quantity}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <NumberField\n                              source=\"totalPrice\"\n                              record={product}\n                              options={{ style: \"currency\", currency: \"HKD\" }}\n                            />\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                <TableRow>\n                  <TableCell colSpan={3}>Total</TableCell>\n                  <TableCell align=\"right\">\n                    <NumberField\n                      source=\"grandTotal\"\n                      record={{ grandTotal }}\n                      options={{ style: \"currency\", currency: \"HKD\" }}\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={3}>Supplier Credit Line</TableCell>\n                  <TableCell align=\"right\">\n                    <div>\n                      <NumberField\n                        source=\"supplierLine\"\n                        record={{ ...formData }}\n                        options={{ style: \"currency\", currency: \"HKD\" }}\n                      />\n                      {formData.canCredit ? null : (\n                        <h1 style={{ color: \"red\" }}> Over Credit </h1>\n                      )}\n                    </div>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={formData.products.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Review;\n","import React from \"react\";\nimport { NumberField, useNotify } from \"react-admin\";\nimport CSVReader from \"react-csv-reader\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport csvTemplate from \"./template.csv\";\nimport { makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TablePagination } from \"@material-ui/core\";\nimport BilingualField from \"../../../components/BilingualField\";\n\nconst GET_PRODUCTS = gql`\n  query {\n    products {\n      id\n      code\n      nameChi\n      nameEn\n      minOrderQuantity\n      quantity\n      minStockLevel\n      cost\n      wholeSalePrice1\n      wholeSalePrice2\n      wholeSalePrice3\n      wholeSalePrice4\n      wholeSalePrice5\n    }\n  }\n`;\n\nconst ProductImport = ({ formData, setFormData }) => {\n  const notify = useNotify();\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n  });\n  const { data } = useQuery(GET_PRODUCTS);\n  const importSuccess = async (arr) => {\n    try {\n      arr.shift();\n      const backendData = data.products.reduce((results, row) => {\n        results[row.code] = row;\n        return results;\n      }, {});\n      const products = arr\n        .filter((row) => {\n          const code = row[1] && row[1] !== \"\" && row[1].replace(/-/g, \"\");\n          return row[0] !== \"\" && row[1] !== \"\" && backendData[code];\n        })\n        .map((row) => {\n          const code = row[1].replace(/-/g, \"\");\n          let quantity;\n          if (row[3].includes(\"/\") === true) {\n            quantity = parseInt(row[0]) * parseInt(row[3].split(\"/\"[0]));\n          } else {\n            quantity = row[0];\n          }\n          const price = parseFloat(backendData[code].cost);\n          return {\n            ...backendData[code],\n            quantity,\n            price,\n            totalPrice: quantity * price,\n          };\n        });\n      notify(`Imported ${products.length} Products`);\n      setFormData({\n        ...formData,\n        products,\n      });\n    } catch (error) {\n      notify(`Error: ${error}.`, \"warning\");\n    }\n  };\n  const classes = useStyles();\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [page, setPage] = React.useState(0);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  return (\n    <React.Fragment>\n      <CSVReader onFileLoaded={(data) => importSuccess(data)} label=\"Select .csv file  \" />\n      <a href={csvTemplate} target=\"_blank\">\n        Template\n      </a>\n      {formData.products && formData.products.length > 0 && (\n        <Paper>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"right\">Product no.</TableCell>\n                  <TableCell align=\"right\">Name</TableCell>\n                  <TableCell align=\"right\">Cost</TableCell>\n                  <TableCell align=\"right\">Quantity</TableCell>\n                  <TableCell align=\"right\">Subtotal</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {formData.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                  <TableRow key={row.item}>\n                    <TableCell align=\"right\">{row.code}</TableCell>\n                    <TableCell align=\"right\">\n                      <BilingualField source=\"name\" record={row} />\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <NumberField source=\"price\" record={row} options={{ style: \"currency\", currency: \"HKD\" }} />\n                    </TableCell>\n                    <TableCell align=\"right\">{row.quantity}</TableCell>\n                    <TableCell align=\"right\">\n                      <NumberField source=\"totalPrice\" record={row} options={{ style: \"currency\", currency: \"HKD\" }} />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination rowsPerPageOptions={[5, 10, 25]} component=\"div\" count={formData.products.length} rowsPerPage={rowsPerPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage} />\n        </Paper>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ProductImport;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslate } from \"react-admin\";\nimport { useHistory } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport dayjs from \"dayjs\";\n// import ProductSelector from './ProductSelector';\nimport Button from \"@material-ui/core/Button\";\nimport BasicForm from \"./BasicForm\";\nimport Review from \"./Review\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport sequentialNumber from \"../../../utils/sequentialNumber\";\nimport ProductImport from \"./ProductImport\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../../redux/breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(2) * 2)]: {\n      width: 1024,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst ADD_PURCHASE_ORDER = gql`\n  mutation createPurchaseOrder($data: PurchaseOrderCreateInput!) {\n    createPurchaseOrder(data: $data) {\n      id\n      code\n    }\n  }\n`;\n\nconst GET_LAST_PURCHASE_ORDER = gql`\n  query getLastPurchaseOrder {\n    purchaseOrders(orderBy: code_DESC, first: 1) {\n      id\n      code\n    }\n  }\n`;\n\nconst GET_FIRST_SUPPLIER = gql`\n  query getFirstSupplier {\n    suppliers(first: 1) {\n      id\n      name\n      creditLine\n    }\n  }\n`;\n\nexport default ({ permissions, ...props }) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const classes = useStyles();\n  const history = useHistory();\n  const [addPO] = useMutation(ADD_PURCHASE_ORDER);\n  const [activeStep, setActiveStep] = useState(0);\n  const initialValues = {\n    code: \"\",\n    supplier: null,\n    expectedDeliveryAt: dayjs().add(4, \"month\").toDate(),\n    products: [],\n    state: \"PENDING\",\n  };\n  const [formData, setFormData] = useState(initialValues);\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/PurchaseOrder\", label: \"Purchase Order\" },\n      { url: \"/PurchaseOrder/create\", label: \"Create New\" },\n    ])\n  );\n  let isNextBtnDisable;\n\n  // getting new PO number\n  const { loading: loadingPO, data: lastPO } = useQuery(\n    GET_LAST_PURCHASE_ORDER\n  );\n  useEffect(() => {\n    if (lastPO && lastPO.purchaseOrders.length > 0 && formData.code === \"\") {\n      const last = lastPO.purchaseOrders[0];\n      setFormData({\n        ...formData,\n        code: sequentialNumber.numberAfter(last.code),\n      });\n    }\n  }, [lastPO, formData]);\n\n  // getting default supplier\n  const { loading: loadingSupplier, data: firstSupplier } = useQuery(\n    GET_FIRST_SUPPLIER\n  );\n  useEffect(() => {\n    if (\n      firstSupplier &&\n      firstSupplier.suppliers.length > 0 &&\n      !formData.supplier\n    ) {\n      const supplier = firstSupplier.suppliers[0];\n      setFormData({ ...formData, supplier });\n    }\n  }, [firstSupplier, formData]);\n\n  if (loadingPO || loadingSupplier) return \"<div>Loading...</div>\";\n\n  const steps = [\n    translate(\"purchaseOrder.selectProducts\"),\n    translate(\"purchaseOrder.purchaseOrderDetails\"),\n    translate(\"purchaseOrder.review\"),\n  ];\n  const calculateTotalPrice = () => {\n    return formData.products.reduce((r, p) => {\n      return r + parseFloat(p.quantity) * parseFloat(p.price);\n    }, 0);\n  };\n\n  const handleSave = () => {\n    const data = {\n      code: formData.code,\n      supplierId: formData.supplier.id,\n      expectedDeliveryAt: dayjs(formData.expectedDeliveryAt).toISOString(),\n      totalPrice: calculateTotalPrice(),\n      state: formData.state,\n      products: {\n        create: formData.products.map((p) => ({\n          productId: p.id,\n          quantity: parseInt(p.quantity, 10),\n          price: parseFloat(p.price),\n          totalPrice: parseFloat(p.quantity) * parseFloat(p.price),\n        })),\n      },\n    };\n    addPO({ variables: { data } }).then(() => {\n      history.push(\"/PurchaseOrder\");\n    });\n  };\n\n  // const handleProductSelected = (product, selected) => {\n  //   const currentIds = formData.products.map(p => p.id);\n  //   if (selected) {\n  //     if (!currentIds.includes(product.id)) {\n  //       setFormData({\n  //         ...formData,\n  //         products: [...formData.products, product],\n  //       });\n  //     }\n  //   } else {\n  //     if (currentIds.includes(product.id)) {\n  //       formData.products.splice(currentIds.indexOf(product.id), 1);\n  //       setFormData({\n  //         ...formData,\n  //         products: formData.products,\n  //       });\n  //     }\n  //   }\n  // };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  if (activeStep == 0 && formData.products.length == 0) {\n    isNextBtnDisable = true;\n  } else {\n    isNextBtnDisable = false;\n  }\n\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n          {translate(\"purchaseOrder.createPurchaseOrder\")}\n          <Badge\n            style={{ float: \"right\" }}\n            badgeContent={formData.products.length}\n            color=\"primary\"\n          >\n            <ShoppingCart />\n          </Badge>\n        </Typography>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        <React.Fragment>\n          {activeStep === 0 && (\n            <ProductImport formData={formData} setFormData={setFormData} />\n          )}\n          {activeStep === 1 && (\n            <BasicForm\n              permissions={permissions}\n              formData={formData}\n              setFormData={setFormData}\n            />\n          )}\n          {activeStep === 2 && (\n            <Review formData={formData} setFormData={setFormData} />\n          )}\n\n          <div className={classes.buttons}>\n            {activeStep > 0 && (\n              <Button onClick={handleBack} color=\"primary\">\n                {translate(\"common.prev\")}\n              </Button>\n            )}\n            {activeStep < 2 && (\n              <Button\n                onClick={handleNext}\n                color=\"primary\"\n                disabled={isNextBtnDisable}\n              >\n                {translate(\"common.next\")}\n              </Button>\n            )}\n            {activeStep === 2 && (\n              <Button\n                onClick={handleSave}\n                color=\"primary\"\n                disabled={formData.canCredit != true}\n              >\n                {translate(\"common.save\")}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      </Paper>\n    </main>\n  );\n};\n","import { useHistory } from \"react-router-dom\";\nimport {\n  DateField,\n  NumberField,\n  FunctionField,\n  Datagrid,\n  ReferenceField,\n  Show,\n  SimpleShowLayout,\n  TextField,\n  useTranslate,\n  ShowController,\n  ShowView,\n  List,\n} from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport { Add, Edit } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport { useState } from \"react\";\n\n// const ProductShowActions = ({ basePath, data, resource }) => {\n//   const translate = useTranslate();\n//   const print = (...props) => {\n//     console.log('Print Props', props);\n//   };\n//   return (\n//     <TopToolbar>\n//       <EditButton basePath={basePath} record={data} />\n//       <Button color=\"primary\" size=\"small\" onClick={print}>\n//         <Print />&nbsp;\n//         {translate('common.print')}\n//       </Button>\n//     </TopToolbar>\n//   );\n// };\n\nexport const PurchaseOrderShow = (props) => {\n  const [state, setState] = useState(\"ARRIVED\");\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const history = useHistory();\n  const toEdit = () => {\n    const { id } = props;\n    history.push(`/PurchaseOrder/${id}/edit`);\n  };\n  const toEditItem = (record) => () => {\n    console.log(\"record\", record);\n    // history.push(`/PurchaseOrderItem/${record.id}`);\n  };\n  const toCreateItem = () => {\n    const { id } = props;\n    history.push(\"/PurchaseOrderItem/create\", {\n      record: { purchaseOrder: { id } },\n    });\n  };\n  const onFetchState = (record) => {\n    console.log(\"record: \", record);\n    setState(record.state);\n    return record.state;\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={9}>\n        <Typography variant=\"h6\">\n          {translate(\"common.information\")}&nbsp;\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            onClick={toEdit}\n            disabled={state && state === \"ARRIVED\"}\n          >\n            <Edit />\n            &nbsp;{translate(\"common.edit\")}\n          </Button>\n        </Typography>\n        <ShowController\n          title=\"Purchase Order Details\"\n          actions={<React.Fragment />}\n          {...props}\n        >\n          {(controllerProps) => {\n            const label = controllerProps.record\n              ? controllerProps.record.code\n              : \"\";\n            const id = controllerProps.record ? controllerProps.record.id : \"\";\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/PurchaseOrder\", label: \"Purchase Order\" },\n                {\n                  url: `/PurchaseOrder/${id}/show`,\n                  label: `Details: ${label}`,\n                },\n              ])\n            );\n            return (\n              <ShowView {...controllerProps}>\n                <SimpleShowLayout>\n                  <ReferenceField\n                    label=\"Supplier\"\n                    source=\"supplier.id\"\n                    reference=\"Supplier\"\n                    link={false}\n                  >\n                    <TextField source=\"name\" />\n                  </ReferenceField>\n                  <TextField source=\"code\" label=\"Supplier No.\" />\n                  <DateField source=\"createdAt\" />\n                  <DateField source=\"updatedAt\" />\n                </SimpleShowLayout>\n              </ShowView>\n            );\n          }}\n        </ShowController>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Status</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              {/* <TextField\n                source=\"state\"\n                addLabel={false}\n                label={translate(\"common.status\")}\n              /> */}\n              <FunctionField\n                addLabel={false}\n                render={(record) => onFetchState(record)}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Cost</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"totalPrice\"\n                addLabel={false}\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Expected Delivery Date</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <DateField addLabel={false} source=\"expectedDeliveryAt\" />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">\n          {translate(\"purchaseOrder.products\")}&nbsp;\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            onClick={toCreateItem}\n            disabled={state && state === \"ARRIVED\"}\n          >\n            <Add />\n            &nbsp;{translate(\"common.create\")}\n          </Button>\n        </Typography>\n        <ShowController\n          title=\"Products\"\n          actions={<React.Fragment />}\n          {...props}\n        >\n          {(controllerProps) => {\n            if (!controllerProps.record) {\n              return null;\n            }\n            const id = controllerProps.record ? controllerProps.record.id : \"\";\n            return (\n              <List\n                resource=\"PurchaseOrderItem\"\n                hasCreate={false}\n                hasEdit={false}\n                hasShow={false}\n                hasList={true}\n                exporter={false}\n                basePath=\"/PurchaseOrderItem\"\n                filter={{ purchaseOrder: { id } }}\n              >\n                <Datagrid>\n                  <ReferenceField\n                    label=\"#\"\n                    source=\"product.id\"\n                    reference=\"Product\"\n                  >\n                    <TextField source=\"code\" label=\"Product No.\" />\n                  </ReferenceField>\n                  <ReferenceField\n                    label=\"Product Name\"\n                    source=\"product.id\"\n                    reference=\"Product\"\n                  >\n                    <BilingualField source=\"name\" />\n                  </ReferenceField>\n                  <NumberField\n                    source=\"price\"\n                    options={{ style: \"currency\", currency: \"HKD\" }}\n                  />\n                  <TextField source=\"quantity\" />\n                  <NumberField\n                    source=\"totalPrice\"\n                    options={{ style: \"currency\", currency: \"HKD\" }}\n                  />\n                  <FunctionField\n                    render={(record) => (\n                      <Button\n                        color=\"primary\"\n                        size=\"small\"\n                        disabled={state && state == \"ARRIVED\"}\n                        onClick={toEditItem(record)}\n                      >\n                        <Edit />\n                        &nbsp;{translate(\"common.edit\")}\n                      </Button>\n                    )}\n                  />\n                </Datagrid>\n              </List>\n            );\n          }}\n        </ShowController>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  DeleteButton,\n  TextField,\n  DateField,\n  NumberField,\n  useTranslate,\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  DateInput,\n  SelectInput,\n  FormDataConsumer,\n} from \"react-admin\";\nimport PurchaseOrderCreate from \"./Create\";\nimport { PurchaseOrderShow } from \"./Show\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/PurchaseOrder\";\n\nexport { PurchaseOrderCreate, PurchaseOrderShow };\n\nexport const PurchaseOrderEdit = (props) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\">\n        <TextInput\n          source=\"code\"\n          validate={required()}\n          label=\"Purchase Order No.\"\n        />\n        <DateInput source=\"expectedDeliveryAt\" />\n        <SelectInput\n          source=\"state\"\n          label=\"Status\"\n          choices={[\n            { id: \"DRAFT\", name: translate(\"common.draft\") },\n            { id: \"PENDING\", name: translate(\"common.pending\") },\n            { id: \"CONFIRMED\", name: translate(\"common.confirmed\") },\n            // { id: 'APPROVED', name: translate('common.approved') },\n            // { id: 'SENT', name: translate('common.sent') },\n            // { id: 'ACKED', name: translate('common.acked') },\n            // { id: 'SHIPPED', name: translate('common.shipped') },\n            // { id: 'ARRIVED', name: translate('common.arrived') },\n            // { id: 'RECEIVED', name: translate('common.received') },\n            // { id: 'DELETED', name: translate('common.deleted') },\n          ]}\n        />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/PurchaseOrder\", label: \"Purchase Order\" },\n                {\n                  url: `/PurchaseOrder/${formData.id}`,\n                  label: `Edit: ${formData.code}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const PurchaseOrderList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(\n    setBreadcrumbs([{ url: \"/PurchaseOrder\", label: \"Purchase Order\" }])\n  );\n  return (\n    <List\n      {...props}\n      filterDefaultValues={{ state_not: \"DELETED\" }}\n      sort={{ field: \"createdAt\", order: \"DESC\" }}\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Purchase Order No.\" />\n        <NumberField\n          source=\"totalPrice\"\n          options={{ style: \"currency\", currency: \"HKD\" }}\n        />\n        <DateField source=\"expectedDeliveryAt\" />\n        <TextField source=\"state\" label=\"Status\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { NumberField, useTranslate } from 'react-admin';\nimport PurchaseOrderAutocomplete from '../../../components/Inputs/PurchaseOrderAutocomplete';\nimport ShowText from '../../../components/Shows/ShowText';\nimport dayjs from 'dayjs';\n\nfunction PurchaseOrderSelector({ formData, setFormData }) {\n  const translate = useTranslate();\n\n  const handleSelect = (purchaseOrder) => {\n    purchaseOrder.products.forEach((p) => {\n      p.exactQuantity = 0;\n      p.totalPrice = 0;\n    });\n\n    setFormData({\n      ...formData,\n      purchaseOrder,\n    });\n  };\n\n  const renderPurchaseOrderDetails = () => {\n    const { purchaseOrder } = formData;\n    const expectedDeliveryAt = dayjs(purchaseOrder.expectedDeliveryAt);\n    return (\n      <React.Fragment>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate('purchaseOrder.supplier')}>{purchaseOrder.supplier.name}</ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate('purchaseOrder.expectedDeliveryAt')}>{expectedDeliveryAt.format('YYYY-MM-DD')} </ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate('purchaseOrder.state')}>{purchaseOrder.state}</ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate('purchaseOrder.totalPrice')}>\n            <NumberField source=\"totalPrice\" record={purchaseOrder} options={{ style: 'currency', currency: 'HKD' }} />\n          </ShowText>\n        </Grid>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={6}>\n        <PurchaseOrderAutocomplete\n          onChange={handleSelect}\n          defaultValue={formData.purchaseOrder}\n        />\n      </Grid>\n      {formData.purchaseOrder && renderPurchaseOrderDetails()}\n    </Grid>\n  );\n}\n\nPurchaseOrderSelector.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n};\n\nexport default PurchaseOrderSelector;","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport { KeyboardArrowDown, KeyboardArrowUp, Remove } from '@material-ui/icons';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOffOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport { NumberField, ReferenceField, TextField, DateField } from 'react-admin';\nimport BilingualField from '../../../components/BilingualField';\nimport Button from '@material-ui/core/Button';\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nexport default ({ row, onRowClick, onRemoveChecked }) => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  const { product, checked, quantity, id } = row;\n  const totalExactQuantity = checked ? checked.reduce((sum, r) => {\n    sum += parseInt(r.exactQuantity, 10);\n    return sum;\n  }, 0) : 0;\n  const handleRowClick = () => {\n    onRowClick && onRowClick(row);\n  }\n  const handleRemoveChecked = (index) => () => {\n    onRemoveChecked && onRemoveChecked(index, row);\n  }\n  return (\n    <React.Fragment>\n      <TableRow hover className={classes.root} onClick={() => setOpen(!open)}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell><TextField source=\"code\" record={product} /></TableCell>\n        <TableCell component=\"th\">\n          <BilingualField source=\"name\" record={product} />\n        </TableCell>\n        <TableCell align=\"right\">{quantity}</TableCell>\n        <TableCell align=\"right\">{totalExactQuantity}</TableCell>\n        <TableCell align=\"right\">\n          <IconButton onClick={handleRowClick}>\n            {quantity === totalExactQuantity ? <CheckCircleIcon color=\"secondary\" /> : <HighlightOffIcon color=\"primary\" />}\n          </IconButton>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Details\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Warehouse</TableCell>\n                    <TableCell>Expiry Date</TableCell>\n                    <TableCell>Quantity</TableCell>\n                    <TableCell>Labels</TableCell>\n                    <TableCell align=\"right\" />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {checked && checked.map((detail, i) => {\n                    return (\n                      <TableRow key={`checked-${id}-${i}`}>\n                        <TableCell>\n                          <ReferenceField source=\"warehouseId\" record={detail} reference=\"Warehouse\" basePath=\"/Warehouse\">\n                            <TextField source=\"name\" />\n                          </ReferenceField>\n                        </TableCell>\n                        <TableCell>\n                          <DateField source=\"expiryDate\" record={detail} />\n                        </TableCell>\n                        <TableCell>\n                          <NumberField source=\"exactQuantity\" record={detail} />\n                        </TableCell>\n                        <TableCell align=\"right\">{detail.labelFrom} - {detail.labelTo}</TableCell>\n                        <TableCell>\n                          <Button variant=\"outlined\" size=\"small\" onClick={handleRemoveChecked(i)} color=\"secondary\">\n                            <Remove />\n                            <Typography variant=\"body1\">Remove</Typography>\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    )\n                  })}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}","import { Box, Paper, TableContainer, TablePagination } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport QuantityCheckRow from './QuantityCheckRow';\nimport React from 'react';\nimport { useTranslate } from 'react-admin';\n\nexport default ({ products, filterItemId, onRowClick, onRemoveChecked }) => {\n  const translate = useTranslate();\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n  const [page, setPage] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const records = filterItemId ? [products.find(p => p.id === filterItemId)] : products;\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>{translate('product.code')}</TableCell>\n              <TableCell>{translate('product.name')}</TableCell>\n              <TableCell align=\"right\">{translate('product.quantity')}</TableCell>\n              <TableCell align=\"right\">{translate('shipping.quantityCheck')}</TableCell>\n              <TableCell align=\"right\">{translate('shipping.status')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {records.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <QuantityCheckRow row={row} key={row.id} onRowClick={onRowClick} onRemoveChecked={onRemoveChecked} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination rowsPerPageOptions={[5, 10, 25]} component=\"div\" count={products.length} rowsPerPage={rowsPerPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage} />\n    </React.Fragment>\n  )\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { useTranslate } from 'react-admin';\nimport QuantityCheckTable from './QuantityCheckTable';\n\nfunction Review({ formData }) {\n  const translate = useTranslate();\n  const { products } = formData.purchaseOrder;\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        {translate('menu.item.shipping')}\n      </Typography>\n      <QuantityCheckTable products={products} />\n    </React.Fragment>\n  );\n}\n\nexport default Review;\n","function uniqueLabelCheck({ input, backendData }) {\n  console.log(\"backend Data: \", backendData);\n  console.log(\"input: \", input);\n  const dataBool = [];\n  backendData.forEach(({ labelFrom, labelTo }, index) => {\n    dataBool[index] = { labelFrom: false, labelTo: false };\n\n    if (input.labelFrom > labelTo) {\n      dataBool[index].labelFrom = true;\n    }\n    if (input.labelTo > labelTo) {\n      dataBool[index].labelTo = true;\n    }\n    console.log({ labelFrom, labelTo });\n    console.log(dataBool[index]);\n  });\n  const res = dataBool.find(\n    ({ labelFrom, labelTo }) => labelFrom === true && labelTo === true\n  );\n  console.log(\"res: --\", res);\n  return res == undefined;\n}\n\nexport default uniqueLabelCheck;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  NumberInput,\n  useNotify,\n  ReferenceInput,\n  SelectInput,\n  DateInput,\n  TextInput,\n  AutocompleteInput,\n  FormDataConsumer,\n  required,\n} from \"react-admin\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { Add } from \"@material-ui/icons\";\nimport { Form } from \"react-final-form\";\nimport Typography from \"@material-ui/core/Typography\";\nimport sequentialNumber from \"../../../utils/sequentialNumber\";\nimport QuantityCheckTable from \"./QuantityCheckTable\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport uniqueLabelCheck from \"../../../utils/uniqueLabelCheck\";\n\nconst QUERY_SHIPPING_LABEL = gql`\n  query queryShippingItems {\n    shippingItems {\n      labelFrom\n      labelTo\n    }\n  }\n`;\n\nexport default ({ formData, setFormData }) => {\n  const notify = useNotify();\n  const { defaultLabel, setDefaultLabel } = useState(\"\");\n  const { purchaseOrder } = formData;\n  const { products } = purchaseOrder;\n  const { loading, data } = useQuery(QUERY_SHIPPING_LABEL);\n  // const [labelList, setLabelList] = useState([]);\n  const [labelList, setLabelList] = useState([]);\n  // console.log(\"labelList--outside: \", labelList);\n\n  useEffect(() => {\n    console.log(\"call useUffect: \", data);\n    if (data) {\n      setLabelList(data.shippingItems);\n      console.log(\"fetching data.....\", data.shippingItems);\n      console.log(\"inside\", labelList);\n    }\n  }, [data]);\n\n  const options = products.map((item) => ({\n    id: item.id,\n    name: item.product.code + \" - \" + item.product.nameChi,\n  }));\n\n  // const onSubmit = useCallback(\n  //   (values, form, labelList) => {\n  //     console.log(\"data.shippingItems: \", labelList);\n  //     const item = products.find((item) => item.id === values.itemId);\n  //     if (!item) {\n  //       notify(\"Please select product first\", \"error\");\n  //       return;\n  //     }\n  //     if (!item.checked) {\n  //       item.checked = [];\n  //     }\n  //     const labelTo = values.labelFrom\n  //       ? sequentialNumber.numberAfter(\n  //           values.labelFrom,\n  //           parseInt(values.exactQuantity, 10) - 1\n  //         )\n  //       : \"\";\n  //     console.log(\"start checking:.....\");\n  //     console.log(\"data: \", data && data.shippingItems);\n  //     // check with backend here\n  //     const checking = uniqueLabelCheck({\n  //       input: {\n  //         labelFrom: values.labelFrom,\n  //         labelTo,\n  //       },\n  //       backendData: data && data.shippingItems,\n  //     });\n\n  //     console.log(\"checking\", checking);\n\n  //     item.checked.push({ ...values, labelTo });\n  //     setFormData({\n  //       ...formData,\n  //       purchaseOrder: {\n  //         ...purchaseOrder,\n  //         products,\n  //       },\n  //     });\n  //     setTimeout(() =>\n  //       form.reset({\n  //         warehouseId: values.warehouseId,\n  //         expiryDate: values.expiryDate,\n  //         labelFrom: values.labelFrom\n  //           ? sequentialNumber.numberAfter(labelTo)\n  //           : \"\",\n  //       })\n  //     );\n  //   },\n  //   [setFormData, formData]\n  // );\n\n  const onSubmit = (values, form) => {\n    const item = products.find((item) => item.id === values.itemId);\n    if (!item) {\n      notify(\"Please select product first\", \"error\");\n      return;\n    }\n    if (!item.checked) {\n      item.checked = [];\n    }\n    const labelTo = values.labelFrom\n      ? sequentialNumber.numberAfter(\n          values.labelFrom,\n          parseInt(values.exactQuantity, 10) - 1\n        )\n      : \"\";\n    // check with backend here\n    const checking = uniqueLabelCheck({\n      input: {\n        labelFrom: values.labelFrom,\n        labelTo,\n      },\n      backendData: labelList,\n    });\n\n    console.log(\"checking\", checking);\n\n    item.checked.push({ ...values, labelTo });\n    setFormData({\n      ...formData,\n      purchaseOrder: {\n        ...purchaseOrder,\n        products,\n      },\n    });\n    setTimeout(() =>\n      form.reset({\n        warehouseId: values.warehouseId,\n        expiryDate: values.expiryDate,\n        labelFrom: values.labelFrom\n          ? sequentialNumber.numberAfter(labelTo)\n          : \"\",\n      })\n    );\n  };\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      render={({ handleSubmit, values, form, submitting, pristine }) => {\n        const { quantity, labelFrom } = values;\n        if (quantity && labelFrom) {\n          console.log(quantity, labelFrom);\n        }\n        const handleRowClick = (row) => {\n          form.change(\"itemId\", row.id);\n        };\n\n        const handleRemoveChecked = (i, row) => {\n          const item = products.find((p) => p.id === row.id);\n          item.checked.splice(i, 1);\n          setFormData({\n            ...formData,\n            purchaseOrder: {\n              ...purchaseOrder,\n              products,\n            },\n          });\n        };\n\n        return (\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n              <Grid item style={{ flexGrow: 1 }}>\n                <AutocompleteInput\n                  source=\"itemId\"\n                  fullWidth\n                  choices={options}\n                  validate={required()}\n                />\n              </Grid>\n              <Grid item>\n                <ReferenceInput\n                  label=\"Warehouse\"\n                  source=\"warehouseId\"\n                  reference=\"Warehouse\"\n                  filterToQuery={() => ({ type: \"NORMAL\" })}\n                >\n                  <SelectInput optionText=\"name\" validate={required()} />\n                </ReferenceInput>\n              </Grid>\n              <Grid item>\n                <DateInput source=\"expiryDate\" validate={required()} />\n              </Grid>\n              <Grid item>\n                <NumberInput\n                  source=\"exactQuantity\"\n                  label=\"Quantity\"\n                  validate={required()}\n                />\n              </Grid>\n              <Grid item>\n                <TextInput source=\"labelFrom\" defaultValue={defaultLabel} />\n              </Grid>\n              <Grid item>\n                <FormDataConsumer>\n                  {({ formData, ...rest }) => {\n                    const { exactQuantity, labelFrom } = formData;\n                    if (exactQuantity && labelFrom) {\n                      return (\n                        <Typography variant=\"body1\">\n                          {sequentialNumber.numberAfter(\n                            labelFrom,\n                            parseInt(exactQuantity - 1, 10)\n                          )}\n                        </Typography>\n                      );\n                    }\n                  }}\n                </FormDataConsumer>\n              </Grid>\n              <Grid item>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  disabled={submitting}\n                >\n                  <Add />\n                  Add Record\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={form.reset}\n                  disabled={submitting || pristine}\n                >\n                  Reset\n                </Button>\n              </Grid>\n            </Grid>\n            <FormDataConsumer>\n              {({ formData, ...rest }) => {\n                return (\n                  <QuantityCheckTable\n                    products={products}\n                    filterItemId={formData.itemId}\n                    onRowClick={handleRowClick}\n                    onRemoveChecked={handleRemoveChecked}\n                  />\n                );\n              }}\n            </FormDataConsumer>\n          </form>\n        );\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '@material-ui/core';\nimport QuantityCheckForm from './QuantityCheckForm';\n\nfunction QuantityCheck({ formData, setFormData, setCheckSuccess }) {\n  return (\n    <Box p={1}>\n      <QuantityCheckForm setFormData={setFormData} formData={formData} />\n    </Box>\n  );\n}\n\nQuantityCheck.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n};\n\nexport default QuantityCheck;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslate, useNotify } from \"react-admin\";\nimport { useHistory } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PurchaseOrderSelector from \"./PurchaseOrderSelector\";\nimport Review from \"./Review\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport QuantityCheck from \"./QuantityCheck\";\nimport dayjs from \"dayjs\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../../redux/breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst ADD_SHIPPING = gql`\n  mutation createShipping($data: ShippingCreateInput!) {\n    createShipping(data: $data) {\n      id\n      code\n    }\n  }\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const classes = useStyles();\n  const history = useHistory();\n  const notify = useNotify();\n  const [addShipping] = useMutation(ADD_SHIPPING);\n  const [activeStep, setActiveStep] = useState(0);\n  const [checkSuccess, setCheckSuccess] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const initialValues = {\n    purchaseOrder: null,\n    checkedProducts: {},\n    totalPrice: 0,\n  };\n  const [formData, setFormData] = useState(initialValues);\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/Shipping\", label: \"Shipping\" },\n      { url: `/Shipping/create`, label: \"Create New\" },\n    ])\n  );\n\n  const steps = [\n    translate(\"shipping.selectPurchaseOrder\"),\n    translate(\"shipping.quantityCheck\"),\n    translate(\"shipping.review\"),\n  ];\n\n  const handleSave = () => {\n    const { purchaseOrder, totalPrice } = formData;\n\n    addShipping({\n      variables: {\n        data: {\n          code: `SP-${purchaseOrder.code}`,\n          purchaseOrderId: purchaseOrder.id,\n          deliveryAt: dayjs().toISOString(),\n          totalPrice,\n          products: {\n            create: purchaseOrder.products.reduce((arr, p) => {\n              const { checked } = p;\n              if (!checked || checked.length === 0) {\n                return arr;\n              }\n              const expectedQuantity = parseInt(p.quantity, 10) || 0;\n              const fields = checked.map((c) => ({\n                productId: p.product.id,\n                warehouseId: c.warehouseId,\n                labelFrom: c.labelFrom,\n                labelTo: c.labelTo,\n                expiryDate: c.expiryDate === \"-\" ? null : c.expiryDate,\n                expectedQuantity,\n                quantity: parseInt(c.exactQuantity, 10) || 0,\n                price: p.price,\n                totalPrice: expectedQuantity * p.price,\n              }));\n\n              return [...arr, ...fields];\n            }, []),\n          },\n        },\n      },\n    })\n      .then(() => {\n        history.push(\"/Shipping\");\n      })\n      .catch((error) => {\n        notify(`Error: ${error.message}`, \"warning\");\n      });\n  };\n\n  const checkQuantity = () => {\n    const { products } = formData.purchaseOrder;\n    for (let item of products) {\n      const expectedQuantity = parseInt(item.quantity, 10) || 0;\n      const quantity = item.checked\n        ? item.checked.reduce((sum, c) => {\n            sum += parseInt(c.exactQuantity, 10);\n            return sum;\n          }, 0)\n        : 0;\n      if (expectedQuantity !== quantity) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const handleNext = () => {\n    if (activeStep === 1 && !checkQuantity()) {\n      handleClickOpen();\n    } else {\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (option) => () => {\n    if (option) {\n      setOpen(false);\n      setActiveStep(activeStep + 1);\n    } else {\n      setOpen(false);\n    }\n  };\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Warning!!\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Some product's quantity not match! Continue?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose(false)} color=\"primary\">\n              No\n            </Button>\n            <Button onClick={handleClose(true)} color=\"primary\" autoFocus>\n              Yes\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <React.Fragment>\n          {activeStep === 0 && (\n            <PurchaseOrderSelector\n              formData={formData}\n              setFormData={setFormData}\n            />\n          )}\n          {activeStep === 1 && (\n            <QuantityCheck\n              setCheckSuccess={setCheckSuccess}\n              formData={formData}\n              setFormData={setFormData}\n            />\n          )}\n          {activeStep === 2 && <Review formData={formData} />}\n\n          <div className={classes.buttons}>\n            {activeStep > 0 && (\n              <Button onClick={handleBack} color=\"primary\">\n                {translate(\"common.prev\")}\n              </Button>\n            )}\n            {activeStep < 2 && (\n              <Button onClick={handleNext} color=\"primary\">\n                {translate(\"common.next\")}\n              </Button>\n            )}\n            {activeStep === 2 && (\n              <Button onClick={handleSave} color=\"primary\">\n                {translate(\"common.confirm\")}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      </Paper>\n    </main>\n  );\n};\n","import { DateField, NumberField, Datagrid, ReferenceField, ReferenceArrayField, Show, SimpleShowLayout, SingleFieldList, TextField, TopToolbar, useTranslate, Tab, ReferenceManyField, ShowController, ShowView } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BilingualField from '../../components/BilingualField';\nimport { useDispatch } from 'react-redux';\nimport { setBreadcrumbs } from '../../redux/breadcrumbs';\n\nexport const ShippingShow = props => {\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={9}>\n        <Typography variant=\"h6\">\n          Shipping no.&nbsp;\n        </Typography>\n        <ShowController title=\"Purchase Order Details\" actions={<React.Fragment />} {...props}>\n          {controllerProps => {\n            const label = controllerProps.record ? controllerProps.record.code : '';\n            const id = controllerProps.record ? controllerProps.record.id : '';\n            dispatch(setBreadcrumbs([{ url: '/Shipping', label: 'Shipping' }, { url: `/Shipping/${id}/show`, label: `Details: ${label}` }]));\n            return (\n              <ShowView {...controllerProps}>\n                <SimpleShowLayout>\n                  <TextField source=\"code\" label=\"Shipping No.\" />\n                  <DateField source=\"createdAt\" />\n                  <DateField source=\"updatedAt\" />\n                </SimpleShowLayout>\n              </ShowView>\n            );\n          }}\n        </ShowController>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Total Price</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField source=\"totalPrice\" options={{ style: 'currency', currency: 'HKD' }} />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Delivery Date</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <DateField source=\"deliveryAt\" />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Purchase Order</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceField label=\"Purchase Order\" reference=\"PurchaseOrder\" source=\"purchaseOrder.id\" link=\"show\">\n                <TextField source=\"code\" label=\"Purchase Order No.\" />\n              </ReferenceField>\n              <ReferenceField label=\"Purchase Order\" reference=\"PurchaseOrder\" source=\"purchaseOrder.id\" link=\"show\">\n                <NumberField source=\"totalPrice\" options={{ style: 'currency', currency: 'HKD' }} />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item container xs={12} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Items</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceArrayField label=\"Items\" reference=\"ShippingItem\" source=\"productsIds\">\n                <Datagrid>\n                  <ReferenceField label=\"#\" source=\"product.id\" reference=\"Product\">\n                    <TextField source=\"code\" label=\"Product No.\" />\n                  </ReferenceField>\n                  <ReferenceField label=\"Product Name\" source=\"product.id\" reference=\"Product\">\n                    <BilingualField source=\"name\" />\n                  </ReferenceField>\n                  <TextField source=\"labelFrom\" />\n                  <TextField source=\"labelTo\" />\n                  <DateField source=\"expiryDate\" />\n                  <NumberField source=\"price\" options={{ style: 'currency', currency: 'HKD' }} />\n                  <TextField source=\"quantity\" />\n                  <NumberField source=\"totalPrice\" options={{ style: 'currency', currency: 'HKD' }} />\n                </Datagrid>\n              </ReferenceArrayField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}","import React from \"react\";\nimport { List, Datagrid, EditButton, DeleteButton, TextField, DateField, Edit, SimpleForm, TextInput, required, DateInput, SelectInput, FormDataConsumer } from \"react-admin\";\nimport ShippingCreate from \"./Create\";\nimport { ShippingShow } from \"./Show\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\n// const redirect = () => '/Shipping';\n\nexport { ShippingCreate, ShippingShow };\n\nexport const ShippingEdit = (props) => {\n  const dispatch = useDispatch();\n  console.log(\"Edit props\", props);\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\">\n        <TextInput source=\"code\" validate={required()} label=\"Shipping No.\" />\n        <DateInput source=\"expectedDeliveryAt\" />\n        <SelectInput\n          source=\"state\"\n          choices={[\n            { id: \"DRAFT\", name: \"DRAFT\" },\n            { id: \"APPROVED\", name: \"APPROVED\" },\n            { id: \"CONFIRMED\", name: \"CONFIRMED\" },\n          ]}\n        />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/Shipping\", label: \"Shipping\" },\n                { url: `/Shipping/${formData.id}`, label: `Edit: ${formData.code}` },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const ShippingList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([{ url: \"/Shipping\", label: \"Shipping\" }]));\n  return (\n    <List {...props} filterDefaultValues={{ state_not: \"DELETE\" }} sort={{ field: \"createdAt\", order: \"DESC\" }}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Shipping No.\" />\n        <DateField source=\"deliveryAt\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import { useHistory } from \"react-router-dom\";\nimport {\n  ChipField,\n  DateField,\n  NumberField,\n  EditButton,\n  Datagrid,\n  ReferenceField,\n  ReferenceArrayField,\n  Show,\n  SimpleShowLayout,\n  SingleFieldList,\n  TextField,\n  TopToolbar,\n  useTranslate,\n  ShowController,\n  ShowView,\n} from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport { Edit, Print } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\n// const ProductShowActions = ({ basePath, data, resource }) => {\n//   const translate = useTranslate();\n//   const print = (...props) => {\n//     console.log('Print Props', props);\n//   };\n//   return (\n//     <TopToolbar>\n//       <EditButton basePath={basePath} record={data} />\n//       <Button color=\"primary\" size=\"small\" onClick={print}>\n//         <Print />&nbsp;\n//         {translate('common.print')}\n//       </Button>\n//     </TopToolbar>\n//   );\n// };\n\nexport const ProductShow = (props) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const history = useHistory();\n\n  const toEdit = () => {\n    const { basePath, id } = props;\n    history.push(`${basePath}/${id}/edit`);\n  };\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Typography variant=\"h6\">\n          Basic Information&nbsp;\n          <Button color=\"primary\" size=\"small\" onClick={toEdit}>\n            <Edit />\n            &nbsp;{translate(\"common.edit\")}\n          </Button>\n        </Typography>\n        <ShowController\n          title=\"Product Details\"\n          actions={<React.Fragment />}\n          {...props}\n        >\n          {(controllerProps) => {\n            const label = controllerProps.record\n              ? controllerProps.record.code\n              : \"\";\n            const id = controllerProps.record ? controllerProps.record.id : \"\";\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/Product\", label: \"Product\" },\n                { url: `/Product/${id}/show`, label: `Details: ${label}` },\n              ])\n            );\n            return (\n              <ShowView {...controllerProps}>\n                <SimpleShowLayout>\n                  <TextField source=\"code\" label=\"Product No.\" />\n                  <TextField source=\"nameEn\" />\n                  <TextField source=\"nameChi\" />\n                  <TextField source=\"discount\" />\n                  <TextField source=\"shortDescription\" />\n                  <TextField source=\"longDescription\" />\n                  {/*<ImageField source=\"images\" src=\"src\" title=\"title\" />*/}\n                  <TextField source=\"sku\" />\n                  <TextField source=\"upc\" />\n                  <TextField source=\"minOrderQuantity\" />\n                  <TextField source=\"minStockLevel\" />\n                  <DateField source=\"onlineDate\" />\n                  <DateField source=\"offlineDate\" />\n                  <ReferenceArrayField\n                    label=\"Categories\"\n                    reference=\"ProductCategory\"\n                    source=\"categoriesIds\"\n                  >\n                    <SingleFieldList>\n                      <ChipField source=\"nameChi\" />\n                    </SingleFieldList>\n                  </ReferenceArrayField>\n                </SimpleShowLayout>\n              </ShowView>\n            );\n          }}\n        </ShowController>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Cost</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"cost\"\n                addLabel={false}\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Wholesales Prices</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"wholeSalePrice1\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"wholeSalePrice2\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"wholeSalePrice3\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"wholeSalePrice4\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"wholeSalePrice5\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Retails Prices</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"retailPrice1\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"retailPrice2\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"retailPrice3\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"retailPrice4\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"retailPrice5\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Total Stock</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <TextField source=\"quantity\" addLabel={false} />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Warehouse Summary</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceArrayField\n                reference=\"WarehouseSummary\"\n                source=\"warehouseSummariesIds\"\n              >\n                <Datagrid>\n                  <ReferenceField\n                    label=\"Warehouse\"\n                    source=\"warehouse.id\"\n                    reference=\"Warehouse\"\n                  >\n                    <TextField source=\"name\" />\n                  </ReferenceField>\n                  <TextField source=\"quantity\" />\n                </Datagrid>\n              </ReferenceArrayField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Expiry Date Summary</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceArrayField\n                reference=\"ExpiryDateSummary\"\n                source=\"expiryDateSummariesIds\"\n              >\n                <Datagrid>\n                  <DateField source=\"expiryDate\" />\n                  <TextField source=\"quantity\" />\n                </Datagrid>\n              </ReferenceArrayField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  EditButton,\n  DeleteButton,\n  TextField,\n  ImageField,\n  SingleFieldList,\n  ChipField,\n  TextInput,\n  NumberInput,\n  ImageInput,\n  DateInput,\n  ReferenceArrayField,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  required,\n  SelectInput,\n  FormDataConsumer,\n} from \"react-admin\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { ProductShow } from \"./Show\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/Product\";\n\nexport { ProductShow };\n\nconst breadcrumbBase = { url: \"/Product\", label: \"Product\" };\n\nexport const ProductCreate = (props) => {\n  const dispatch = useDispatch();\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/Product/create\", label: \"Create New\" },\n    ])\n  );\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Product No.\" />\n        <TextInput source=\"brandEn\" validate={required()} fullWidth />\n        <TextInput source=\"brandChi\" validate={required()} fullWidth />\n        <TextInput source=\"nameEn\" validate={required()} fullWidth />\n        <TextInput source=\"nameChi\" validate={required()} fullWidth />\n        <NumberInput source=\"package\" validate={required()} />\n        <TextInput source=\"discount\" />\n        <TextInput source=\"weight\" validate={required()} />\n        <TextInput source=\"shortDescription\" />\n        <TextInput source=\"longDescription\" />\n        <ImageInput source=\"images\" accept=\"image/*\" multiple>\n          <ImageField source=\"src\" title=\"title\" />\n        </ImageInput>\n        <TextInput source=\"sku\" />\n        <TextInput source=\"upc\" validate={required()} />\n        <NumberInput source=\"cost\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice1\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice2\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice3\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice4\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice5\" validate={required()} />\n        <NumberInput source=\"retailPrice1\" validate={required()} />\n        <NumberInput source=\"retailPrice2\" validate={required()} />\n        <NumberInput source=\"retailPrice3\" validate={required()} />\n        <NumberInput source=\"retailPrice4\" validate={required()} />\n        <NumberInput source=\"retailPrice5\" validate={required()} />\n        <NumberInput source=\"minOrderQuantity\" defaultValue={10} />\n        <NumberInput source=\"minStockLevel\" defaultValue={0} />\n        <DateInput source=\"onlineDate\" />\n        <DateInput source=\"offlineDate\" />\n        {/* <ReferenceArrayInput\n          label=\"Category\"\n          source=\"categoriesIds\"\n          reference=\"ProductCategory\"\n        >\n          <SelectArrayInput optionText=\"nameEn\" />\n        </ReferenceArrayInput> */}\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const ProductEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Product No.\" />\n        <TextInput source=\"brandEn\" validate={required()} fullWidth />\n        <TextInput source=\"brandChi\" validate={required()} fullWidth />\n        <TextInput source=\"nameEn\" validate={required()} fullWidth />\n        <TextInput source=\"nameChi\" validate={required()} fullWidth />\n        <NumberInput source=\"package\" validate={required()} />\n        <TextInput source=\"discount\" />\n        <TextInput source=\"weight\" validate={required()} />\n        <TextInput source=\"shortDescription\" />\n        <TextInput source=\"longDescription\" />\n        <ImageInput source=\"images\" accept=\"image/*\" multiple>\n          <ImageField source=\"src\" title=\"title\" />\n        </ImageInput>\n        <TextInput source=\"sku\" />\n        <TextInput source=\"upc\" />\n        <NumberInput source=\"cost\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice1\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice2\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice3\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice4\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice5\" validate={required()} />\n        <NumberInput source=\"minOrderQuantity\" />\n        <NumberInput source=\"minStockLevel\" />\n        <DateInput source=\"onlineDate\" />\n        <DateInput source=\"offlineDate\" />\n        <ReferenceArrayInput\n          label=\"Category\"\n          source=\"categoriesIds\"\n          reference=\"ProductCategory\"\n        >\n          <SelectArrayInput optionText=\"nameEn\" />\n        </ReferenceArrayInput>\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                breadcrumbBase,\n                {\n                  url: `/Product/${formData.id}`,\n                  label: `Edit: ${formData.code}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const ProductList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Product No.\" />\n        <BilingualField source=\"name\" />\n        <ReferenceArrayField\n          label=\"Categories\"\n          reference=\"ProductCategory\"\n          source=\"categoriesIds\"\n        >\n          <SingleFieldList>\n            <ChipField source=\"nameChi\" />\n          </SingleFieldList>\n        </ReferenceArrayField>\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  ShowController,\n  ShowView,\n  SimpleShowLayout,\n  EditButton,\n  DeleteButton,\n  FunctionField,\n  TextField,\n  ReferenceField,\n  EmailField,\n  UrlField,\n  DateField,\n  SelectField,\n  ReferenceInput,\n  TextInput,\n  SelectInput,\n  FormDataConsumer,\n  required,\n  email,\n  CheckboxGroupInput,\n  ReferenceArrayField,\n  SingleFieldList,\n  ChipField,\n  ArrayField,\n} from \"react-admin\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport BilingualField from \"../../components/BilingualField\";\n\nconst redirect = () => \"/Customer\";\nconst breadcrumbBase = { url: \"/Customer\", label: \"Customer\" };\n\nexport const CustomerCreate = (props) => {\n  const dispatch = useDispatch();\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/Customer/create\", label: \"Create New\" },\n    ])\n  );\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Customer No.\" />\n        <TextInput source=\"nameEn\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"mobile\" validate={required()} />\n        <TextInput source=\"email\" validate={required()} />\n        <TextInput source=\"district\" />\n        <TextInput source=\"billingAddress\" />\n        <TextInput source=\"salesman\" />\n        <TextInput source=\"website\" />\n        <TextInput source=\"remark\" multiline />\n        <ReferenceInput\n          label=\"Group\"\n          source=\"group.id\"\n          reference=\"CustomerGroup\"\n        >\n          <SelectInput optionText=\"name\" validate={required()} />\n        </ReferenceInput>\n\n        <SelectInput\n          source=\"wholesalePlan\"\n          validate={required()}\n          choices={[\n            { id: 1, name: \"Plan 1\" },\n            { id: 2, name: \"Plan 2\" },\n            { id: 3, name: \"Plan 3\" },\n            { id: 4, name: \"Plan 4\" },\n            { id: 5, name: \"Plan 5\" },\n          ]}\n        />\n        <SelectInput\n          source=\"paymentMethod\"\n          validate={required()}\n          choices={[\n            { id: \"credit\", name: \"Credit\" },\n            { id: \"debit\", name: \"Debit\" },\n            { id: \"c.o.d\", name: \"C.O.D\" },\n          ]}\n        />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const CustomerEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Customer No.\" />\n        <TextInput source=\"nameEn\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"mobile\" />\n        <TextInput source=\"email\" validate={email()} />\n        <TextInput source=\"district\" />\n        <TextInput source=\"billingAddress\" />\n        <TextInput source=\"salesman\" />\n        <TextInput source=\"website\" />\n        <TextInput source=\"remark\" multiline />\n        <ReferenceInput\n          label=\"Group\"\n          source=\"group.id\"\n          reference=\"CustomerGroup\"\n        >\n          <SelectInput optionText=\"name\" validate={required()} />\n        </ReferenceInput>\n        <SelectInput\n          source=\"wholesalePlan\"\n          validate={required()}\n          choices={[\n            { id: 1, name: \"Plan 1\" },\n            { id: 2, name: \"Plan 2\" },\n            { id: 3, name: \"Plan 3\" },\n            { id: 4, name: \"Plan 4\" },\n            { id: 5, name: \"Plan 5\" },\n          ]}\n        />\n        <SelectInput\n          source=\"paymentMethod\"\n          validate={required()}\n          choices={[\n            { id: \"CREDIT\", name: \"Credit\" },\n            { id: \"DEBIT\", name: \"Debit\" },\n            { id: \"COD\", name: \"C.O.D\" },\n          ]}\n        />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                breadcrumbBase,\n                {\n                  url: `/Customer/${formData.id}`,\n                  label: `Edit: ${formData.nameEn}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\nfunction getWeekDay(dayNum) {\n  switch (dayNum) {\n    case 0:\n      return \"Sunday\";\n    case 1:\n      return \"Monday\";\n    case 2:\n      return \"Tuesday\";\n    case 3:\n      return \"Wednesday\";\n    case 4:\n      return \"Thursday\";\n    case 5:\n      return \"Friday\";\n    case 6:\n      return \"Saturday\";\n    default:\n      break;\n  }\n}\n\nexport const CustomerShow = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        console.log(\"controllerProps: \", controllerProps);\n        const label = controllerProps.record\n          ? controllerProps.record.nameEn\n          : \"\";\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(\n          setBreadcrumbs([\n            breadcrumbBase,\n            { url: `/Customer/${id}/show`, label: `Details: ${label}` },\n          ])\n        );\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <TextField source=\"code\" />\n              <TextField source=\"nameEn\" />\n              <TextField source=\"nameChi\" />\n              <TextField source=\"wholesalePlan\" />\n              <TextField source=\"mobile\" />\n              <EmailField source=\"email\" />\n              <TextField source=\"district\" />\n              <TextField source=\"billingAddress\" />\n              <TextField source=\"salesman\" />\n              <TextField source=\"website\" />\n              <TextField source=\"remark\" />\n              <ReferenceField\n                label=\"Group\"\n                source=\"group.id\"\n                reference=\"CustomerGroup\"\n              >\n                <TextField source=\"name\" />\n              </ReferenceField>\n              <TextField source=\"paymentMethod\" />\n              <ReferenceArrayField\n                label=\"Shops\"\n                reference=\"CustomerShop\"\n                source=\"shopsIds\"\n              >\n                <SingleFieldList>\n                  <ReferenceField\n                    source=\"id\"\n                    reference=\"CustomerShop\"\n                    link={(shop, referece) => `/CustomerShop/${shop.id}/show`}\n                  >\n                    <TextField source=\"nameChi\" />\n                  </ReferenceField>\n                </SingleFieldList>\n              </ReferenceArrayField>\n\n              <ReferenceArrayField\n                label=\"Customer Coupons\"\n                reference=\"CustomerCoupon\"\n                source=\"couponsIds\"\n                filter={{ state_not_in: \"EMPTY\" }}\n              >\n                <Datagrid>\n                  <TextField source=\"code\" />\n                  <TextField source=\"name\" />\n                  <TextField source=\"discount\" />\n                  <TextField source=\"state\" />\n                  <TextField source=\"quantity\" />\n                  <TextField source=\"type\" />\n                </Datagrid>\n              </ReferenceArrayField>\n              <DateField source=\"createdAt\" />\n              <DateField source=\"updatedAt\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const CustomerList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props} sort={{ field: \"createdAt\", order: \"DESC\" }}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" />\n        <BilingualField source=\"name\" />\n        <ReferenceField\n          label=\"Group\"\n          source=\"group.id\"\n          reference=\"CustomerGroup\"\n          link=\"show\"\n        >\n          <TextField source=\"name\" />\n        </ReferenceField>\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  ShowController,\n  ShowView,\n  SimpleShowLayout,\n  EditButton,\n  DeleteButton,\n  TextField,\n  ReferenceField,\n  ReferenceInput,\n  TextInput,\n  SelectInput,\n  ChipField,\n  usePermissions,\n  PasswordInput,\n} from \"react-admin\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/User\";\nconst breadcrumbBase = { url: \"/User\", label: \"User\" };\n\nexport const UserCreate = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n  const group = JSON.parse(localStorage.getItem(\"group\"));\n\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/User/create\", label: \"Create New\" },\n    ])\n  );\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" />\n        <PasswordInput source=\"password\" />\n        <ReferenceInput\n          label=\"Company Group\"\n          source=\"group.id\"\n          reference=\"UserGroup\"\n          filter={permissions === \"superadmin\" ? {} : { id: group.id }}\n        >\n          <SelectInput source=\"name\" />\n        </ReferenceInput>\n        <SelectInput\n          source=\"permission\"\n          choices={\n            permissions === \"superadmin\"\n              ? [\n                  { id: \"ADMIN\", name: \"ADMIN\" },\n                  { id: \"ACCOUNT\", name: \"ACCOUNT\" },\n                  { id: \"SALES\", name: \"SALES\" },\n                  { id: \"INVENTORY\", name: \"INVENTORY\" },\n                  { id: \"SUPERADMIN\", name: \"SUPERADMIN\" },\n                ]\n              : [\n                  { id: \"ADMIN\", name: \"ADMIN\" },\n                  { id: \"ACCOUNT\", name: \"ACCOUNT\" },\n                  { id: \"SALES\", name: \"SALES\" },\n                  { id: \"INVENTORY\", name: \"INVENTORY\" },\n                ]\n          }\n        />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const UserEdit = (props) => {\n  const dispatch = useDispatch();\n  const group = JSON.parse(localStorage.getItem(\"group\"));\n  const { loaded, permissions } = usePermissions();\n  dispatch(\n    setBreadcrumbs([breadcrumbBase, { url: \"/User/edit\", label: \"User Edit\" }])\n  );\n\n  return (\n    <Edit {...props}>\n      {permissions === \"admin\" || permissions === \"superadmin\" ? (\n        <SimpleForm variant=\"standard\" redirect={redirect}>\n          <TextInput source=\"name\" />\n          {permissions === \"superadmin\" ? (\n            <PasswordInput source=\"password\" />\n          ) : null}\n          <ReferenceInput\n            label=\"Company Group\"\n            source=\"group.id\"\n            reference=\"UserGroup\"\n            filter={permissions === \"superadmin\" ? {} : { id: group.id }}\n          >\n            <SelectInput source=\"name\" />\n          </ReferenceInput>\n\n          <SelectInput\n            source=\"permission\"\n            choices={\n              permissions === \"superadmin\"\n                ? [\n                    { id: \"ADMIN\", name: \"ADMIN\" },\n                    { id: \"ACCOUNT\", name: \"ACCOUNT\" },\n                    { id: \"SALES\", name: \"SALES\" },\n                    { id: \"INVENTORY\", name: \"INVENTORY\" },\n                    { id: \"SUPERADMIN\", name: \"SUPERADMIN\" },\n                  ]\n                : [\n                    { id: \"ADMIN\", name: \"ADMIN\" },\n                    { id: \"ACCOUNT\", name: \"ACCOUNT\" },\n                    { id: \"SALES\", name: \"SALES\" },\n                    { id: \"INVENTORY\", name: \"INVENTORY\" },\n                  ]\n            }\n          />\n        </SimpleForm>\n      ) : (\n        <h1>No Permission</h1>\n      )}\n    </Edit>\n  );\n};\n\nexport const UserShow = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(\n          setBreadcrumbs([\n            breadcrumbBase,\n            { url: `/User/${id}/show`, label: `Details` },\n          ])\n        );\n        return (\n          <ShowView\n            {...props}\n            {...controllerProps}\n            hasEdit={permissions === \"superadmin\" || permissions === \"admin\"}\n          >\n            <SimpleShowLayout>\n              <TextField source=\"name\" />\n              <TextField source=\"permission\" />\n              {permissions === \"superadmin\" ? (\n                <TextField source=\"password\" />\n              ) : null}\n              <ReferenceField\n                label=\"company Group\"\n                source=\"group.id\"\n                reference=\"UserGroup\"\n                link=\"show\"\n              >\n                <TextField source=\"name\" />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const UserList = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n  const group = JSON.parse(localStorage.getItem(\"group\"));\n  console.log(\"group\", group);\n  console.log(\"permissions\", permissions);\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n\n  return (\n    <List\n      {...props}\n      hasCreate={permissions === \"admin\" || permissions === \"superadmin\"}\n      sort={{ field: \"createdAt\", order: \"DESC\" }}\n      filterDefaultValues={\n        permissions === \"superadmin\"\n          ? {}\n          : {\n              permission_not: \"SUPERADMIN\",\n              group: { id: group.id },\n            }\n      }\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"name\" />\n        <ReferenceField\n          label=\"company group\"\n          source=\"group.id\"\n          reference=\"UserGroup\"\n          link=\"show\"\n        >\n          <ChipField source=\"name\" />\n        </ReferenceField>\n        {/* <TextField source=\"group\" /> */}\n        <TextField source=\"permission\" />\n        {permissions === \"admin\" || permissions === \"superadmin\" ? (\n          <EditButton />\n        ) : null}\n        {permissions === \"superadmin\" ? <DeleteButton /> : null}\n      </Datagrid>\n    </List>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  ShowController,\n  ShowView,\n  SimpleShowLayout,\n  EditButton,\n  DeleteButton,\n  FunctionField,\n  TextField,\n  ReferenceField,\n  EmailField,\n  UrlField,\n  DateField,\n  SelectField,\n  ReferenceInput,\n  TextInput,\n  SelectInput,\n  FormDataConsumer,\n  required,\n  email,\n  CheckboxGroupInput,\n  ReferenceArrayField,\n  SingleFieldList,\n  ChipField,\n  usePermissions,\n  Loading,\n  PasswordInput,\n} from \"react-admin\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/UserGroup\";\nconst breadcrumbBase = { url: \"/UserGroup\", label: \"UserGroup\" };\n\nexport const UserGroupCreate = (props) => {\n  const dispatch = useDispatch();\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/UserGroup/create\", label: \"Create New\" },\n    ])\n  );\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const UserGroupEdit = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/UserGroup/edit\", label: \"UserGroup Edit\" },\n    ])\n  );\n\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const UserGroupShow = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(\n          setBreadcrumbs([\n            breadcrumbBase,\n            { url: `/UserGroup/${id}/show`, label: `Details` },\n          ])\n        );\n        return (\n          <ShowView\n            {...props}\n            {...controllerProps}\n            hasEdit={permissions === \"admin\" || permissions === \"superadmin\"}\n          >\n            <SimpleShowLayout>\n              <TextField source=\"name\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const UserGroupList = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n  const group = JSON.parse(localStorage.getItem(\"group\"));\n  console.log(\"group\", group.id);\n  console.log(\"permissions\", permissions);\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n\n  return (\n    <List\n      {...props}\n      hasCreate={permissions === \"superadmin\"}\n      sort={{ field: \"name\", order: \"DESC\" }}\n      filterDefaultValues={\n        permissions === \"superadmin\" ? null : { id: group.id }\n      }\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"name\" />\n        {permissions === \"admin\" || permissions === \"superadmin\" ? (\n          <EditButton />\n        ) : null}\n        {permissions === \"superadmin\" ? <DeleteButton /> : null}\n      </Datagrid>\n    </List>\n  );\n};\n","import React from 'react';\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  SimpleShowLayout,\n\n\n  EditButton,\n  DeleteButton,\n\n  TextField,\n\n  TextInput,\n\n  required, FormDataConsumer, ShowController, ShowView,\n} from 'react-admin';\nimport { useDispatch } from 'react-redux';\nimport { setBreadcrumbs } from '../../redux/breadcrumbs';\n\nconst redirect = () => '/CustomerGroup';\nconst breadcrumbBase = { url: '/CustomerGroup', label: 'CustomerGroup' };\n\nexport const CustomerGroupCreate = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([\n    breadcrumbBase,\n    { url: '/CustomerGroup/create', label: 'Create New' },\n  ]));\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport const CustomerGroupEdit = props => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerGroup/${formData.id}`, label: `Edit: ${formData.name}` }]));\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport const CustomerGroupShow = props => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {controllerProps => {\n        const label = controllerProps.record ? controllerProps.record.name : '';\n        const id = controllerProps.record ? controllerProps.record.id : '';\n        dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerGroup/${id}/show`, label: `Details: ${label}` }]));\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <TextField source=\"name\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const CustomerGroupList = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"name\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from \"react\";\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  SimpleShowLayout,\n  EditButton,\n  DeleteButton,\n  TextField,\n  TextInput,\n  required,\n  FormDataConsumer,\n  ShowController,\n  ShowView,\n  ReferenceField,\n  FunctionField,\n  CheckboxGroupInput,\n  SelectInput,\n  ReferenceInput,\n  DateField,\n} from \"react-admin\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst redirect = () => \"/CustomerShop\";\nconst breadcrumbBase = { url: \"/CustomerShop\", label: \"CustomerShop\" };\nconst optionRenderer = (customer) => `${customer.code} ${customer.nameChi}`;\n\nconst GET_CUSTOMER = gql`\n  query customers($where: CustomerWhereInput) {\n    customers(where: $where) {\n      id\n    }\n  }\n`;\nexport const CustomerShopCreate = (props) => {\n  const { loading: fetching, data } = useQuery(GET_CUSTOMER, {});\n  console.log(\"data\", data && data);\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase, { url: \"/CustomerShop/create\", label: \"Create New\" }]));\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <ReferenceInput label=\"Customer\" source=\"customer.id\" reference=\"Customer\" perPage={data && data.customers.length}>\n          <SelectInput optionText={optionRenderer} validate={required()} />\n        </ReferenceInput>\n        <TextInput label=\"Shop No.\" source=\"code\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"nameEn\" />\n        <TextInput source=\"phone\" />\n        <TextInput source=\"deliverAddress\" validate={required()} />\n        <CheckboxGroupInput\n          source=\"deliveryDay\"\n          choices={[\n            { id: 0, name: \"Sunday\" },\n            { id: 1, name: \"Monday\" },\n            { id: 2, name: \"Tuesday\" },\n            { id: 3, name: \"Wednesday\" },\n            { id: 4, name: \"Thursday\" },\n            { id: 5, name: \"Friday\" },\n            { id: 6, name: \"Saturday\" },\n          ]}\n        />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const CustomerShopEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" >\n        <TextInput source=\"nameChi\" />\n        <TextInput source=\"nameEn\" />\n        <TextInput source=\"phone\" />\n        <TextInput source=\"deliveryAddress\" />\n        <CheckboxGroupInput\n          source=\"deliveryDay\"\n          choices={[\n            { id: 0, name: \"Sunday\" },\n            { id: 1, name: \"Monday\" },\n            { id: 2, name: \"Tuesday\" },\n            { id: 3, name: \"Wednesday\" },\n            { id: 4, name: \"Thursday\" },\n            { id: 5, name: \"Friday\" },\n            { id: 6, name: \"Saturday\" },\n          ]}\n        />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerShop/${formData.id}`, label: `Edit: ${formData.name}` }]));\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nfunction getWeekDay(dayNum) {\n  switch (dayNum) {\n    case 0:\n      return \"Sunday\";\n    case 1:\n      return \"Monday\";\n    case 2:\n      return \"Tuesday\";\n    case 3:\n      return \"Wednesday\";\n    case 4:\n      return \"Thursday\";\n    case 5:\n      return \"Friday\";\n    case 6:\n      return \"Saturday\";\n    default:\n      break;\n  }\n}\n\nexport const CustomerShopShow = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerShop/${id}/show`, label: `Details` }]));\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <ReferenceField label=\"Customer\" source=\"customer.id\" reference=\"Customer\" link={(customer, referece) => `/Customer/${customer.customer.id}/show`}>\n                <BilingualField source=\"name\" />\n              </ReferenceField>\n              <TextField label=\"Shop No.\" source=\"code\" />\n              <TextField source=\"nameChi\" />\n              <TextField source=\"nameEn\" />\n              <TextField source=\"phone\" />\n              <TextField source=\"deliverAddress\" />\n              <FunctionField label=\"Delivery Day\" source=\"deliveryDay\" render={(shop) => shop.deliveryDay.map((day, index) => `${getWeekDay(day)}${index === shop.deliveryDay.length - 1 ? \".\" : \",\"}`)} />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const CustomerShopList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props} title=\"Customer Shop\">\n      <Datagrid rowClick=\"show\">\n        <TextField label=\"Shop No.\" source=\"code\" />\n        <TextField source=\"nameChi\" />\n        <TextField source=\"deliverAddress\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from 'react';\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  SimpleShowLayout,\n\n\n  EditButton,\n  DeleteButton,\n\n  TextField,\n\n  TextInput,\n\n  required, FormDataConsumer, ShowController, ShowView,\n} from 'react-admin';\nimport { useDispatch } from 'react-redux';\nimport { setBreadcrumbs } from '../../redux/breadcrumbs';\n\nconst redirect = () => '/ProductCategory';\nconst breadcrumbBase = { url: '/ProductCategory', label: 'Product Category' };\n\nexport const ProductCategoryCreate = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([\n    breadcrumbBase,\n    { url: '/ProductCategory/create', label: 'Create New' },\n  ]));\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"nameEn\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"detail\" multiline />\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport const ProductCategoryEdit = props => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"nameEn\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"detail\" multiline />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(setBreadcrumbs([breadcrumbBase, { url: `/ProductCategory/${formData.id}`, label: `Edit: ${formData.nameEn}` }]));\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport const ProductCategoryShow = props => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {controllerProps => {\n        const label = controllerProps.record ? controllerProps.record.nameEn : '';\n        const id = controllerProps.record ? controllerProps.record.id : '';\n        dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerGroup/${id}/show`, label: `Details: ${label}` }]));\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <TextField source=\"nameEn\" />\n              <TextField source=\"nameChi\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n}\n\nexport const ProductCategoryList = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"nameEn\" />\n        <TextField source=\"nameChi\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n}\n","export default {\n  softwareName: \"Ambrossoft Supplier Management System\",\n  menu: {\n    item: {\n      home: \"Dashboard\",\n      replenish: \"Replenish\",\n      sale: \"Sale\",\n      settings: \"Settings\",\n      reports: \"Reports\",\n      supplier: \"Supplier\",\n      purchaseOrder: \"Purchase Order\",\n      shipment: \"Shipment\",\n      deliveryNote: \"Delivery Note\",\n      warehouse: \"Warehouse\",\n      inventory: \"Inventory\",\n      salesOrder: \"Sales Order\",\n      invoice: \"Invoice\",\n      customer: \"Customer\",\n      customerGroup: \"Customer Group\",\n      customerShop: \"Customer Shop\",\n      user: \"User\",\n      userGroup: \"UserGroup\",\n      product: \"Product\",\n      productCategory: \"Product Category\",\n      salesShipping: \"Sales Shipping\",\n      receivePayment: \"Receive Payment\",\n      monthly: \"Monthly\",\n      quarterly: \"Quarterly\",\n      annual: \"Annual\",\n      warehousing: \"Warehousing\",\n      labelling: \"Labelling\",\n      shipping: \"Shipping\",\n      packing: \"Packing\",\n      stockCheck: \"Stock Check\",\n      stockTransfer: \"Stock Transfer\",\n      stockDispose: \"Stock Dispose\",\n      noNeedThisProduct: \"You don't need this item\",\n    },\n  },\n  dashboard: {\n    supplier: \"Supplier\",\n    purchaseOrder: \"Purchase Order\",\n    shipment: \"Shipment\",\n    delivery: \"Delivery\",\n    warehouse: \"Warehouse\",\n    inventory: \"Inventory\",\n    salesOrder: \"Sales Order\",\n    invoice: \"Invoice\",\n    customer: \"Customer\",\n    customerGroup: \"Customer Group\",\n    product: \"Product\",\n    productCategory: \"Product Category\",\n    salesShipping: \"Sales Shipping\",\n    receivePayment: \"Receive Payment\",\n  },\n  product: {\n    code: \"Product No.\",\n    product: \"Product\",\n    cost: \"Cost\",\n    price: \"Price\",\n    quantity: \"Quantity\",\n    expiryDate: \"Expiry Date\",\n    label: \"Label\",\n    name: \"Name\",\n    warehouse: \"Warehouse\",\n    wholeSalePrice: \"Whole Sale Price\",\n    minOrderQuantity: \"Min. Order Qty.\",\n    expiredIn6Months: \"Expired In 6 Months\",\n  },\n  supplier: {\n    supplier: \"Supplier\",\n    replenish: \"Replenish Now!\",\n  },\n  purchaseOrder: {\n    selectProducts: \"Select Products\",\n    purchaseOrder: \"Purchase Order\",\n    code: \"Purchase Order No.\",\n    createPurchaseOrder: \"Create Purchase Order\",\n    editPurchaseOrder: \"Edit Purchase Order\",\n    title: \"Purchase Order\",\n    drafts: \"Drafts\",\n    waitingShipment: \"Waiting Shipment\",\n    completed: \"Completed\",\n    basicInfo: \"Basic Info\",\n    products: \"Products\",\n    productCode: \"Product Code\",\n    productName: \"Product Name\",\n    expectedDeliveryAt: \"Expected Delivery Date\",\n    supplier: \"Supplier\",\n    state: \"Status\",\n    review: \"Review\",\n    purchaseOrderDetails: \"Purchase Order Details\",\n    totalPrice: \"Total Price\",\n  },\n  salesOrder: {\n    selectProducts: \"Select Products\",\n    salesOrder: \"Sales Order\",\n    code: \"Sales Order No.\",\n    contactPerson: \"Contact Person\",\n    createSalesOrder: \"Create Sales Order\",\n    editSalesOrder: \"Edit Sales Order\",\n    title: \"Sales Order\",\n    drafts: \"Drafts\",\n    waitingShipment: \"Waiting Shipment\",\n    completed: \"Completed\",\n    basicInfo: \"Basic Info\",\n    products: \"Products\",\n    productCode: \"Product Code\",\n    productName: \"Product Name\",\n    expectedDeliveryAt: \"Delivery Date\",\n    supplier: \"Supplier\",\n    state: \"Status\",\n    review: \"Review\",\n    salesOrderDetails: \"Sales Order Details\",\n    customer: \"Customer\",\n    totalPrice: \"Total Price\",\n  },\n  shipping: {\n    warehousing: \"Warehousing\",\n    productList: \"Product List\",\n    shipment: \"Shipment\",\n    shippingDelivery: \"Shipping Delivery\",\n    warehouse: \"Warehouse\",\n    needToUpdatePO: \"Quantity not match?\",\n    clickHere: \"Update Purchase Order\",\n    products: \"Products\",\n    labelling: \"Labelling\",\n    unlabelledItem: \"Unlabelled Item\",\n    labelFrom: \"Label From\",\n    labelTo: \"Label To\",\n    selectPurchaseOrder: \"Select Purchase Order\",\n    quantityCheck: \"Quantity Check\",\n    review: \"Review\",\n    selectWarehouse: \"Select Warehouse\",\n    status: \"Status\",\n    allTheFollowing: \"Update items?\",\n    changeAll: \"This and following items\",\n    changeThisOnly: \"This item only\",\n  },\n  shipment: {\n    waitingShipment: \"Waiting Shipment\",\n    completed: \"Completed\",\n  },\n  invoice: {\n    newOrders: \"New Orders\",\n    completed: \"Completed Orders\",\n    selectSalesOrder: \"Select Sales Order\",\n    shippingDetails: \"Shipping Details\",\n    review: \"Review\",\n    shipmentDate: \"Shipment Date\",\n    state: \"Status\",\n    code: \"Invoice No.\",\n    totalPrice: \"Total Price\",\n    contactPerson: \"Contact Person\",\n    salesOrder: \"Sales Order\",\n    invoice: \"Invoice\",\n    invoiceDetails: \"Invoice Details\",\n    customer: \"Customer\",\n  },\n  inventory: {\n    inventory: \"Inventory\",\n    stockTransfer: \"Stock Transfer\",\n    stockDispose: \"Stock Dispose\",\n    stock: \"Stock\",\n    warehouse: \"Warehouse\",\n    trash: \"Trash\",\n    productItem: \"Product Item\",\n    brand: \"Brand\",\n    countryOfOrigin: \"Country of origin\",\n    listView: \"List View\",\n    heatMapView: \"Heat Map View\",\n  },\n  delivery: {\n    newOrders: \"New Orders\",\n    completed: \"Completed Orders\",\n  },\n  deliveryNote: {\n    selectInvoice: \"Select Invoice\",\n    quantity: \"Quantity\",\n    quantityCheck: \"Quantity Check\",\n    quantityNeed: \"Quantity Needed\",\n    packingBox: \"Packing Box\",\n    deliveryDate: \"Delivery Date\",\n    products: \"Products\",\n    review: \"Review\",\n    labelNo: \"Label #\",\n  },\n  receivePayment: {\n    newOrders: \"New Orders\",\n    completed: \"Completed Orders\",\n    selectInvoice: \"Select Invoice\",\n    quantity: \"Quantity\",\n    quantityCheck: \"Quantity Check\",\n    packingBox: \"Packing Box\",\n    review: \"Review\",\n    labelNo: \"Label #\",\n  },\n  customer: {\n    customer: \"Customer\",\n    salesSummary: \"Sales Summary\",\n    mobile: \"Mobile\",\n    tel: \"Tel.\",\n    shippingAddress: \"Shipping Address\",\n    billingAddress: \"Billing Address\",\n  },\n  readMore: \"Read More\",\n  resources: {\n    PurchaseOrder: {\n      fields: {\n        products: \"Products\",\n      },\n    },\n  },\n  common: {\n    addNew: \"Add New\",\n    create: \"Add New\",\n    list: \"List\",\n    approved: \"Approved\",\n    new: \"New\",\n    date: \"Date\",\n    draft: \"Draft\",\n    edit: \"Edit\",\n    confirm: \"Confirm\",\n    confirmed: \"Confirmed\",\n    deleted: \"Deleted\",\n    status: \"Status\",\n    save: \"Save\",\n    cancel: \"Cancel\",\n    assign: \"Assign\",\n    from: \"From\",\n    to: \"To\",\n    transfer: \"Transfer\",\n    search: \"Search\",\n    filter: \"Filter\",\n    groupBy: \"Group By\",\n    next: \"Next\",\n    prev: \"Prev\",\n    information: \"Information\",\n    pending: \"Pending\",\n    sent: \"Sent\",\n    acked: \"Acked\",\n    shipped: \"Shipped\",\n    arrived: \"Arrived\",\n    received: \"Received\",\n    packed: \"Packed\",\n    delivered: \"Delivered\",\n    paid: \"Paid\",\n    print: \"Print\",\n    salesman: \"Salesman\",\n    delete: \"Delete\",\n  },\n  pageNotFound: \"Page Not Found!\",\n};\n","import polyglotI18nProvider from 'ra-i18n-polyglot';\nimport englishMessages from 'ra-language-english';\nimport chineseTraditionalMessages from 'ra-language-chinese-traditional';\nimport en from './i18n/en';\n\nexport const i18nProvider = polyglotI18nProvider(locale => {\n  if (locale === 'en') {\n    // initial call, must return synchronously\n    return { ...englishMessages, ...en };\n  }\n  if (locale === 'zh-TW') {\n    return import('./i18n/zh-TW.js').then(messages => ({ ...chineseTraditionalMessages, ...messages.default }));\n  }\n}, 'en');\n","import React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  SaveButton,\n  Toolbar,\n  useCreate,\n  useNotify,\n  Create,\n  SimpleForm,\n  AutocompleteInput,\n  NumberInput,\n  ReferenceInput,\n  SelectInput,\n  Edit,\n  FormDataConsumer,\n} from \"react-admin\";\nimport { useFormState } from \"react-final-form\";\nimport { useDispatch } from \"react-redux\";\nimport { addBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport { Grid, Container } from \"@material-ui/core\";\n\nconst SaveItemButton = (props) => {\n  const [create] = useCreate(\"PurchaseOrderItem\");\n  const history = useHistory();\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n\n  const notify = useNotify();\n\n  const formState = useFormState();\n  const handleClick = useCallback(() => {\n    if (!formState.valid) {\n      return;\n    }\n    const { product, ...formValues } = formState.values;\n    create(\n      {\n        payload: { data: { ...formValues, productId: product.id } },\n      },\n      {\n        onSuccess: ({ data: newRecord }) => {\n          notify(\"ra.notification.created\", \"info\", {\n            smart_count: 1,\n          });\n          redirect();\n        },\n      }\n    );\n  }, [formState.valid, formState.values, create, notify, redirect]);\n\n  return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n};\n\nconst PurchaseOrderItemCreateToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveItemButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n  </Toolbar>\n);\n\nexport function PurchaseOrderItemCreate(props) {\n  const [selectedProduct, setSelectedProduct] = useState();\n  const dispatch = useDispatch();\n  dispatch(\n    addBreadcrumbs({\n      url: \"/PurchaseOrderItem/create\",\n      label: \"Add New Purchase Order Item\",\n    })\n  );\n\n  const searchProduct = (searchText) => ({\n    code_contains: searchText,\n  });\n\n  const inputText = (record) => () => {\n    setSelectedProduct(record);\n    return `${record.code} ${record.nameChi}`;\n  };\n\n  const OptionRenderer = (choice) =>\n    `${choice.record.code} ${choice.record.nameChi}`;\n\n  const renderInput = () => {\n    return (\n      <FormDataConsumer>\n        {({ formData, ...rest }) => {\n          return (\n            <Grid container direction=\"column\" style={{ width: 280 }}>\n              <NumberInput source=\"quantity\" initialsValue={0} />\n              <NumberInput source=\"price\" initialValue={formData.price} />\n            </Grid>\n          );\n        }}\n      </FormDataConsumer>\n    );\n  };\n\n  return (\n    <Create {...props}>\n      <SimpleForm\n        toolbar={<PurchaseOrderItemCreateToolbar />}\n        variant=\"standard\"\n      >\n        <ReferenceInput\n          label=\"Purchase Order\"\n          source=\"purchaseOrder.id\"\n          reference=\"PurchaseOrder\"\n        >\n          <SelectInput disabled optionText=\"code\" label=\"Purchase Order No.\" />\n        </ReferenceInput>\n        <ReferenceInput\n          filterToQuery={searchProduct}\n          label=\"Product\"\n          source=\"product.id\"\n          reference=\"Product\"\n        >\n          <AutocompleteInput\n            optionText={<OptionRenderer />}\n            label=\"Purchase Order No.\"\n            inputText={inputText}\n            matchSuggestion={(filterValue, suggestion) => true}\n            options={{ style: { width: 500 } }}\n          />\n        </ReferenceInput>\n        {selectedProduct && renderInput()}\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport const PurchaseOrderItemEdit = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n  return (\n    <Edit actions={<React.Fragment />} {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <ReferenceInput\n          label=\"Purchase Order\"\n          source=\"purchaseOrder.id\"\n          reference=\"PurchaseOrder\"\n        >\n          <SelectInput disabled optionText=\"code\" label=\"Purchase Order No.\" />\n        </ReferenceInput>\n        <ReferenceInput label=\"Product\" source=\"product.id\" reference=\"Product\">\n          <SelectInput disabled optionText=\"code\" label=\"Purchase Order No.\" />\n        </ReferenceInput>\n\n        <NumberInput source=\"quantity\" initialValue=\"quantity\" />\n\n        <NumberInput source=\"price\" initialValue=\"cost\" />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              addBreadcrumbs({\n                url: `/PurchaseOrderItem/${formData.id}`,\n                label: `Edit`,\n              })\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  Show,\n  TabbedShowLayout,\n  Tab,\n\n\n  EditButton,\n  DeleteButton,\n  ReferenceManyField,\n  TextField,\n  DateField,\n  useTranslate, Create, SimpleForm, TextInput, required, ImageInput, ImageField, NumberInput, DateInput, ReferenceInput, SelectInput, Edit,\n} from 'react-admin';\nimport { useDispatch } from 'react-redux';\nimport { addBreadcrumbs } from '../../redux/breadcrumbs';\n\nconst redirect = () => '/Shipping';\n\nexport const ShippingItemCreate = props => {\n  const dispatch = useDispatch();\n  dispatch(addBreadcrumbs({url: '/ShippingItem/create', label: 'Add New Shipping Item'}));\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Shipping No.\" />\n        <TextInput source=\"nameEn\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"shortDescription\" />\n        <TextInput source=\"longDescription\" />\n        <ImageInput source=\"images\" accept=\"image/*\" multiple>\n          <ImageField source=\"src\" title=\"title\" />\n        </ImageInput>\n        <TextInput source=\"sku\" />\n        <TextInput source=\"upc\" />\n        <NumberInput source=\"minOrderQuantity\" defaultValue={10} />\n        <NumberInput source=\"minStockLevel\" defaultValue={0} />\n        <DateInput source=\"onlineDate\" />\n        <DateInput source=\"offlineDate\" />\n        <ReferenceInput label=\"Category\" source=\"category.id\" reference=\"ShippingItemCategory\">\n          <SelectInput optionText=\"nameEn\" validate={required()} />\n        </ReferenceInput>\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport const ShippingItemEdit = props => {\n  const dispatch = useDispatch();\n  dispatch(addBreadcrumbs({url: `/PurchaseOrderItem/${props.id}`, label: 'Edit Shipping Item'}));\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <NumberInput source=\"quantity\" />\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport const ShippingItemShow = props => {\n  const translate = useTranslate();\n  const dispatch = useDispatch();\n  dispatch(addBreadcrumbs({url: `/PurchaseOrderItem/${props.id}/show`, label: 'Shipping Item'}));\n  return (\n    <Show {...props}>\n      <TabbedShowLayout>\n        <Tab label={translate('common.information')}>\n          <TextField source=\"code\" label=\"Shipping No.\" />\n          <TextField source=\"totalPrice\" />\n          <DateField source=\"expectedDeliveryAt\" />\n          <TextField source=\"state\" />\n          <DateField source=\"createdAt\" />\n          <DateField source=\"updatedAt\" />\n        </Tab>\n        <Tab label={translate('purchaseOrder.products')} path=\"products\">\n          <ReferenceManyField reference=\"ShippingItem\" target=\"shipping\" addLabel={false}>\n            <Datagrid>\n              <TextField source=\"price\" />\n              <TextField source=\"quantity\" />\n              <TextField source=\"totalPrice\" />\n              <EditButton />\n            </Datagrid>\n          </ReferenceManyField>\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  );\n};\n\nexport const ShippingItemList = props => {\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Shipping No.\" />\n        <TextField source=\"totalPrice\" />\n        <DateField source=\"expectedDeliveryAt\" />\n        <TextField source=\"state\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport {\n  SaveButton,\n  Toolbar,\n  useCreate,\n  useNotify,\n  Create,\n  SimpleForm,\n  AutocompleteInput,\n  NumberInput,\n  ReferenceInput,\n  SelectInput,\n  Edit,\n  FormDataConsumer,\n  ReferenceFieldController,\n  TextInput,\n  required,\n  useTranslate,\n} from \"react-admin\";\nimport { useFormState } from \"react-final-form\";\nimport { useDispatch } from \"react-redux\";\nimport { addBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField, Grid } from \"@material-ui/core\";\n\nconst SaveItemButton = (props) => {\n  const [create] = useCreate(\"SalesOrderItem\");\n  const history = useHistory();\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n\n  const notify = useNotify();\n\n  const formState = useFormState();\n  console.log(\"formState\", formState);\n  const handleClick = useCallback(() => {\n    if (!formState.valid) {\n      return;\n    }\n    const { product, ...formValues } = formState.values;\n    const quantity = parseInt(formValues.quantity, 10);\n    const price = parseFloat(formValues.price);\n\n    delete formValues.customer;\n    console.log(\"product: \", product);\n    create(\n      {\n        payload: {\n          data: {\n            ...formValues,\n            productId: product.id,\n            discount: product.discount,\n            totalPrice: quantity * price,\n          },\n        },\n      },\n      {\n        onSuccess: ({ data: newRecord }) => {\n          notify(\"ra.notification.created\", \"info\", {\n            smart_count: 1,\n          });\n          redirect();\n        },\n      }\n    );\n  }, [formState.valid, formState.values, create, notify, redirect]);\n\n  return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n};\n\nconst SalesOrderItemCreateToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveItemButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n  </Toolbar>\n);\n\nconst OptionRenderer = (choice) => (\n  <span>\n    {choice.record.code} {choice.record.nameChi}\n  </span>\n);\n\nexport function SalesOrderItemCreate(props) {\n  const location = useLocation();\n  const customerPlan = location.state.record.customer.wholesalePlan;\n  const translate = useTranslate();\n  const [selectedProduct, setSelectProduct] = useState();\n  const [selectBtn, setSelectBtn] = useState(customerPlan);\n  let wholeSalePriceList = !selectedProduct\n    ? []\n    : [\n        selectedProduct.wholeSalePrice1,\n        selectedProduct.wholeSalePrice2,\n        selectedProduct.wholeSalePrice3,\n        selectedProduct.wholeSalePrice4,\n        selectedProduct.wholeSalePrice5,\n      ];\n  if (\n    selectedProduct &&\n    selectedProduct.discount &&\n    wholeSalePriceList.length > 0\n  ) {\n    if (selectedProduct.discount.includes(\"%\")) {\n      const percent = 1 - parseFloat(selectedProduct.discount) / 100;\n      console.log(percent);\n      wholeSalePriceList = wholeSalePriceList.map((price) => price * percent);\n      console.log(\"wholeSalePriceList:\", wholeSalePriceList);\n    } else if (selectedProduct.discount.includes(\"HKD\")) {\n      const discountAmount = parseFloat(\n        selectedProduct.discount.replace(\"HKD\", \"\")\n      );\n      wholeSalePriceList = wholeSalePriceList.map(\n        (price) => price - discountAmount\n      );\n    }\n  }\n  let price;\n\n  const dispatch = useDispatch();\n  dispatch(\n    addBreadcrumbs({\n      url: \"/SalesOrderItem/create\",\n      label: \"Add New Sales Order Item\",\n    })\n  );\n  const searchProduct = (searchText) => ({\n    code_contains: searchText,\n  });\n\n  const renderBtnGroup = (formData) => {\n    return (\n      <ButtonGroup>\n        {wholeSalePriceList.map((price, index) => (\n          <Button\n            onClick={() => {\n              setSelectBtn(index + 1);\n              formData.price = price;\n              console.log(price);\n            }}\n            color={selectBtn == index + 1 ? \"secondary\" : undefined}\n            variant=\"contained\"\n          >\n            {translate(\"product.wholeSalePrice\")}\n            {index + 1}\n          </Button>\n        ))}\n      </ButtonGroup>\n    );\n  };\n\n  const inputText = (record) => () => {\n    setSelectProduct(record);\n    console.log(\"product\", selectedProduct);\n    return record.code;\n  };\n\n  return (\n    <Create {...props}>\n      <SimpleForm toolbar={<SalesOrderItemCreateToolbar />} variant=\"standard\">\n        <ReferenceInput\n          label=\"Sales Order\"\n          source=\"salesOrder.id\"\n          reference=\"SalesOrder\"\n        >\n          <SelectInput disabled optionText=\"code\" label=\"Sales Order No.\" />\n        </ReferenceInput>\n        <ReferenceInput\n          filterToQuery={searchProduct}\n          label=\"Product\"\n          source=\"product.id\"\n          reference=\"Product\"\n        >\n          <AutocompleteInput\n            optionText={<OptionRenderer />}\n            label=\"Sales Order No.\"\n            inputText={inputText}\n            matchSuggestion={(filterValue, suggestion) => true}\n          />\n        </ReferenceInput>\n\n        <NumberInput source=\"quantity\" />\n        {/* <NumberInput source=\"price\" /> */}\n        <FormDataConsumer>\n          {({ formData }) => {\n            formData.price = wholeSalePriceList[selectBtn - 1];\n            console.log(\"formproduct: \", formData.product);\n            if (selectedProduct) {\n              formData.product.discount = selectedProduct.discount;\n            }\n\n            return (\n              <Grid direction=\"column\" container spacing={3}>\n                <Grid item xs={6}>\n                  {selectedProduct && (\n                    <TextField\n                      label=\"price\"\n                      type=\"number\"\n                      defaultValue={wholeSalePriceList[selectBtn - 1]}\n                      onChange={(e) => {\n                        const { value } = e.target;\n                        formData.price = value;\n                      }}\n                      value={formData.price}\n                    />\n                  )}\n                </Grid>\n                <Grid item xs={6}>\n                  {selectedProduct && renderBtnGroup(formData)}\n                </Grid>\n              </Grid>\n            );\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Create>\n  );\n}\n\n// ########################## Edit Item ##########################################\n\nconst UPDATE_SALES_ORDER_ITEM = gql`\n  mutation updateSalesOrderItem(\n    $data: SalesOrderItemUpdateInput!\n    $where: SalesOrderItemWhereUniqueInput!\n  ) {\n    updateSalesOrderItem(data: $data, where: $where) {\n      id\n    }\n  }\n`;\n\nconst calculateDiscount = (formData) => {\n  // if (formData.discount) {\n  //   if (formData.discount.includes(\"%\")) {\n  //     const percent = 1 - parseFloat(formData.discount) / 100;\n  //     return parseFloat(formData.price) * percent;\n  //   } else if (formData.discount.includes(\"HKD\")) {\n  //     const discountAmount = parseFloat(formData.discount.replace(\"HKD\", \"\"));\n  //     return parseFloat(formData.price) - discountAmount;\n  //   }\n  // } else {\n  //   return parseFloat(formData.price);\n  // }\n  return parseFloat(formData.wholeSalePrice) - parseFloat(formData.price);\n};\n\nconst SaveEditButton = (props) => {\n  const history = useHistory();\n  const [update] = useMutation(UPDATE_SALES_ORDER_ITEM);\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n\n  const notify = useNotify();\n\n  const formState = useFormState();\n  const { wholeSalePrice, salesOrder, price, quantity, id } = formState.values;\n\n  const handleClick = () => {\n    console.log(\"formState: \", formState.values);\n    update({\n      variables: {\n        data: {\n          price,\n          quantity,\n          discount: `HKD${wholeSalePrice - price}`,\n          subPrice: wholeSalePrice,\n        },\n        where: { id },\n      },\n    }).then((value) => {\n      notify(\"Edit Success\");\n      redirect();\n    });\n  };\n\n  return (\n    <SaveButton\n      {...props}\n      handleSubmitWithRedirect={handleClick}\n      disabled={!wholeSalePrice}\n    />\n  );\n};\n\nconst SalesOrderItemEditToolBar = (props) => (\n  <Toolbar {...props}>\n    <SaveEditButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n  </Toolbar>\n);\n\nexport const SalesOrderItemEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" toolbar={<SalesOrderItemEditToolBar />}>\n        <ReferenceInput\n          label=\"Sales Order\"\n          source=\"salesOrder.id\"\n          reference=\"SalesOrder\"\n        >\n          <SelectInput disabled optionText=\"code\" label=\"Sales Order No.\" />\n        </ReferenceInput>\n        <ReferenceInput label=\"Product\" source=\"product.id\" reference=\"Product\">\n          <SelectInput disabled optionText=\"code\" label=\"Sales Order No.\" />\n        </ReferenceInput>\n        <NumberInput source=\"quantity\" />\n        <NumberInput source=\"wholeSalePrice\" validate={required()} />\n        <NumberInput source=\"price\" inputText={NumberInput} />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              addBreadcrumbs({\n                url: `/SalesOrderItem/${formData.id}`,\n                label: `Edit`,\n              })\n            );\n            return (\n              <h2>\n                Discount Amount(HKD): {formData.wholeSalePrice - formData.price}\n              </h2>\n            );\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloProvider as ClientProvider } from \"@apollo/client\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DayjsUtils from \"@date-io/dayjs\";\nimport { Admin, Resource, Loading } from \"react-admin\";\nimport DashboardPage from \"./containers/DashboardPage\";\nimport NotFoundPage from \"./containers/NotFoundPage/Loadable\";\nimport Layout from \"./containers/Layout\";\nimport routes from \"./routes\";\nimport { apolloClient, getDataProvider } from \"./dataProvider\";\nimport authProvider from \"./dataProvider/authProvider\";\nimport {\n  WarehouseList,\n  WarehouseShow,\n  WarehouseCreate,\n  WarehouseEdit,\n} from \"./resources/Warehouse\";\nimport {\n  SupplierList,\n  SupplierCreate,\n  SupplierEdit,\n  SupplierShow,\n} from \"./resources/Supplier\";\nimport {\n  ReceivePaymentList,\n  ReceivePaymentCreate,\n  ReceivePaymentEdit,\n  ReceivePaymentShow,\n} from \"./resources/ReceivePayment\";\nimport {\n  DeliveryNoteList,\n  DeliveryNoteCreate,\n  DeliveryNoteEdit,\n  DeliveryNoteShow,\n} from \"./resources/DeliveryNote\";\nimport { DeliveryItemEdit } from \"./resources/DeliveryItem\";\nimport { DeliveryItemCreate } from \"./resources/DeliveryItem/Create\";\n\nimport {\n  InvoiceList,\n  InvoiceCreate,\n  InvoiceEdit,\n  InvoiceShow,\n} from \"./resources/Invoice\";\nimport {\n  SalesOrderList,\n  SalesOrderCreate,\n  SalesOrderEdit,\n  SalesOrderShow,\n} from \"./resources/SalesOrder\";\nimport {\n  PurchaseOrderList,\n  PurchaseOrderCreate,\n  PurchaseOrderEdit,\n  PurchaseOrderShow,\n} from \"./resources/PurchaseOrder\";\nimport {\n  ShippingList,\n  ShippingCreate,\n  ShippingEdit,\n  ShippingShow,\n} from \"./resources/Shipping\";\nimport {\n  ProductList,\n  ProductCreate,\n  ProductEdit,\n  ProductShow,\n} from \"./resources/Product\";\nimport {\n  CustomerList,\n  CustomerCreate,\n  CustomerEdit,\n  CustomerShow,\n} from \"./resources/Customer\";\nimport { UserList, UserCreate, UserEdit, UserShow } from \"./resources/User\";\nimport {\n  UserGroupList,\n  UserGroupCreate,\n  UserGroupEdit,\n  UserGroupShow,\n} from \"./resources/UserGroup\";\nimport {\n  CustomerGroupList,\n  CustomerGroupCreate,\n  CustomerGroupEdit,\n  CustomerGroupShow,\n} from \"./resources/CustomerGroup\";\nimport {\n  CustomerShopCreate,\n  CustomerShopEdit,\n  CustomerShopList,\n  CustomerShopShow,\n} from \"./resources/CustomerShop\";\nimport {\n  ProductCategoryCreate,\n  ProductCategoryEdit,\n  ProductCategoryList,\n  ProductCategoryShow,\n} from \"./resources/ProductCategory\";\nimport { i18nProvider } from \"./i18nProvider\";\nimport {\n  PurchaseOrderItemEdit,\n  PurchaseOrderItemCreate,\n} from \"./resources/PurchaseOrderItem\";\nimport { ShippingItemEdit } from \"./resources/ShippingItem\";\nimport {\n  SalesOrderItemCreate,\n  SalesOrderItemEdit,\n} from \"./resources/SalesOrderItem\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport breadcrumbReducer from \"./redux/breadcrumbs\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#f16112\",\n    },\n  },\n  sidebar: {\n    width: \"100%\", // The default value is 240\n    closedWidth: \"100%\", // The default value is 55\n  },\n});\nconst history = createHistory();\n\nconst App = () => {\n  const [dataProvider, setDataProvider] = useState();\n\n  useEffect(() => {\n    if (!dataProvider) {\n      getDataProvider()\n        .then((dp) => {\n          setDataProvider(() => dp);\n        })\n        .catch((e) => {\n          console.error(e);\n        });\n    }\n  }, [dataProvider, setDataProvider]);\n\n  if (!dataProvider) {\n    return <Loading />;\n  }\n\n  return (\n    <ClientProvider client={apolloClient}>\n      <ApolloProvider client={apolloClient}>\n        <MuiPickersUtilsProvider utils={DayjsUtils}>\n          <Admin\n            theme={theme}\n            i18nProvider={i18nProvider}\n            authProvider={authProvider}\n            title=\"Supplier Management System\"\n            dashboard={DashboardPage}\n            catchAll={NotFoundPage}\n            layout={Layout}\n            customRoutes={routes}\n            dataProvider={dataProvider}\n            history={history}\n            customReducers={{ breadcrumb: breadcrumbReducer }}\n          >\n            <Resource\n              name=\"Warehouse\"\n              list={WarehouseList}\n              edit={WarehouseEdit}\n              create={WarehouseCreate}\n              show={WarehouseShow}\n            />\n            <Resource\n              name=\"Supplier\"\n              list={SupplierList}\n              edit={SupplierEdit}\n              create={SupplierCreate}\n              show={SupplierShow}\n            />\n            <Resource\n              name=\"ReceivePayment\"\n              list={ReceivePaymentList}\n              create={ReceivePaymentCreate}\n              show={ReceivePaymentShow}\n            />\n            <Resource\n              name=\"DeliveryNote\"\n              list={DeliveryNoteList}\n              edit={DeliveryNoteEdit}\n              create={DeliveryNoteCreate}\n              show={DeliveryNoteShow}\n            />\n            <Resource\n              name=\"DeliveryItem\"\n              edit={DeliveryItemEdit}\n              create={DeliveryItemCreate}\n            />\n            <Resource name=\"InventoryItem\" />\n            <Resource name=\"ExpiryDateSummary\" />\n            <Resource name=\"WarehouseSummary\" />\n            <Resource\n              name=\"Invoice\"\n              list={InvoiceList}\n              edit={InvoiceEdit}\n              create={InvoiceCreate}\n              show={InvoiceShow}\n            />\n            <Resource\n              name=\"SalesOrder\"\n              list={SalesOrderList}\n              edit={SalesOrderEdit}\n              create={SalesOrderCreate}\n              show={SalesOrderShow}\n            />\n            <Resource\n              name=\"SalesOrderItem\"\n              edit={SalesOrderItemEdit}\n              create={SalesOrderItemCreate}\n            />\n            <Resource\n              name=\"PurchaseOrder\"\n              list={PurchaseOrderList}\n              edit={PurchaseOrderEdit}\n              create={PurchaseOrderCreate}\n              show={PurchaseOrderShow}\n            />\n            <Resource\n              name=\"PurchaseOrderItem\"\n              edit={PurchaseOrderItemEdit}\n              create={PurchaseOrderItemCreate}\n            />\n            <Resource\n              name=\"Shipping\"\n              list={ShippingList}\n              edit={ShippingEdit}\n              create={ShippingCreate}\n              show={ShippingShow}\n            />\n            <Resource name=\"ShippingItem\" edit={ShippingItemEdit} />\n            <Resource\n              name=\"Product\"\n              list={ProductList}\n              edit={ProductEdit}\n              create={ProductCreate}\n              show={ProductShow}\n            />\n            <Resource\n              name=\"ProductCategory\"\n              list={ProductCategoryList}\n              edit={ProductCategoryEdit}\n              create={ProductCategoryCreate}\n              show={ProductCategoryShow}\n            />\n            <Resource\n              name=\"Customer\"\n              list={CustomerList}\n              edit={CustomerEdit}\n              create={CustomerCreate}\n              show={CustomerShow}\n            />\n            <Resource\n              name=\"CustomerGroup\"\n              list={CustomerGroupList}\n              edit={CustomerGroupEdit}\n              create={CustomerGroupCreate}\n              show={CustomerGroupShow}\n            />\n            <Resource\n              name=\"CustomerShop\"\n              list={CustomerShopList}\n              edit={CustomerShopEdit}\n              create={CustomerShopCreate}\n              show={CustomerShopShow}\n            />\n            <Resource\n              name=\"User\"\n              list={UserList}\n              edit={UserEdit}\n              create={UserCreate}\n              show={UserShow}\n            />\n            <Resource\n              name=\"UserGroup\"\n              list={UserGroupList}\n              edit={UserGroupEdit}\n              create={UserGroupCreate}\n              show={UserGroupShow}\n            />\n            <Resource name=\"CustomerCoupon\" />\n          </Admin>\n        </MuiPickersUtilsProvider>\n      </ApolloProvider>\n    </ClientProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","module.exports = require(\"react\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/core/Stepper\");","module.exports = require(\"@material-ui/core/StepConnector\");","module.exports = require(\"lodash/snakeCase\");","module.exports = require(\"@material-ui/core/styles/makeStyles\");","module.exports = require(\"@material-ui/core/Step\");","module.exports = require(\"@material-ui/core/StepLabel\");","module.exports = require(\"@material-ui/icons/Storefront\");","module.exports = require(\"@material-ui/icons/AddShoppingCart\");","module.exports = require(\"@material-ui/icons/Flight\");","module.exports = require(\"@material-ui/icons/House\");","module.exports = require(\"@material-ui/icons/InsertDriveFile\");","module.exports = require(\"@material-ui/icons/LocationCity\");","module.exports = require(\"@material-ui/icons/ShoppingCart\");","module.exports = require(\"@material-ui/icons/Money\");","module.exports = require(\"@material-ui/icons/LocalShipping\");","module.exports = require(\"@material-ui/icons/Equalizer\");","module.exports = require(\"@material-ui/icons/Folder\");","module.exports = require(\"clsx\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/colors/red\");","module.exports = require(\"@material-ui/core/colors/pink\");","module.exports = require(\"@material-ui/core/colors/purple\");","module.exports = require(\"@material-ui/core/colors/indigo\");","module.exports = require(\"@material-ui/core/colors/blue\");","module.exports = require(\"@material-ui/core/colors/cyan\");","module.exports = require(\"@material-ui/core/colors/teal\");","module.exports = require(\"@material-ui/core/colors/green\");","module.exports = require(\"@material-ui/core/colors/lime\");","module.exports = require(\"@material-ui/core/colors/brown\");","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport StepConnector from '@material-ui/core/StepConnector';\n\nconst Connector = withStyles({\n  horizontal: {\n    top: 25,\n  },\n  vertical: {\n    padding: 0,\n    marginLeft: 25,\n    width: 1,\n  },\n  line: {\n    height: 1,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  padLeft: {\n    marginLeft: 10,\n  },\n  adjustHeight: {\n    height: 32,\n  },\n  margin: {\n    margin: theme.spacing(2),\n  },\n  minimize: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: 0,\n  },\n}));\n\nfunction Workflow({ children, vertical, open, ...rest }) {\n  const classes = useStyles();\n  const childrenWithProps = React.Children.map(\n    children,\n    child => React.cloneElement(child, { iconOnly: !open }),\n  );\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel={!vertical} nonLinear orientation={vertical ? 'vertical' : 'horizontal'} connector={<Connector />} className={open ? classes.minimize : null} {...rest}>\n        {childrenWithProps}\n      </Stepper>\n    </div>\n  );\n}\n\nWorkflow.propTypes = {\n  vertical: PropTypes.bool,\n  children: PropTypes.node,\n  open: PropTypes.bool,\n};\n\nWorkflow.defaultProps = {\n  vertical: false,\n  open: true,\n};\n\nexport default Workflow;\n","import Storefront from '@material-ui/icons/Storefront';\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\nimport Flight from '@material-ui/icons/Flight';\nimport House from '@material-ui/icons/House';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\nimport Money from '@material-ui/icons/Money';\nimport LocalShipping from '@material-ui/icons/LocalShipping';\nimport Equalizer from '@material-ui/icons/Equalizer';\n\nexport default {\n  Supplier: LocationCity,\n  PurchaseOrder: AddShoppingCart,\n  Shipping: Flight,\n  Inventory: House,\n  SalesOrder: ShoppingCart,\n  Invoice: InsertDriveFile,\n  DeliveryNote: LocalShipping,\n  Customer: Storefront,\n  ReceivePayment: Money,\n  Report: Equalizer,\n};","export const FLOW = [\n  'Supplier',\n  'PurchaseOrder',\n  'Shipping',\n  'Inventory',\n  'SalesOrder',\n  'Invoice',\n  'DeliveryNote',\n  'Customer',\n  'ReceivePayment',\n  'Report',\n];\n\nexport const WORKFLOW = {\n  SUPPLIER: 'Supplier',\n  PURCHASE_ORDER: 'Purchase Order',\n  SHIPPING: 'Shipping',\n  INVENTORY: 'Inventory',\n  SALES_ORDER: 'Sales Order',\n  INVOICE: 'Invoice',\n  DELIVERY_NOTE: 'Delivery Note',\n  CUSTOMER: 'Customer',\n  RECEIVE_PAYMENT: 'Receive Payment',\n  REPORT: 'Report',\n}\n\nexport const steps = {\n  full: [\n    WORKFLOW.SUPPLIER,\n    WORKFLOW.PURCHASE_ORDER,\n    WORKFLOW.SHIPPING,\n    WORKFLOW.INVENTORY,\n    WORKFLOW.SALES_ORDER,\n    WORKFLOW.INVOICE,\n    WORKFLOW.DELIVERY_NOTE,\n    WORKFLOW.CUSTOMER,\n    WORKFLOW.RECEIVE_PAYMENT,\n    WORKFLOW.REPORT,\n  ],\n  purchase: [\n    WORKFLOW.SUPPLIER,\n    WORKFLOW.PURCHASE_ORDER,\n    WORKFLOW.SHIPPING,\n    WORKFLOW.INVENTORY,\n  ],\n  sales: [\n    WORKFLOW.SALES_ORDER,\n    WORKFLOW.INVOICE,\n    WORKFLOW.DELIVERY_NOTE,\n    WORKFLOW.CUSTOMER,\n    WORKFLOW.RECEIVE_PAYMENT,\n  ],\n  locations: [\n    WORKFLOW.SUPPLIER,\n    WORKFLOW.INVENTORY,\n    WORKFLOW.CUSTOMER,\n  ]\n};\n\nexport const WorkflowType = {\n  PURCHASE: 'purchase',\n  SALES: 'sales',\n  FULL: 'full'\n}\n\nexport default {\n  steps,\n  WorkflowType\n}\n","import red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lime from '@material-ui/core/colors/lime';\nimport brown from '@material-ui/core/colors/brown';\n// import { getColorForPercentage as heatColor } from '../../../helpers/heatColor';\nimport { FLOW } from './constants';\n\nconst allColors = [\n  red[400],\n  pink[300],\n  purple[300],\n  indigo[300],\n  blue[500],\n  cyan[700],\n  teal[400],\n  green[600],\n  lime[900],\n  brown[300],\n];\n\nexport default FLOW.reduce((results, flowItem, i) => {\n  results[flowItem] = allColors[i];\n  return results;\n}, {});","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core';\nimport { steps, FLOW } from './constants';\nimport WorkflowIcons from './WorkflowIcons';\nimport WorkflowColors from './WorkflowColors';\n\nconst useColorStepIconStyles = makeStyles(theme => ({\n  icon: {\n    zIndex: 1,\n    color: '#fff',\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 6\n  },\n  bigButton: {\n    width: 48,\n    height: 48,\n  },\n  smallButton: {\n    width: 32,\n    height: 32,\n    marginTop: 8,\n    marginBottom: 8,\n  },\n  bigIcon: {\n    fontSize: 24\n  },\n  smallIcon: {\n    fontSize: 16\n  },\n  active: {\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderColor: theme.palette.common.black,\n  },\n  // purchase: {\n  //   backgroundColor: theme.palette.primary.main,\n  // },\n}));\n\nconst colors = FLOW.map(item => WorkflowColors[item]);\n\nfunction ColorStepIcon({ active, label, onClick }) {\n  const classes = useColorStepIconStyles();\n  const index = steps.full.indexOf(label);\n  const icons = [\n    <WorkflowIcons.Supplier className={classes.bigIcon} />,\n    <WorkflowIcons.PurchaseOrder className={classes.smallIcon} />,\n    <WorkflowIcons.Shipping className={classes.smallIcon} />,\n    <WorkflowIcons.Inventory className={classes.bigIcon} />,\n    <WorkflowIcons.SalesOrder className={classes.smallIcon} />,\n    <WorkflowIcons.Invoice className={classes.smallIcon} />,\n    <WorkflowIcons.DeliveryNote className={classes.smallIcon} />,\n    <WorkflowIcons.Customer className={classes.bigIcon} />,\n    <WorkflowIcons.ReceivePayment className={classes.smallIcon} />,\n    <WorkflowIcons.Report className={classes.smallIcon} />\n  ];\n\n  return (\n    <IconButton\n      aria-label={label}\n      className={clsx(classes.icon, steps.locations.includes(label) ? classes.bigButton : classes.smallButton, active && classes.active)}\n      style={{ backgroundColor: colors[index] }}\n      onClick={onClick}\n    >\n      {icons[index]}\n    </IconButton>\n  );\n}\n\nColorStepIcon.propTypes = {\n  active: PropTypes.bool,\n  badge: PropTypes.number,\n  icon: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nexport default ColorStepIcon;\n","import React from 'react';\nimport snakeCase from 'lodash/snakeCase';\nimport PropTypes from 'prop-types';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport WorkflowIcons from './WorkflowIcons';\nimport Folder from '@material-ui/icons/Folder';\nimport { FLOW, WORKFLOW } from './constants';\nimport ColorStepIcon from './ColorStepIcon';\n\nconst useStyles = makeStyles(theme => ({\n  padLeft: {\n    marginLeft: 10,\n  },\n  adjustHeight: {\n    height: 32,\n  },\n}));\n\nfunction WorkflowItem({ vertical, iconOnly, active, disabled, type, label, onClick, ...rest }) {\n  const classes = useStyles();\n  const Icon = WorkflowIcons[type] || Folder;\n  const StepIcon = () => <Icon />;\n  const text = label || WORKFLOW[snakeCase(type).toUpperCase()];\n\n  return (\n    <Step onClick={onClick} active={active} disabled={disabled} className={vertical && classes.padLeft} {...rest}>\n      <StepLabel StepIconComponent={ColorStepIcon} StepIconProps={{ label: text, iconOnly }} className={vertical && classes.adjustHeight}>{!iconOnly && text}</StepLabel>\n    </Step>\n  );\n};\n\nWorkflowItem.propTypes = {\n  vertical: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  component: PropTypes.elementType,\n  onClick: PropTypes.func,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nWorkflowItem.Supplier = props => <WorkflowItem type={'Supplier'} {...props} />;\nWorkflowItem.PurchaseOrder = props => <WorkflowItem type={'PurchaseOrder'} {...props} />;\nWorkflowItem.Shipping = props => <WorkflowItem type={'Shipping'} {...props} />;\nWorkflowItem.Inventory = props => <WorkflowItem type={'Inventory'} {...props} />;\nWorkflowItem.SalesOrder = props => <WorkflowItem type={'SalesOrder'} {...props} />;\nWorkflowItem.Invoice = props => <WorkflowItem type={'Invoice'} {...props} />;\nWorkflowItem.DeliveryNote = props => <WorkflowItem type={'DeliveryNote'} {...props} />;\nWorkflowItem.Customer = props => <WorkflowItem type={'Customer'} {...props} />;\nWorkflowItem.ReceivePayment = props => <WorkflowItem type={'ReceivePayment'} {...props} />;\nWorkflowItem.Report = props => <WorkflowItem type={'Report'} {...props} />;\n\nexport default WorkflowItem;\n","import Workflow from './components/Workflow/index';\nimport WorkflowItem from './components/Workflow/WorkflowItem';\nimport WorkflowIcons from './components/Workflow/WorkflowIcons';\nimport WorkflowColors from './components/Workflow/WorkflowColors';\nimport { WorkflowType } from './components/Workflow/constants';\n\nexport default Workflow;\n\nexport {\n  Workflow,\n  WorkflowType,\n  WorkflowItem,\n  WorkflowIcons,\n  WorkflowColors,\n};\n","/*\n * HomePage\n *\n * This is the first thing users see of our App, at the '/' route\n *\n */\n\nimport React, { useState } from \"react\";\nimport { usePermissions, Loading } from \"react-admin\";\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ProfitChart from \"./boards/ProfitChart\";\nimport ProfitNumSum from \"./boards/ProfitNumSum\";\nimport PurchasingForecast from \"./boards/PurchasingForecast\";\nimport SalesOrderChart from \"./boards/SalesOrderChart\";\nimport SalesOrderNumSum from \"./boards/SalesOrderNumSum\";\nimport SalesOrderRecent from \"./boards/SalesOrderRecent\";\nimport PurchaseOrderRecent from \"./boards/PurchaseOrderRecent\";\nimport DeliveryNoteWaiting from \"./boards/DeliveryNoteWaiting\";\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {\n      /*Ignore*/\n    }\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      })\n    );\n  }\n}\n\nconst originalLayouts = getFromLS(\"layouts\") || {};\nexport default function DashboardPage() {\n  const { loaded, permissions } = usePermissions();\n  const [layouts, setLayouts] = useState(originalLayouts);\n  const onLayoutChange = (layout, layouts) => {\n    saveToLS(\"layouts\", layouts);\n    setLayouts(layouts);\n  };\n  if (!loaded) return <Loading />;\n\n  const renderProfitChart = () => {\n    if ([\"admin\", \"account\"].includes(permissions)) {\n      return (\n        <div key=\"profitChart\" data-grid={{ w: 8, h: 10, x: 0, y: 0, minW: 4, minH: 10 }}>\n          <ProfitChart />\n        </div>\n      );\n    }\n  };\n\n  const renderProfitNumSum = () => {\n    if ([\"admin\", \"account\"].includes(permissions)) {\n      return (\n        <div key=\"profitNumSum\" data-grid={{ w: 4, h: 10, x: 8, y: 0, minW: 2, minH: 10 }}>\n          <ProfitNumSum />\n        </div>\n      );\n    }\n  };\n\n  const renderPurchasingForecast = () => {\n    if ([\"admin\"].includes(permissions)) {\n      return (\n        <div key=\"purchasingForecast\" data-grid={{ w: 12, h: 10, x: 0, y: 10, minW: 4, minH: 10 }}>\n          <PurchasingForecast />\n        </div>\n      );\n    }\n  };\n\n  const renderSalesOrderChart = () => {\n    if ([\"admin\", \"account\", \"sales\"].includes(permissions)) {\n      return (\n        <div key=\"salesOrderChart\" data-grid={{ w: 8, h: 10, x: 0, y: 0, minW: 4, minH: 10 }}>\n          <SalesOrderChart />\n        </div>\n      );\n    }\n  };\n\n  const renderSalesOrderNumSum = () => {\n    if ([\"admin\", \"account\", \"sales\"].includes(permissions)) {\n      return (\n        <div key=\"salesOrderNumSum\" data-grid={{ w: 4, h: 10, x: 8, y: 0, minW: 2, minH: 10 }}>\n          <SalesOrderNumSum />\n        </div>\n      );\n    }\n  };\n\n  const renderSalesOrderRecent = () => {\n    if ([\"admin\", \"account\", \"sales\"].includes(permissions)) {\n      return (\n        <div key=\"salesOrderRecent\" data-grid={{ w: 12, h: 10, x: 0, y: 10, minW: 4, minH: 10 }}>\n          <SalesOrderRecent />\n        </div>\n      );\n    }\n  };\n\n  const renderPurchaseOrderRecent = () => {\n    if ([\"admin\", \"account\"].includes(permissions)) {\n      return (\n        <div key=\"purchaseOrderRecent\" data-grid={{ w: 12, h: 10, x: 0, y: 10, minW: 4, minH: 10 }}>\n          <PurchaseOrderRecent />\n        </div>\n      );\n    }\n  };\n\n  const renderDeliveryNoteWaiting = () => {\n    if ([\"admin\", \"inventory\"].includes(permissions)) {\n      return (\n        <div key=\"deliveryNoteWaiting\" data-grid={{ w: 12, h: 10, x: 0, y: 10, minW: 4, minH: 10 }}>\n          <DeliveryNoteWaiting />\n        </div>\n      );\n    }\n  };\n\n  const dashboards = [renderProfitChart(), renderProfitNumSum(), renderPurchasingForecast(), renderSalesOrderChart(), renderSalesOrderNumSum(), renderSalesOrderRecent(), renderPurchaseOrderRecent(), renderDeliveryNoteWaiting()].filter(Boolean);\n\n  return (\n    <ResponsiveReactGridLayout className=\"layout\" layouts={layouts} cols={{ lg: 12, md: 12, sm: 6, xs: 4, xxs: 2 }} rowHeight={30} onLayoutChange={onLayoutChange}>\n      {dashboards}\n    </ResponsiveReactGridLayout>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/template.8b755b7f.csv\";","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from '../../Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Profit</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst ProfitChart = () => {\n  const classes = useStyles();\n  return (\n\n      <Paper className={classes.paper}>\n        <Chart />\n      </Paper>\n\n  );\n};\n\nexport default ProfitChart;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from '../../Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Profit (Jan, 2020)</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 January, 2020\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Deposits from './Deposits';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst ProfitNumSum = () => {\n  const classes = useStyles();\n  return (\n\n      <Paper className={classes.paper}>\n        <Deposits />\n      </Paper>\n\n  );\n};\n\nexport default ProfitNumSum;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Purchasing Forecast</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Orders from './Orders';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst PurchasingForecast = () => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <Orders />\n    </Paper>\n  );\n};\n\nexport default PurchasingForecast;","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from '../../Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Sales Order</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst SalesOrderChart = () => {\n  const classes = useStyles();\n  return (\n\n      <Paper className={classes.paper}>\n        <Chart />\n      </Paper>\n  );\n}\n\nexport default SalesOrderChart;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from '../../Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Total Sales</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Deposits from './Deposits';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst SalesOrderNumSum = () => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <Deposits />\n    </Paper>\n  );\n};\n\nexport default SalesOrderNumSum;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Sales Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Orders from './Orders';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst SalesOrderRecent = () => {\n  const classes = useStyles();\n  return (\n\n      <Paper className={classes.paper}>\n        <Orders />\n      </Paper>\n\n  );\n};\n\nexport default SalesOrderRecent;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Purchase Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Orders from './Orders';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst PurchaseOrderRecent = () => {\n  const classes = useStyles();\n  return (\n\n      <Paper className={classes.paper}>\n        <Orders />\n      </Paper>\n\n  );\n}\n\nexport default PurchaseOrderRecent;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Delivery Notes</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Orders from './Orders';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst DeliveryNoteWaiting = () => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <Orders />\n    </Paper>\n  );\n};\n\nexport default DeliveryNoteWaiting;"],"sourceRoot":""}