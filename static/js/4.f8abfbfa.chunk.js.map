{"version":3,"sources":["containers/MonthlyReportPage/Title.js","containers/MonthlyReportPage/Chart.js","containers/MonthlyReportPage/Orders.js","containers/MonthlyReportPage/Card.js","containers/Layout/Title.js","containers/MonthlyReportPage/Filter.js","containers/MonthlyReportPage/SalesOrderCountingCard.js","containers/MonthlyReportPage/salesOrderDetail.js","containers/MonthlyReportPage/index.js"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","amount","id","date","name","shipTo","paymentMethod","makeStyles","theme","seeMore","marginTop","spacing","depositContext","flex","useStyles","title","flexGrow","classes","noWrap","className","GET_SALES_ORDERS","gql","FilterCard","setSalesOrders","useState","Date","selectedDate","setSelectedDate","status","setStatus","createdAt_gt","createdAt_lt","where","setWhere","useQuery","variables","orderBy","fetching","loading","data","useEffect","salesOrders","Fragment","DatePicker","format","views","inputVariant","fullWidth","value","label","onChange","toISOString","minDate","FormControl","InputLabel","Select","labelId","event","target","state","map","e","MenuItem","key","SalesOrderCountingCard","totalPrice","reduce","acc","cur","grandTotal","Grid","displayType","thousandSeparator","prefix","length","SalesOrdersDetail","Table","size","TableHead","TableRow","TableCell","align","TableBody","row","code","shop","customer","nameEn","container","paddingTop","paddingBottom","paper","padding","display","overflow","flexDirection","height","MonthlyReportPage","item","xs","md","lg","Paper"],"mappings":"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","file":"static/js/4.f8abfbfa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('1st', 0),\n  createData('5th', 300),\n  createData('10th', 600),\n  createData('15th', 800),\n  createData('20th', 1500),\n  createData('25th', 2000),\n  createData('30th', 2400),\n];\n\nexport default function Chart() {\n  return (\n    <React.Fragment>\n      <Title>2019</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" />\n          <YAxis>\n            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#556CD6\" dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","/* eslint-disable no-script-url */\n\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Supplier</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" component={RouterLink} to=\"/balance\">\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","/* eslint-disable no-script-url */\n\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Card() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <Link color=\"primary\" component={RouterLink} to=\"/balance\">\n        View balance\n      </Link>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Title(props) {\n  const classes = useStyles();\n  return (\n    <Typography component=\"h1\" variant=\"h4\" color=\"primary\" noWrap className={classes.title}>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","/* eslint-disable no-script-url */\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport {\n  Typography,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Grid,\n} from \"@material-ui/core\";\nimport Title from \"./Title\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport dayjs from \"dayjs\";\n\nconst GET_SALES_ORDERS = gql`\n  query salesOrders($where: SalesOrderWhereInput) {\n    salesOrders(where: $where, orderBy: updatedAt_DESC) {\n      id\n      code\n      shop {\n        id\n        code\n        nameEn\n        nameChi\n        deliveryDay\n        customer {\n          id\n          nameEn\n          nameChi\n        }\n      }\n      grandTotal\n      state\n    }\n  }\n`;\nexport default function FilterCard({ setSalesOrders }) {\n  const [selectedDate, setSelectedDate] = useState([new Date(), new Date()]);\n  const [status, setStatus] = useState(null);\n  const [where, setWhere] = useState({\n    createdAt_gt: selectedDate[0],\n    createdAt_lt: selectedDate[1],\n  });\n  const { loading: fetching, data } = useQuery(GET_SALES_ORDERS, {\n    variables: {\n      where: where,\n      orderBy: \"updatedAt_DESC\",\n    },\n  });\n  const stateList = [\n    \"ALL\",\n    \"RECEIVED\",\n    \"CONFIRMED\",\n    \"INVOICED\",\n    \"PACKED\",\n    \"DELIVERED\",\n    \"PAID\",\n    \"DELETED\",\n  ];\n\n  useEffect(() => {\n    if (data) {\n      setSalesOrders(data.salesOrders);\n    }\n  }, [data]);\n\n  const handleFromDateChange = (date) => {\n    setSelectedDate([date.toISOString(), selectedDate[1]]);\n    setWhere({\n      ...where,\n      createdAt_gt: date.toISOString(),\n      createdAt_lt: selectedDate[1],\n    });\n  };\n\n  const handleToDateChange = (date) => {\n    setSelectedDate([selectedDate[0], date.toISOString()]);\n    setWhere({\n      ...where,\n      createdAt_gt: selectedDate[0],\n      createdAt_lt: date.toISOString(),\n    });\n  };\n\n  const handleClick = (event) => {\n    setStatus(event.target.value);\n    setWhere({ ...where, state: event.target.value });\n    if (event.target.value === \"ALL\") {\n      setWhere({\n        createdAt_gt: selectedDate[0],\n        createdAt_lt: selectedDate[1],\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Title>Select Date</Title>\n      <DatePicker\n        format=\"DD MMM YYYY\"\n        views={[\"year\", \"month\", \"date\"]}\n        inputVariant=\"filled\"\n        fullWidth\n        variant=\"inline\"\n        value={selectedDate[0]}\n        label=\"Filter From: \"\n        onChange={handleFromDateChange}\n      />\n      <h2>-To-</h2>\n      <DatePicker\n        minDate={selectedDate[0]}\n        format=\"DD MMM YYYY\"\n        views={[\"year\", \"month\", \"date\"]}\n        inputVariant=\"filled\"\n        fullWidth\n        variant=\"inline\"\n        value={selectedDate[1]}\n        label=\"Filter To: \"\n        onChange={handleToDateChange}\n      />\n\n      <FormControl>\n        <InputLabel id=\"demo-simple-select-label\">\n          Select Sales Order Status\n        </InputLabel>\n\n        <Select\n          label=\"Select Sales Order Status\"\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={status}\n          onChange={handleClick}\n        >\n          {stateList.map((e) => (\n            <MenuItem key={e} value={e}>\n              {e}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      {fetching ? <h1>Loading...</h1> : <h1>Completed</h1>}\n    </React.Fragment>\n  );\n}\n","/* eslint-disable no-script-url */\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NumberFormat from \"react-number-format\";\nimport Title from \"./Title\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function SalesOrderCountingCard({ salesOrders = [] }) {\n  const classes = useStyles();\n  const totalPrice = salesOrders.reduce((acc, cur) => acc + cur.grandTotal, 0);\n\n  return (\n    <React.Fragment>\n      <Title>Sales Orders Count</Title>\n      <Grid className={classes.depositContext}>\n        <Typography color=\"textSecondary\">Total price</Typography>\n        <Typography component=\"p\" variant=\"h4\">\n          <NumberFormat\n            value={totalPrice}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={\"$\"}\n          />\n        </Typography>\n      </Grid>\n      <Grid className={classes.depositContext}>\n        <Typography color=\"textSecondary\">Quantity</Typography>\n        <Typography component=\"p\" variant=\"h4\">\n          {salesOrders.length}\n        </Typography>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","/* eslint-disable no-script-url */\n\nimport React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport NumberFormat from \"react-number-format\";\n\nimport Title from \"./Title\";\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function SalesOrdersDetail({ salesOrders = [] }) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Sales Order Number</TableCell>\n            <TableCell>Customer</TableCell>\n            <TableCell>Customer Shop</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell align=\"right\">Grand total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {salesOrders.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.code}</TableCell>\n              <TableCell>{row.shop.customer.nameEn}</TableCell>\n              <TableCell>{row.shop.nameEn}</TableCell>\n              <TableCell>{row.state}</TableCell>\n              <TableCell align=\"right\">\n                <NumberFormat\n                  value={row.grandTotal}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","/**\n *\n * MonthlyReportPage\n *\n */\n\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Chart from \"./Chart\";\nimport Orders from \"./Orders\";\nimport Card from \"./Card\";\nimport Title from \"../Layout/Title\";\nimport FilterCard from \"./Filter\";\nimport SalesOrderCountingCard from \"./SalesOrderCountingCard\";\nimport SalesOrdersDetail from \"./salesOrderDetail\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(16),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: 340,\n  },\n}));\n\nexport function MonthlyReportPage() {\n  const classes = useStyles();\n  const [salesOrders, setSalesOrders] = useState();\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        {/* <Title>MonthlyReport</Title> */}\n        <Title>Sales Orders Report</Title>\n      </Grid>\n      {/* Chart */}\n      {/* <Grid item xs={12} md={8} lg={9}>\n        <Paper className={classes.paper}>\n          <Chart />\n        </Paper>\n      </Grid> */}\n\n      {/* Filter Date Card */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={classes.paper}>\n          <FilterCard setSalesOrders={setSalesOrders} />\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={classes.paper}>\n          <SalesOrderCountingCard salesOrders={salesOrders} />\n        </Paper>\n      </Grid>\n\n      {/* Sales Order Detail */}\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <SalesOrdersDetail salesOrders={salesOrders} />\n        </Paper>\n      </Grid>\n\n      {/* Recent Deposits */}\n      {/* <Grid item xs={12} md={4} lg={3}>\n        <Paper className={classes.paper}>\n          <Card />\n        </Paper>\n      </Grid> */}\n\n      {/* Recent Orders */}\n      {/* <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <Orders />\n        </Paper>\n      </Grid> */}\n    </Grid>\n  );\n}\n\nMonthlyReportPage.propTypes = {};\n\nexport default MonthlyReportPage;\n"],"sourceRoot":""}