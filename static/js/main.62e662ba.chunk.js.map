{"version":3,"sources":["utils/loadable.js","containers/NotFoundPage/Loadable.js","containers/Layout/AppBar.js","containers/Layout/Sidebar.js","containers/Layout/Workflow.js","components/Breadcrumb/index.js","containers/Layout/index.js","containers/MonthlyReportPage/Loadable.js","containers/QuarterReportPage/Loadable.js","containers/AnnualReportPage/Loadable.js","containers/StockTransfer/ItemListForm.js","components/Inputs/WarehouseAutocomplete.js","containers/StockTransfer/index.js","containers/StockDispose/ItemListForm.js","containers/StockDispose/index.js","containers/Labelling/ItemListForm.js","containers/Labelling/index.js","components/BilingualField/index.js","containers/Inventory/ExpectedQuantityField.js","containers/Inventory/MonthDiffField.js","redux/breadcrumbs.js","containers/Inventory/index.js","components/Inputs/PurchaseOrderAutocomplete.js","utils/sequentialNumber.js","containers/Inventory/AddStock.js","containers/Xero/index.js","containers/Xero/callback.js","containers/DeliveryItem/index.js","routes.js","dataProvider/index.js","dataProvider/authProvider.js","resources/Warehouse/index.js","resources/Supplier/index.js","resources/ReceivePayment/index.js","components/Shows/ShowText.js","resources/DeliveryNote/Create/1_InvoiceSelector.js","resources/DeliveryNote/Create/ItemAutocomplete.js","resources/DeliveryNote/Create/ProductAutocomplete.js","resources/DeliveryNote/Create/2_QuantityCheckForm.js","resources/DeliveryNote/Create/3_BoxingForm.js","resources/DeliveryNote/Create/4_Review.js","resources/DeliveryNote/Create/index.js","utils/capitalizeFirstLetter.js","utils/generateSC.js","utils/generateDN.js","resources/DeliveryNote/Show.js","components/Inputs/CustomerAutocomplete.js","resources/DeliveryNote/index.js","resources/DeliveryItem/index.js","resources/DeliveryItem/Create/index.js","components/Inputs/SalesOrderAutocomplete.js","resources/Invoice/Create/SalesOrderSelector.js","resources/Invoice/Create/Review.js","resources/Invoice/Create/BasicForm.js","resources/Invoice/Create/index.js","utils/generateINV.js","resources/Invoice/Show.js","resources/Invoice/index.js","resources/SalesOrder/Create/ProductListHeader.js","resources/SalesOrder/Create/TablePaginationActions.js","resources/SalesOrder/Create/ProductListPagination.js","resources/SalesOrder/Create/ProductListToolbar.js","resources/SalesOrder/Create/ProductSelectModal.js","resources/SalesOrder/Create/ProductSelector.js","components/Inputs/CustomerShopAutocomplete.js","resources/SalesOrder/Create/BasicForm.js","resources/SalesOrder/Create/Review.js","resources/SalesOrder/Create/index.js","resources/SalesOrder/Show.js","resources/SalesOrder/Edit.js","resources/SalesOrder/index.js","components/Inputs/SupplierAutocomplete.js","resources/PurchaseOrder/constants.js","resources/PurchaseOrder/Create/BasicForm.js","resources/PurchaseOrder/Create/Review.js","resources/PurchaseOrder/Create/ProductImport.js","resources/PurchaseOrder/Create/index.js","resources/PurchaseOrder/Show.js","resources/PurchaseOrder/index.js","resources/Shipping/Create/PurchaseOrderSelector.js","resources/Shipping/Create/QuantityCheckRow.js","resources/Shipping/Create/QuantityCheckTable.js","resources/Shipping/Create/Review.js","utils/uniqueLabelCheck.js","resources/Shipping/Create/QuantityCheckForm.js","resources/Shipping/Create/QuantityCheck.js","resources/Shipping/Create/index.js","resources/Shipping/Show.js","resources/Shipping/index.js","resources/Product/Show.js","resources/Product/index.js","resources/Customer/index.js","resources/User/index.js","resources/UserGroup/index.js","resources/CustomerGroup/index.js","resources/CustomerShop/index.js","resources/ProductCategory/index.js","i18n/en.js","i18nProvider.js","resources/PurchaseOrderItem/index.js","resources/ShippingItem/index.js","resources/SalesOrderItem/index.js","App.js","serviceWorker.js","index.js","containers/DashboardPage/index.js","resources/PurchaseOrder/Create/template.csv","containers/DashboardPage/boards/ProfitChart/Chart.js","containers/DashboardPage/boards/ProfitChart/index.js","containers/DashboardPage/boards/ProfitNumSum/Deposits.js","containers/DashboardPage/boards/ProfitNumSum/index.js","containers/DashboardPage/boards/PurchasingForecast/Orders.js","containers/DashboardPage/boards/PurchasingForecast/index.js","containers/DashboardPage/boards/SalesOrderChart/Chart.js","containers/DashboardPage/boards/SalesOrderChart/index.js","containers/DashboardPage/boards/SalesOrderNumSum/Deposits.js","containers/DashboardPage/boards/SalesOrderNumSum/index.js","containers/DashboardPage/boards/SalesOrderRecent/Orders.js","containers/DashboardPage/boards/SalesOrderRecent/index.js","containers/DashboardPage/boards/PurchaseOrderRecent/Orders.js","containers/DashboardPage/boards/PurchaseOrderRecent/index.js","containers/DashboardPage/boards/DeliveryNoteWaiting/Orders.js","containers/DashboardPage/boards/DeliveryNoteWaiting/index.js","containers/DashboardPage/Title.js"],"names":["loadable","importFunc","fallback","LazyComponent","lazy","props","useStyles","makeStyles","theme","toolbar","paddingRight","spacing","backgroundColor","palette","primary","main","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginLeft","marginRight","menuButtonIconClosed","transform","menuButtonIconOpen","title","flex","textOverflow","whiteSpace","overflow","name","xeroStyle","color","MyAppBar","children","classesOverride","classes","className","logout","logo","open","rest","userMenu","translate","useTranslate","dispatch","useDispatch","isXSmall","useMediaQuery","breakpoints","down","useState","settingsMenu","setSettingsMenu","uMenu","setUserMenu","handleSettingsClose","event","HideOnScroll","Toolbar","disableGutters","variant","IconButton","aria-label","onClick","toggleSidebar","classNames","root","Typography","to","style","aria-controls","aria-haspopup","currentTarget","id","anchorEl","keepMounted","Boolean","onClose","MenuItemLink","primaryText","leftIcon","LocationCity","Storefront","AccountCircle","localStorage","getItem","drawerPaper","marginTop","withRouter","location","history","useSelector","state","admin","ui","sidebarOpen","paths","pathname","split","isActive","type","length","pluralize","singular","handleClick","push","Supplier","active","PurchaseOrder","Shipping","Inventory","SalesOrder","Invoice","DeliveryNote","Customer","ReceivePayment","Report","breadcrumb","paddingLeft","paddingTop","paddingBottom","Breadcrumb","breadcrumbs","links","last","pop","linkStyle","textDecoration","hover","map","bc","key","url","label","display","flexDirection","zIndex","minHeight","background","default","position","minWidth","width","appFrame","up","contentWithSidebar","flexGrow","content","flexBasis","padding","Layout","dashboard","useEffect","setSidebarVisibility","ThemeProvider","Workflow","hasDashboard","Notification","GET_ITEM_LIST","gql","table","ItemListForm","labelFrom","onChange","useQuery","variables","where","warehouse","label_contains","loading","data","Loading","loadingPrimary","inventoryItems","Box","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","code","expiryDate","GET_WAREHOUSES","WarehouseAutocomplete","defaultValue","fetching","React","setOpen","options","setOptions","warehouses","obj","Autocomplete","onOpen","evt","value","find","getOptionLabel","option","renderInput","params","TextField","InputProps","endAdornment","Fragment","CircularProgress","size","card","margin","StepperConnector","withStyles","alternativeLabel","top","backgroundImage","completed","line","height","border","borderRadius","StepConnector","StockTransfer","warehouseId","setWarehouseId","mr","Card","Stepper","connector","Step","StepLabel","StepIconComponent","House","textAlign","Button","console","log","itemGroups","Object","values","reduce","results","item","brand","sku","expiryDay","price","unit","quantity","cur","parseInt","forEach","itemGroup","labelTo","BilingualField","source","record","handleExpectedSales","expectedSalesDate","expectedSales","monthlySalesOnAverage","dayjs","diff","Math","floor","toFixed","NumberField","setBreadcrumbs","payload","addBreadcrumbs","initialState","previousState","isArray","breadcrumbBase","staticContext","permissions","usePermissions","add","setExpectedSalesDate","useHistory","SearchFilter","Filter","TextInput","alwaysOn","StatusEditButton","EditButton","basePath","List","resource","hasCreate","hasEdit","hasShow","hasList","exporter","products","postsForExport","product","nameChi","stock","avg","incoming","incomingQuantity","nextShipment","jsonExport","headers","err","csv","downloadCSV","filters","Datagrid","ReferenceField","reference","link","sortable","FunctionField","render","MonthDiffField","ExpectedQuantityField","Grid","container","justify","alignItems","DatePicker","inputVariant","openTo","views","GET_PURCHASE_ORDER","PurchaseOrderAutocomplete","state_in","orderBy","purchaseOrders","po","fullWidth","alphaNumericIncrementer","str","invNum","replace","index","toUpperCase","substr","char","String","fromCharCode","charCodeAt","invoiceNumber","increment","Error","array","lastSegment","priorSegment","indexOf","nextNumber","Array","result","useStyle","autocomplete","poAutocomplete","Xero","XeroCallback","match","QUERY_ITEM","DELETE_DELIVERY_ITEM","TRANSFER","exact","path","MonthlyReportPage","QuarterReportPage","AnnualReportPage","productId","initialValues","purchaseOrder","cost","formData","setFormData","notify","useNotify","INWAREHOUSE","useMutation","inWarehouse","Product","useGetOne","error","SimpleForm","inventoryItemlist","currentLabel","connect","purchaseOrderId","sequentialNumber","x","then","catch","message","Save","redirect","alignContent","e","target","InputLabelProps","shrink","FormDataConsumer","setLabelFrom","Label","DeleteForever","deleteDeliveryItem","transfer","itemData","inventoryItem","handleSave","a","toWarehouseId","inventoryItemIds","fromWarehouseIds","go","direction","disabled","xs","name_not_in","convertFileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","rawFile","onload","onerror","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","defaultOptions","watchQuery","fetchPolicy","errorPolicy","query","apolloClient","getDataProvider","buildGraphQLProvider","provider","fetchType","images","imagesIds","newPictures","filter","p","File","formerPictures","all","base64Pictures","picture64","src","transformedNewPictures","GET_USER","authProvider","login","username","password","AND","response","loginUser","users","setItem","permission","toLowerCase","JSON","stringify","group","removeItem","checkAuth","checkError","status","getPermissions","role","WarehouseCreate","Create","validate","required","RadioButtonGroupInput","choices","WarehouseEdit","Edit","WarehouseList","rowClick","DeleteButton","WarehouseShow","ShowController","controllerProps","Show","SimpleShowLayout","SupplierCreate","email","multiline","SupplierEdit","SupplierShow","EmailField","DateField","SupplierList","sort","field","order","ReceivePaymentCreate","ReferenceInput","SelectInput","optionText","DateInput","ReceivePaymentShow","ReceivePaymentList","text","hint","ShowText","InvoiceSelector","formProps","renderInvoiceDetails","invoiceId","sm","ReferenceFieldController","referenceRecord","salesOrderId","renderCustomerInput","customerId","input","handleChange","FormControl","InputLabel","Select","d","MenuItem","currency","ReferenceArrayField","addLabel","renderSalesOrderDetails","filterToQuery","searchText","code_contains","subscription","GET_ITEMS","InventoryItemAutocomplete","setLabel","productId_in","name_not","includes","autoSelect","autoComplete","autoHighlight","onInputChange","getOptionSelected","GET_PRODUCT_ID","GET_ITEM","ProductAutocomplete","productIds","setCode","id_in","onCompleted","productData","useLazyQuery","itemId","GET_INVOICE","ChipsArrayField","onDelete","Chip","v","productCode","productNameEn","nameEn","productNameChi","boxNum","handleDeleteChange","items","invoice","salesOrder","other","selected","selectedNum","placeholder","keys","ids","currentSort","BoxSelectField","maxBox","labelId","range","i","setMaxBox","r","Review","format","layout","paper","marginBottom","stepper","SaveWithNoteButton","useCreate","redirectTo","useRedirect","formState","useFormState","res","useCallback","others","onSuccess","newRecord","smart_count","onFailure","SaveButton","handleSubmitWithRedirect","activeStep","setActiveStep","steps","handleNext","handleBack","FormWithRedirect","justifyContent","capitalizeFirstLetter","splitStr","charAt","substring","join","SCGenerator","dataArray","now","translator","T2W","doc","jsPDF","page","internal","pageSize","getWidth","getHeight","beforePageContent","getNumberOfPages","toString","putTotalPages","setFontSize","setFontStyle","shop","deliverAddress","customer","phone","shippingDate","setLineWidth","setDrawColor","afterPageContent","columnStyles","count","columnWidth","no","des","qty","amount","halign","headStyles","fillColor","textColor","cellWidth","bottom","horizontal","b","totalPrice","autoTable","dataKey","header","previous","finalY","subtotal","discountAmount","grandTotal","toWords","strings","save","DNGenerator","deliveryNote","shipmentDate","exDate","groupedItems","lodash","groupBy","itemA","itemB","abs","GET_DN","toEditItem","toDeleteItem","isPaid","Print","actions","referece","Add","ReferenceManyField","GET_CUSTOMER","CustomerAutocomplete","initialValue","customers","setValue","o","DeliveryNoteEdit","StatusButton","loaded","DeliveryNoteList","UPDATEDELIVERY","DeliveryItemEdit","updateDeliveryNote","useLocation","selectedProduct","setSelectedProduct","EditSaveButton","update","DeliveryEditItemToolbar","submitOnEnter","OptionRenderer","choice","handleOnChange","AutocompleteInput","inputText","matchSuggestion","filterValue","suggestion","tempProduct","renderLable","CREATE_DELIVERY_ITEM","SaveItemButton","createDeliveryItem","valid","DeliveryItemCreateToolbar","DeliveryItemCreate","NumberInput","GET_SALES_ORDER","SalesOrderAutocomplete","salesOrders","SalesOrderSelector","salesOrderCode","contactPerson","customerShop","scope","gutterBottom","colSpan","BasicForm","minDate","defaultDay","week","deliveryDay","Date","getHours","set","setDate","getDate","matchCaseWeek","day","nextWeekDay","toISOString","noValidate","newDate","buttons","button","GET_LAST_INVOICE","ADD_INVOICE","addInvoice","lastInvoice","invoices","paymentStatus","INVGenerator","setFillColor","rect","InvoiceShow","InvoiceEdit","InvoiceList","filterDefaultValues","state_not","ProductListHeader","onSort","setOrderBy","desc","setDesc","createOrderBy","TableSortLabel","useStyles1","flexShrink","TablePaginationActions","useTheme","rowsPerPage","onChangePage","ceil","max","ProductListPagination","totalRows","setPage","setRowsPerPage","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","ActionsComponent","GET_PRODUCT_CATEGORIES","iconButton","divider","chips","flexWrap","ProductListToolbar","setWhere","search","setSearch","selectedCategories","setSelectedCategories","timeConstraint","setTimeConstraint","categories","productCategories","code_starts_with","w","Divider","orientation","onSubmit","preventDefault","InputBase","Search","tc","splice","categoryId","c","ProductSelectModal","onCancel","openProp","wholeSalePriceList","wholeSalePrice1","wholeSalePrice2","wholeSalePrice3","wholeSalePrice4","wholeSalePrice5","discount","percent","parseFloat","productWholeSalesPriceList","minOrderQuantity","wholesalePlan","selectBtn","setSelectBtn","handleClose","handleWholeSalePrice","Dialog","aria-labelledby","DialogTitle","DialogContent","helperText","ButtonGroup","undefined","DialogActions","GET_PRODUCTS","visuallyHidden","clip","image","img","maxWidth","maxHeight","ProductSelector","onSelected","first","skip","rows","productsConnection","edges","node","aggregate","emptyRows","min","selectedIds","s","handleSelected","Remove","customerShops","setCustomerShops","shops","newValue","fontWeight","expectedDeliveryAt","subTotal","ADD_SALES_ORDER","GET_LAST_SALES_ORDER","GET_FIRST_CUSTOMER","addPO","loadingPO","lastPO","loadingCustomer","firstCustomer","Badge","float","badgeContent","ShoppingCart","currentIds","shopId","GET_SC","SalesOrderShow","MySaveButton","useUpdate","edit","formValues","previousData","undoable","MyToolbar","SalesOrderEdit","StatusDeleteButton","SalesOrderList","GET_SUPPLIER","SupplierAutocomplete","suppliers","creditLine","PO_FREEZE_STATE","supplier","toDate","GET_SUPPLIER_PO","end","start","createdAt_gt","createdAt_lt","supplierId","supplierPO","supplierLine","supplierCreditLine","acc","canCredit","TableContainer","slice","ProductImport","importSuccess","arr","shift","backendData","onFileLoaded","href","csvTemplate","ADD_PURCHASE_ORDER","GET_LAST_PURCHASE_ORDER","GET_FIRST_SUPPLIER","isNextBtnDisable","loadingSupplier","firstSupplier","PurchaseOrderShow","setState","onFetchState","PurchaseOrderEdit","PurchaseOrderList","PurchaseOrderSelector","exactQuantity","renderPurchaseOrderDetails","useRowStyles","borderBottom","onRowClick","onRemoveChecked","checked","totalExactQuantity","sum","KeyboardArrowUp","KeyboardArrowDown","Collapse","in","timeout","unmountOnExit","detail","filterItemId","records","QuantityCheckRow","QuantityCheckTable","uniqueLabelCheck","dataBool","QUERY_SHIPPING_LABEL","defaultLabel","setDefaultLabel","labelList","setLabelList","shippingItems","form","checking","setTimeout","reset","handleSubmit","submitting","pristine","handleRowClick","change","handleRemoveChecked","QuantityCheck","setCheckSuccess","QuantityCheckForm","ADD_SHIPPING","addShipping","checkedProducts","handleClickOpen","aria-describedby","DialogContentText","autoFocus","checkQuantity","deliveryAt","expectedQuantity","fields","ShippingShow","ShippingEdit","ShippingList","ProductShow","SingleFieldList","ChipField","ProductCreate","ImageInput","accept","multiple","ImageField","ProductEdit","ReferenceArrayInput","SelectArrayInput","ProductList","CustomerCreate","CustomerEdit","CustomerShow","state_not_in","CustomerList","UserCreate","parse","PasswordInput","UserEdit","UserShow","UserList","permission_not","UserGroupCreate","UserGroupEdit","UserGroupShow","UserGroupList","CustomerGroupCreate","CustomerGroupEdit","CustomerGroupShow","CustomerGroupList","optionRenderer","CustomerShopCreate","perPage","CheckboxGroupInput","CustomerShopEdit","CustomerShopShow","dayNum","getWeekDay","CustomerShopList","ProductCategoryCreate","ProductCategoryEdit","ProductCategoryShow","ProductCategoryList","softwareName","menu","home","replenish","sale","settings","reports","shipment","inventory","customerGroup","user","userGroup","productCategory","salesShipping","receivePayment","monthly","quarterly","annual","warehousing","labelling","shipping","packing","stockCheck","stockTransfer","stockDispose","noNeedThisProduct","delivery","wholeSalePrice","expiredIn6Months","selectProducts","createPurchaseOrder","editPurchaseOrder","drafts","waitingShipment","basicInfo","productName","review","purchaseOrderDetails","createSalesOrder","editSalesOrder","salesOrderDetails","productList","shippingDelivery","needToUpdatePO","clickHere","unlabelledItem","selectPurchaseOrder","quantityCheck","selectWarehouse","allTheFollowing","changeAll","changeThisOnly","newOrders","selectSalesOrder","shippingDetails","invoiceDetails","trash","productItem","countryOfOrigin","listView","heatMapView","selectInvoice","quantityNeed","packingBox","deliveryDate","labelNo","salesSummary","mobile","tel","shippingAddress","billingAddress","readMore","resources","common","addNew","list","approved","new","date","draft","confirm","confirmed","deleted","cancel","assign","from","next","prev","information","pending","sent","acked","shipped","arrived","received","packed","delivered","paid","print","salesman","delete","pageNotFound","i18nProvider","polyglotI18nProvider","locale","englishMessages","en","messages","chineseTraditionalMessages","PurchaseOrderItemCreateToolbar","PurchaseOrderItemCreate","initialsValue","PurchaseOrderItemEdit","ShippingItemEdit","SalesOrderItemCreateToolbar","SalesOrderItemCreate","customerPlan","setSelectProduct","renderBtnGroup","UPDATE_SALES_ORDER_ITEM","SaveEditButton","subPrice","SalesOrderItemEditToolBar","SalesOrderItemEdit","createMuiTheme","sidebar","closedWidth","createHistory","App","dataProvider","setDataProvider","dp","utils","DayjsUtils","Admin","DashboardPage","catchAll","NotFoundPage","customRoutes","routes","customReducers","breadcrumbReducer","Resource","show","DeliveryNoteCreate","DeliveryNoteShow","InvoiceCreate","SalesOrderCreate","PurchaseOrderCreate","ShippingCreate","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ResponsiveReactGridLayout","WidthProvider","Responsive","originalLayouts","ls","global","getFromLS","layouts","setLayouts","dashboards","data-grid","h","y","minW","minH","renderProfitChart","renderProfitNumSum","renderPurchasingForecast","renderSalesOrderChart","renderSalesOrderNumSum","renderSalesOrderRecent","renderPurchaseOrderRecent","renderDeliveryNoteWaiting","cols","lg","md","xxs","rowHeight","onLayoutChange","module","exports","createData","time","Chart","Title","right","left","stroke","secondary","angle","textAnchor","fill","dot","ProfitChart","depositContext","Deposits","Link","ProfitNumSum","shipTo","paymentMethod","seeMore","Orders","PurchasingForecast","SalesOrderChart","SalesOrderNumSum","SalesOrderRecent","PurchaseOrderRecent","DeliveryNoteWaiting"],"mappings":"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","file":"static/js/main.62e662ba.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\n\nconst loadable = (importFunc, { fallback = null } = { fallback: null }) => {\n  const LazyComponent = lazy(importFunc);\n\n  return props => (\n    <Suspense fallback={fallback}>\n      <LazyComponent {...props} />\n    </Suspense>\n  );\n};\n\nexport default loadable;\n","/**\n * Asynchronously loads the component for NotFoundPage\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","// in src/MyAppBar.js\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  useTranslate,\n  HideOnScroll,\n  MenuItemLink,\n  toggleSidebar,\n} from \"react-admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  makeStyles,\n  AppBar as MuiAppBar,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Settings from \"@material-ui/icons/Settings\";\nimport Dns from \"@material-ui/icons/Dns\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { useDispatch } from \"react-redux\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport HouseIcon from \"@material-ui/icons/House\";\nimport GroupWorkIcon from \"@material-ui/icons/GroupWork\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Store from \"@material-ui/icons/Store\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Business from \"@material-ui/icons/Business\";\nimport { AccountCircle, LocationCity, Storefront } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(\n  (theme) => ({\n    toolbar: {\n      paddingRight: theme.spacing(3),\n      backgroundColor: theme.palette.primary.main,\n      transition: theme.transitions.create([\"background-color\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    menuButton: {\n      marginLeft: \"0.5em\",\n      marginRight: \"0.5em\",\n    },\n    menuButtonIconClosed: {\n      transition: theme.transitions.create([\"transform\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      transform: \"rotate(0deg)\",\n    },\n    menuButtonIconOpen: {\n      transition: theme.transitions.create([\"transform\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      transform: \"rotate(180deg)\",\n    },\n    title: {\n      flex: 1,\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n    },\n  }),\n  { name: \"RaAppBar\" }\n);\n\nconst xeroStyle = {\n  color: \"white\",\n};\n\nconst MyAppBar = ({\n  children,\n  classes: classesOverride,\n  className,\n  logo,\n  logout,\n  open,\n  title,\n  userMenu,\n  ...rest\n}) => {\n  const translate = useTranslate();\n  const dispatch = useDispatch();\n  const classes = useStyles({ classes: classesOverride });\n  const isXSmall = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\n  const [settingsMenu, setSettingsMenu] = useState(null);\n  const [uMenu, setUserMenu] = useState(null);\n\n  const handleSettingsClick = (event) => {\n    setSettingsMenu(event.currentTarget);\n  };\n  const handleSettingsClose = (event) => {\n    setSettingsMenu(null);\n  };\n  const handleUserClick = (event) => {\n    setUserMenu(event.currentTarget);\n  };\n  const handleUserClose = (event) => {\n    setUserMenu(null);\n  };\n\n  return (\n    <HideOnScroll>\n      <MuiAppBar className={className} color=\"primary\" {...rest}>\n        <Toolbar\n          disableGutters\n          variant={isXSmall ? \"regular\" : \"dense\"}\n          className={classes.toolbar}\n        >\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => dispatch(toggleSidebar())}\n            className={classNames(classes.menuButton)}\n          >\n            <MenuIcon\n              classes={{\n                root: open\n                  ? classes.menuButtonIconOpen\n                  : classes.menuButtonIconClosed,\n              }}\n            />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {translate(\"softwareName\")}\n          </Typography>\n          <Link to=\"/xero\" style={xeroStyle}>\n            <IconButton color=\"inherit\">\n              <Dns />\n            </IconButton>\n          </Link>\n          <IconButton\n            aria-label=\"Settings\"\n            aria-controls=\"long-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={handleSettingsClick}\n          >\n            <Settings />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={settingsMenu}\n            keepMounted\n            open={Boolean(settingsMenu)}\n            onClose={handleSettingsClose}\n          >\n            <MenuItemLink\n              to=\"/Product\"\n              primaryText={translate(\"menu.item.product\")}\n              leftIcon={<AllInboxIcon />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/Supplier\"\n              primaryText={translate(\"menu.item.supplier\")}\n              leftIcon={<LocationCity />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/Customer\"\n              primaryText={translate(\"menu.item.customer\")}\n              leftIcon={<Storefront />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/Warehouse\"\n              primaryText={translate(\"menu.item.warehouse\")}\n              leftIcon={<HouseIcon />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/ProductCategory\"\n              primaryText={translate(\"menu.item.productCategory\")}\n              leftIcon={<GroupWorkIcon />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/CustomerGroup\"\n              primaryText={translate(\"menu.item.customerGroup\")}\n              leftIcon={<GroupIcon />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/CustomerShop\"\n              primaryText={translate(\"menu.item.customerShop\")}\n              leftIcon={<Store />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/User\"\n              primaryText={translate(\"menu.item.user\")}\n              leftIcon={<GroupIcon />}\n              onClick={handleSettingsClose}\n            />\n            <MenuItemLink\n              to=\"/UserGroup\"\n              primaryText={translate(\"menu.item.userGroup\")}\n              leftIcon={<Business />}\n              onClick={handleSettingsClose}\n            />\n          </Menu>\n          <IconButton\n            aria-label=\"Warren Chan\"\n            aria-controls=\"long-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={handleUserClick}\n          >\n            <AccountCircle />\n            &nbsp;\n            <Typography>{localStorage.getItem(\"token\")}</Typography>\n          </IconButton>\n          <Menu\n            id=\"user-menu\"\n            anchorEl={uMenu}\n            keepMounted\n            open={Boolean(uMenu)}\n            onClose={handleUserClose}\n          >\n            {logout}\n          </Menu>\n        </Toolbar>\n      </MuiAppBar>\n    </HideOnScroll>\n  );\n};\n\nexport default MyAppBar;\n","import React from 'react';\nimport { Sidebar as AdminSidebar } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  drawerPaper: {\n    marginTop: 0,\n    transition: theme.transitions.create('height', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  }\n}));\n\nconst Sidebar = props => {\n  const classes = useStyles();\n  return (\n    <AdminSidebar {...props} classes={classes} size={200} />\n  );\n}\n\nexport default Sidebar;\n","// in src/Menu.js\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport pluralize from \"pluralize\";\nimport { withRouter } from \"react-router-dom\";\nimport { Workflow, WorkflowItem } from \"@tsunadon/supplier-ms-react-workflow\";\n\nconst Menu = ({ location, history }) => {\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\n  const paths = location.pathname.split(\"/\");\n  const isActive = (type) =>\n    paths.length > 1 && pluralize.singular(paths[1]) === type;\n  const handleClick = (type) => () => history.push(`/${type}`);\n  if (!open) return null;\n  return (\n    <Workflow open>\n      <WorkflowItem.Supplier\n        onClick={handleClick(\"Supplier\")}\n        active={isActive(\"Supplier\")}\n      />\n      <WorkflowItem.PurchaseOrder\n        onClick={handleClick(\"PurchaseOrder\")}\n        active={isActive(\"PurchaseOrder\")}\n      />\n      <WorkflowItem.Shipping\n        onClick={handleClick(\"Shipping\")}\n        active={isActive(\"Shipping\")}\n      />\n      <WorkflowItem.Inventory\n        onClick={handleClick(\"Inventory\")}\n        active={isActive(\"Inventory\")}\n      />\n      <WorkflowItem.SalesOrder\n        onClick={handleClick(\"SalesOrder\")}\n        active={isActive(\"SalesOrder\")}\n      />\n      <WorkflowItem.Invoice\n        onClick={handleClick(\"Invoice\")}\n        active={isActive(\"Invoice\")}\n      />\n      <WorkflowItem.DeliveryNote\n        onClick={handleClick(\"DeliveryNote\")}\n        active={isActive(\"DeliveryNote\")}\n      />\n      <WorkflowItem.Customer\n        onClick={handleClick(\"Customer\")}\n        active={isActive(\"Customer\")}\n      />\n      <WorkflowItem.ReceivePayment\n        onClick={handleClick(\"ReceivePayment\")}\n        active={isActive(\"ReceivePayment\")}\n      />\n      <WorkflowItem.Report\n        onClick={handleClick(\"Report\")}\n        active={isActive(\"Report\")}\n      />\n    </Workflow>\n  );\n};\n\nexport default withRouter(Menu);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux'\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport { Breadcrumbs as MuiBreadcrumbs } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  breadcrumb: {\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4),\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst Breadcrumb = () => {\n  const breadcrumbs = useSelector(state => state.breadcrumb);\n  const classes = useStyles();\n\n  const links = [...breadcrumbs];\n  let last = links.pop();\n\n  const linkStyle = {\n    textDecoration: 'none',\n    color: '#666',\n    hover: {\n      textDecoration: 'underline',\n    },\n  };\n\n  return (\n    <MuiBreadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumb}>\n      {links.map(bc => (\n        <Link key={`linkTo${bc.url}`} to={bc.url} style={linkStyle}>\n          {bc.label}\n        </Link>\n      ))}\n      {last && (\n        <Typography color=\"textPrimary\">{last.label}</Typography>\n      )}\n    </MuiBreadcrumbs>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { useEffect, useState } from \"react\";\nimport pluralize from \"pluralize\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { WorkflowColors } from \"@tsunadon/supplier-ms-react-workflow\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  ThemeProvider,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { Notification, setSidebarVisibility } from \"react-admin\";\nimport AppBar from \"./AppBar\";\nimport Sidebar from \"./Sidebar\";\nimport Workflow from \"./Workflow\";\nimport Breadcrumb from \"../../components/Breadcrumb\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    zIndex: 1,\n    minHeight: \"100vh\",\n    backgroundColor: theme.palette.background.default,\n    position: \"relative\",\n    minWidth: \"fit-content\",\n    width: \"100%\",\n  },\n  appFrame: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    [theme.breakpoints.up(\"xs\")]: {\n      marginTop: theme.spacing(6),\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: theme.spacing(7),\n    },\n  },\n  contentWithSidebar: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n  },\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    flexBasis: 0,\n    padding: theme.spacing(3),\n    paddingTop: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: 0,\n    },\n  },\n}));\n\nconst Layout = ({ children, dashboard, logout, title, theme }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\n  // const location = useLocation();\n  // const [theme, setTheme] = useState(defaultTheme);\n  // useEffect(() => {\n  //   const paths = location.pathname.split('/');\n  //   const mainColor = (paths.length > 1 && WorkflowColors[pluralize.singular(paths[1])]) || '#f16112';\n  //   const newTheme = createMuiTheme({\n  //     palette: {\n  //       primary: {\n  //         main: mainColor,\n  //       },\n  //     },\n  //     sidebar: {\n  //       width: '100%', // The default value is 240\n  //       closedWidth: '100%', // The default value is 55\n  //     },\n  //   });\n  //\n  //   setTheme(newTheme);\n  // }, [location, setTheme]);\n\n  useEffect(() => {\n    dispatch(setSidebarVisibility(true));\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          <AppBar open={open} logout={logout} />\n          <main className={classes.contentWithSidebar}>\n            <Workflow logout={logout} hasDashboard={!!dashboard} />\n            <Breadcrumb />\n            <div className={classes.content}>{children}</div>\n          </main>\n          <Notification />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  dashboard: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Layout;\n","/**\n *\n * Asynchronously loads the component for MonthlyReportPage\n *\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","/**\n *\n * Asynchronously loads the component for QuarterReportPage\n *\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","/**\n *\n * Asynchronously loads the component for AnnualReportPage\n *\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","import React from 'react';\nimport { useTranslate, Loading } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\n\nconst GET_ITEM_LIST = gql`\n  query inventoryItems($where: InventoryItemWhereInput!) {\n    inventoryItems(where: $where) {\n      id\n      warehouse {\n        id\n        code\n      }\n      label\n      expiryDay\n      name\n      brand\n      sku\n      image\n      price\n      unit\n    }\n  }\n`;\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function ItemListForm({ id, labelFrom, onChange }) {\n  const classes = useStyles();\n  const translate = useTranslate();\n  const { loading, data } = useQuery(GET_ITEM_LIST, { variables: { where: { warehouse: { id }, label_contains: '' } } });\n\n  if (loading) return <Loading loadingPrimary=\"menu.item.product\" />;\n\n  const { inventoryItems } = data;\n\n  return (\n    <Box component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>{translate('product.label')}</TableCell>\n            <TableCell align=\"right\">{translate('purchaseOrder.productCode')}</TableCell>\n            <TableCell align=\"right\">{translate('purchaseOrder.productName')}</TableCell>\n            <TableCell align=\"right\">{translate('product.expiryDate')}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {inventoryItems.map(row => (\n            <TableRow key={row.code}>\n              <TableCell align=\"right\">{row.label}</TableCell>\n              <TableCell align=\"right\">{row.code}</TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.expiryDate}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n}","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_WAREHOUSES = gql`\n  query warehouses($where: WarehouseWhereInput!) {\n    warehouses(where: $where) {\n      id\n      name\n      type\n    }\n  }\n`;\n\nexport default function WarehouseAutocomplete({ onChange, defaultValue, className, where = { where: { type: \"NORMAL\" } } }) {\n  const translate = useTranslate();\n  const { loading: fetching, data } = useQuery(GET_WAREHOUSES, {\n    variables: where,\n  });\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = fetching || (open && options.length === 0);\n\n  React.useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      const { warehouses } = data;\n      setOptions(warehouses.map((obj) => ({ id: obj.id, name: obj.name })));\n    }\n  }, [loading, data]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = (evt, value) => {\n    const { warehouses } = data;\n    onChange(warehouses.find((warehouse) => warehouse.id === value.id));\n  };\n\n  return (\n    <Autocomplete\n      className={className}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionLabel={(option) => option.name}\n      options={options}\n      loading={loading}\n      value={defaultValue && { id: defaultValue.id, name: defaultValue.name }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={translate(\"product.warehouse\")}\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport { useTranslate } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport ItemListForm from './ItemListForm';\nimport Card from '@material-ui/core/Card';\nimport { Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport House from '@material-ui/icons/House';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport WarehouseAutocomplete from '../../components/Inputs/WarehouseAutocomplete';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n}));\n\nconst StepperConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nexport default function StockTransfer() {\n  const translate = useTranslate();\n  const classes = useStyles();\n  const [warehouseId, setWarehouseId] = useState();\n\n  const handleSave = () => console.log;\n  return (\n    <React.Fragment>\n      <Box display=\"flex\">\n        <Box flex={1} mr=\"0.5em\">\n          <Typography variant=\"h5\">{translate('inventory.stockTransfer')}</Typography>\n          <Card className={classes.card}>\n            <Stepper alternativeLabel connector={<StepperConnector />}>\n              <Step key={translate('inventory.warehouse')}>\n                <StepLabel StepIconComponent={House}>{translate('inventory.warehouse')} {translate('common.to')}</StepLabel>\n              </Step>\n            </Stepper>\n          </Card>\n        </Box>\n      </Box>\n      <Card className={classes.card}>\n        <Box display=\"flex\">\n          <Box flex={1} mr=\"0.5em\">\n            <WarehouseAutocomplete onChange={setWarehouseId} label={translate('inventory.warehouse') + ' ' + translate('common.from')} />\n          </Box>\n          <Box flex={1} mr=\"0.5em\">\n            <WarehouseAutocomplete onChange={setWarehouseId} label={translate('inventory.warehouse') + ' ' + translate('common.to')} />\n          </Box>\n        </Box>\n      </Card>\n      {warehouseId && (\n        <React.Fragment>\n          <Box display=\"flex\">\n            <Box flex={1} mr=\"0.5em\">\n              <Card className={classes.card}>\n                <Typography variant=\"h6\">{translate('inventory.productItem')}</Typography>\n                <ItemListForm id={warehouseId} />\n              </Card>\n            </Box>\n          </Box>\n          <Card className={classes.card}>\n            <Box display=\"flex\">\n              <Box flex={1} mr=\"0.5em\" style={{ textAlign: 'right' }}>\n                <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>{translate('common.transfer')}</Button>\n              </Box>\n            </Box>\n          </Card>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { useTranslate, Loading } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\nconst GET_ITEM_LIST = gql`\n  query inventoryItems($where: InventoryItemWhereInput!) {\n    inventoryItems(where: $where) {\n      id\n      warehouse {\n        id\n        code\n      }\n      label\n      expiryDay\n      name\n      brand\n      sku\n      image\n      price\n      unit\n    }\n  }\n`;\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function ItemListForm({ id, labelFrom, onChange }) {\n  const classes = useStyles();\n  const translate = useTranslate();\n  const { loading, data } = useQuery(GET_ITEM_LIST, { variables: { where: { warehouse: { id }, label_contains: '' } } });\n\n  if (loading) return <Loading loadingPrimary=\"menu.item.product\" />;\n\n  const { inventoryItems } = data;\n  const itemGroups = Object.values(inventoryItems.reduce((results, item) => {\n    const { name, brand, sku, expiryDay, price, unit } = item;\n    if (!results[sku]) results[sku] = { name, brand, sku, expiryDay, price, unit, quantity: 0 };\n    results[sku].quantity++;\n    return results;\n  }, {}));\n\n  let cur = parseInt(labelFrom, 10);\n  itemGroups.forEach(itemGroup => {\n    itemGroup.labelFrom = cur;\n    itemGroup.labelTo = cur + itemGroup.quantity;\n    cur = cur + itemGroup.quantity + 1;\n  });\n\n  // const handleChange = () => {\n  //   onChange();\n  // };\n\n  return (\n    <Box component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>{translate('purchaseOrder.productCode')}</TableCell>\n            <TableCell align=\"right\">{translate('purchaseOrder.productName')}</TableCell>\n            <TableCell align=\"right\">{translate('product.expiryDate')}</TableCell>\n            <TableCell align=\"right\">{translate('product.quantity')}</TableCell>\n            <TableCell align=\"right\">{translate('shipping.labelFrom')}</TableCell>\n            <TableCell align=\"right\">{translate('shipping.labelTo')}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {itemGroups.map(row => (\n            <TableRow key={row.code}>\n              <TableCell align=\"right\">{row.code}</TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.expiryDate}</TableCell>\n              <TableCell align=\"right\">{row.quantity}</TableCell>\n              <TableCell align=\"right\"><TextField label=\"Filled\" variant=\"filled\" defaultValue={row.labelFrom} /></TableCell>\n              <TableCell align=\"right\"><TextField label=\"Filled\" variant=\"filled\" defaultValue={row.labelTo} /></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n}","import React, { useState } from 'react';\nimport { useTranslate } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport ItemListForm from './ItemListForm';\nimport Card from '@material-ui/core/Card';\nimport { Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport House from '@material-ui/icons/House';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport WarehouseAutocomplete from '../../components/Inputs/WarehouseAutocomplete';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n}));\n\nconst StepperConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nexport default function StockDispose() {\n  const translate = useTranslate();\n  const classes = useStyles();\n  const [warehouseId, setWarehouseId] = useState();\n\n  const handleSave = () => console.log;\n  return (\n    <React.Fragment>\n      <Box display=\"flex\">\n        <Box flex={1} mr=\"0.5em\">\n          <Typography variant=\"h5\">{translate('inventory.stockDispose')}</Typography>\n          <Card className={classes.card}>\n            <Stepper alternativeLabel connector={<StepperConnector />}>\n              <Step key={translate('inventory.warehouse')}>\n                <StepLabel StepIconComponent={House}>{translate('inventory.warehouse')} {translate('common.from')}</StepLabel>\n              </Step>\n              <Step key={translate('inventory.trash')}>\n                <StepLabel StepIconComponent={DeleteForever}>{translate('inventory.trash')}</StepLabel>\n              </Step>\n            </Stepper>\n          </Card>\n        </Box>\n      </Box>\n      <Card className={classes.card}>\n        <Box display=\"flex\">\n          <Box flex={1} mr=\"0.5em\">\n            <WarehouseAutocomplete onChange={setWarehouseId} label={translate('inventory.warehouse') + ' ' + translate('common.from')} />\n          </Box>\n        </Box>\n      </Card>\n      {warehouseId && (\n        <React.Fragment>\n          <Box display=\"flex\">\n            <Box flex={1} mr=\"0.5em\">\n              <Card className={classes.card}>\n                <Typography variant=\"h6\">{translate('inventory.productItem')}</Typography>\n                <ItemListForm id={warehouseId} />\n              </Card>\n            </Box>\n          </Box>\n          <Card className={classes.card}>\n            <Box display=\"flex\">\n              <Box flex={1} mr=\"0.5em\" style={{ textAlign: 'right' }}>\n                <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>{translate('common.transfer')}</Button>\n              </Box>\n            </Box>\n          </Card>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { useTranslate, Loading } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\nconst GET_ITEM_LIST = gql`\n  query inventoryItems($where: InventoryItemWhereInput!) {\n    inventoryItems(where: $where) {\n      id\n      warehouse {\n        id\n        code\n      }\n      label\n      expiryDay\n      name\n      brand\n      sku\n      image\n      price\n      unit\n    }\n  }\n`;\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function ItemListForm({ id, labelFrom, onChange }) {\n  const classes = useStyles();\n  const translate = useTranslate();\n  const { loading, data } = useQuery(GET_ITEM_LIST, { variables: { where: { warehouse: { id }, label_contains: '' } } });\n\n  if (loading) return <Loading loadingPrimary=\"menu.item.product\" />;\n\n  const { inventoryItems } = data;\n  const itemGroups = Object.values(inventoryItems.reduce((results, item) => {\n    const { name, brand, sku, expiryDay, price, unit } = item;\n    if (!results[sku]) results[sku] = { name, brand, sku, expiryDay, price, unit, quantity: 0 };\n    results[sku].quantity++;\n    return results;\n  }, {}));\n\n  let cur = parseInt(labelFrom, 10);\n  itemGroups.forEach(itemGroup => {\n    itemGroup.labelFrom = cur;\n    itemGroup.labelTo = cur + itemGroup.quantity;\n    cur = cur + itemGroup.quantity + 1;\n  });\n\n  return (\n    <Box component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>{translate('purchaseOrder.productCode')}</TableCell>\n            <TableCell align=\"right\">{translate('purchaseOrder.productName')}</TableCell>\n            <TableCell align=\"right\">{translate('product.expiryDate')}</TableCell>\n            <TableCell align=\"right\">{translate('product.quantity')}</TableCell>\n            <TableCell align=\"right\">{translate('shipping.labelFrom')}</TableCell>\n            <TableCell align=\"right\">{translate('shipping.labelTo')}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {itemGroups.map(row => (\n            <TableRow key={row.code}>\n              <TableCell align=\"right\">{row.code}</TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.expiryDate}</TableCell>\n              <TableCell align=\"right\">{row.quantity}</TableCell>\n              <TableCell align=\"right\"><TextField label=\"Filled\" variant=\"filled\" defaultValue={row.labelFrom} /></TableCell>\n              <TableCell align=\"right\"><TextField label=\"Filled\" variant=\"filled\" defaultValue={row.labelTo} /></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n}","import React, { useState } from 'react';\nimport { useTranslate } from 'react-admin';\nimport Box from '@material-ui/core/Box';\nimport ItemListForm from './ItemListForm';\nimport Card from '@material-ui/core/Card';\nimport { Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport House from '@material-ui/icons/House';\nimport Label from '@material-ui/icons/Label';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport WarehouseAutocomplete from '../../components/Inputs/WarehouseAutocomplete';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n}));\n\nconst StepperConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nexport default function Labelling() {\n  const translate = useTranslate();\n  const classes = useStyles();\n  const [warehouseId, setWarehouseId] = useState();\n  const [labelFrom, setLabelFrom] = useState();\n\n  const handleSave = () => console.log;\n  return (\n    <React.Fragment>\n      <Box display=\"flex\">\n        <Box flex={1} mr=\"0.5em\">\n          <Typography variant=\"h5\">{translate('shipping.labelling')}</Typography>\n          <Card className={classes.card}>\n            <Stepper alternativeLabel connector={<StepperConnector />}>\n              <Step key={translate('shipping.shipment')}>\n                <StepLabel StepIconComponent={Label}>{translate('shipping.label')}</StepLabel>\n              </Step>\n              <Step key={translate('shipping.warehouse')}>\n                <StepLabel StepIconComponent={House}>{translate('shipping.warehouse')}</StepLabel>\n              </Step>\n            </Stepper>\n          </Card>\n        </Box>\n      </Box>\n      <Card className={classes.card}>\n        <Box display=\"flex\">\n          <Box flex={1} mr=\"0.5em\">\n            <WarehouseAutocomplete onChange={setWarehouseId} />\n          </Box>\n          <Box flex={1} mr=\"0.5em\">\n            <TextField label={translate('shipping.labelFrom')} variant=\"filled\" onChange={setLabelFrom} fullWidth />\n          </Box>\n        </Box>\n      </Card>\n      {warehouseId && (\n        <React.Fragment>\n          <Box display=\"flex\">\n            <Box flex={1} mr=\"0.5em\">\n              <Card className={classes.card}>\n                <Typography variant=\"h6\">{translate('shipping.unlabelledItem')}</Typography>\n                <ItemListForm id={warehouseId} labelFrom={labelFrom} />\n              </Card>\n            </Box>\n          </Box>\n          <Card className={classes.card}>\n            <Box display=\"flex\">\n              <Box flex={1} mr=\"0.5em\" style={{ textAlign: 'right' }}>\n                <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>{translate('common.assign')} {translate('shipping.label')}</Button>\n              </Box>\n            </Box>\n          </Card>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nconst BilingualField = ({ source, record = {}, label }) => {\n  return (\n    <Typography variant=\"body1\">\n      {record[`${source}Chi`]}<br/>\n      {record[`${source}En`]}\n    </Typography>\n  );\n}\n\nBilingualField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nexport default BilingualField;","import React from 'react';\nimport { NumberField } from 'react-admin';\nimport dayjs from 'dayjs';\n\nexport function handleExpectedSales({ monthlySalesOnAverage }, expectedSalesDate) {\n  const monthDiff = dayjs(expectedSalesDate).diff(dayjs(), 'month');\n  const expectedSales = monthlySalesOnAverage * (monthDiff) * 1.05\n  if (Math.floor(expectedSales) < 0) {\n    return 0\n  } else {\n    return Math.floor(expectedSales).toFixed(1);\n  }\n}\n\nexport default ({ label, record, options }) => {\n  const value = handleExpectedSales(record, options.expectedSalesDate);\n\n  return (\n    <NumberField label={label} record={{ value }} source=\"value\" />\n  )\n}\n","import React from 'react';\nimport { NumberField } from 'react-admin';\nimport dayjs from 'dayjs';\n\nexport default ({ label, options }) => {\n  const value = dayjs(options.expectedSalesDate).diff(dayjs(), 'month');\n\n  return (\n    <NumberField label={label} record={{ value }} source=\"value\" />\n  )\n}\n","import isArray from 'lodash/isArray';\n\n/**\n * constants\n */\n\nexport const SET_BREADCRUMBS = 'SET_BREADCRUMBS';\nexport const ADD_BREADCRUMBS = 'ADD_BREADCRUMBS';\n\n/**\n * action creators\n */\n\nexport function setBreadcrumbs(breadcrumbs) {\n  return {\n    type: SET_BREADCRUMBS,\n    payload: breadcrumbs,\n  }\n}\n\nexport function addBreadcrumbs(breadcrumbs) {\n  return {\n    type: ADD_BREADCRUMBS,\n    payload: breadcrumbs,\n  }\n}\n\n/**\n * initialState\n */\n\nexport const initialState = [\n  { url: '/', label: 'Dashboard' },\n];\n\n/**\n * reducer\n */\n\nexport default (previousState = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_BREADCRUMBS:\n      return [...initialState, ...payload];\n    case ADD_BREADCRUMBS:\n      if (previousState[previousState.length - 1].url === payload.url) {\n        return previousState;\n      }\n      return isArray(payload) ? [...previousState, ...payload] : [...previousState, payload];\n    default:\n      return previousState;\n  }\n}","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { Search } from \"@material-ui/icons\";\nimport jsonExport from \"jsonexport/dist\";\nimport { Edit } from \"@material-ui/icons\";\nimport Button from \"@material-ui/core/Button\";\nimport dayjs from \"dayjs\";\nimport {\n  NumberField,\n  Datagrid,\n  EditButton,\n  FunctionField,\n  List,\n  TextField,\n  downloadCSV,\n  ReferenceField,\n  Filter,\n  TextInput,\n  usePermissions,\n} from \"react-admin\";\nimport BilingualField from \"../../components/BilingualField\";\nimport ExpectedQuantityField, {\n  handleExpectedSales,\n} from \"./ExpectedQuantityField\";\nimport MonthDiffField from \"./MonthDiffField\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst breadcrumbBase = { url: \"/Inventory\", label: \"Inventory\" };\nfunction Inventory({ staticContext, ...props }) {\n  const { permissions } = usePermissions();\n  const [expectedSalesDate, setExpectedSalesDate] = useState(\n    dayjs().add(4, \"month\")\n  );\n  const history = useHistory();\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  const exporter = (products) => {\n    const postsForExport = products.map((product) => {\n      const {\n        code,\n        nameChi,\n        quantity,\n        monthlySalesOnAverage,\n        incomingQuantity,\n      } = product; // omit backlinks and author\n      return {\n        code,\n        name: nameChi,\n        stock: quantity,\n        avg: monthlySalesOnAverage,\n        incoming: incomingQuantity,\n        nextShipment: dayjs(expectedSalesDate).diff(dayjs(), \"month\"),\n        expectedSales: handleExpectedSales(product, expectedSalesDate),\n      };\n    });\n    jsonExport(\n      postsForExport,\n      {\n        headers: [\n          \"code\",\n          \"name\",\n          \"stock\",\n          \"avg\",\n          \"incoming\",\n          \"nextShipment\",\n          \"expectedSales\",\n        ], // order fields in the export\n      },\n      (err, csv) => {\n        downloadCSV(csv, \"posts\"); // download as 'posts.csv` file\n      }\n    );\n  };\n\n  const toEdit = () => (id) => {\n    history.push(`/Inventory/${id}/editStock`);\n  };\n\n  const SearchFilter = (props) => (\n    <Filter {...props}>\n      <TextInput\n        label=\"Search Product no.\"\n        source=\"code_starts_with\"\n        alwaysOn\n      ></TextInput>\n    </Filter>\n  );\n  const StatusEditButton = ({ record, props, permissions }) =>\n    permissions === \"admin\" ? (\n      <EditButton basePath={`/Inventory/editStock`} record={record} />\n    ) : null;\n\n  return (\n    <React.Fragment>\n      <List\n        resource=\"Product\"\n        hasCreate={false}\n        hasEdit={false}\n        hasShow={false}\n        hasList={true}\n        basePath=\"/Inventory\"\n        exporter={exporter}\n        {...props}\n        filters={<SearchFilter />}\n      >\n        <Datagrid>\n          <ReferenceField\n            label=\"Product No.\"\n            source=\"id\"\n            reference=\"Product\"\n            link={(product, reference) => `/${reference}/${product.id}/show`}\n          >\n            <TextField source=\"code\" />\n          </ReferenceField>\n          <ReferenceField\n            label=\"name\"\n            source=\"id\"\n            reference=\"Product\"\n            link={(product, reference) => `/${reference}/${product.id}/show`}\n          >\n            <BilingualField source=\"name\" />\n          </ReferenceField>\n          <NumberField label=\"Stock\" source=\"quantity\" sortable={false} />\n          <FunctionField\n            render={(record) => (\n              <StatusEditButton\n                record={record}\n                props={props}\n                permissions={permissions}\n              />\n            )}\n            sortable={false}\n          />\n          <NumberField source=\"monthlySalesOnAverage\" sortable={false} />\n          <NumberField source=\"outgoingQuantity\" sortable={false} />\n          <NumberField source=\"incomingQuantity\" sortable={false} />\n          <MonthDiffField\n            label=\"Months till Next shipment\"\n            options={{ expectedSalesDate }}\n            sortable={false}\n          />\n          <ExpectedQuantityField\n            label=\"Expected Sales till next shipment\"\n            options={{ expectedSalesDate }}\n            sortable={false}\n          />\n        </Datagrid>\n      </List>\n      <Grid container justify=\"flex-end\" alignItems=\"center\">\n        <Typography variant=\"button\">\n          Expected next shipment month and default after 4 month :{\" \"}\n        </Typography>\n        <DatePicker\n          style={{ width: 200, margin: 10 }}\n          inputVariant=\"filled\"\n          value={expectedSalesDate}\n          openTo=\"year\"\n          views={[\"year\", \"month\"]}\n          onChange={setExpectedSalesDate}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Inventory;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_PURCHASE_ORDER = gql`\n  query purchaseOrders(\n    $where: PurchaseOrderWhereInput\n    $orderBy: PurchaseOrderOrderByInput!\n  ) {\n    purchaseOrders(where: $where, orderBy: $orderBy) {\n      id\n      code\n      supplier {\n        id\n        name\n      }\n      products {\n        id\n        quantity\n        price\n        totalPrice\n        product {\n          id\n          code\n          nameEn\n          nameChi\n        }\n      }\n      expectedDeliveryAt\n      totalPrice\n      state\n    }\n  }\n`;\n\nexport default function PurchaseOrderAutocomplete({\n  onChange,\n  defaultValue,\n  className,\n}) {\n  const translate = useTranslate();\n  const { loading: fetching, data } = useQuery(GET_PURCHASE_ORDER, {\n    variables: {\n      where: { state_in: [\"CONFIRMED\", \"APPROVED\"] },\n      orderBy: \"updatedAt_DESC\",\n    },\n  });\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = fetching || (open && options.length === 0);\n\n  React.useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      const { purchaseOrders } = data;\n      setOptions(purchaseOrders.map((obj) => ({ id: obj.id, name: obj.code })));\n    }\n  }, [loading, data]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = (evt, value) => {\n    const { purchaseOrders } = data;\n    onChange(purchaseOrders.find((po) => po.id === value.id));\n  };\n\n  return (\n    <Autocomplete\n      className={className}\n      id=\"purchase-order-autocomplete\"\n      style={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionLabel={(option) => option.name}\n      options={options}\n      loading={loading}\n      value={defaultValue && { id: defaultValue.id, name: defaultValue.code }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={translate(\"purchaseOrder.purchaseOrder\")}\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","const numberAfter = (invoiceNumber, increment = 1) => {\n  if (!invoiceNumber) throw new Error('invoiceNumber cannot be empty');\n  const array = invoiceNumber.split(/[_/:\\-;\\\\]+/);\n  const lastSegment = array.pop();\n  const priorSegment = invoiceNumber.substr(0, invoiceNumber.indexOf(lastSegment));\n  const nextNumber = [...Array(increment)].reduce((result) => alphaNumericIncrementer(result), lastSegment);\n  return priorSegment + nextNumber;\n}\n\nconst alphaNumericIncrementer = (str) => {\n  if (!str || str.length === 0) {\n    return '';\n  }\n\n\n  let invNum = str.replace(/([^a-z0-9]+)/gi, '');\n  invNum = invNum.toUpperCase();\n  let index = invNum.length - 1;\n\n  while (index >= 0) {\n    if (invNum.substr(index, 1) === '9') {\n      invNum = invNum.substr(0, index) + '0' + invNum.substr(index + 1);\n    } else if (invNum.substr(index, 1) === 'Z') {\n      invNum = invNum.substr(0, index) + 'A' + invNum.substr(index + 1);\n    } else {\n      const char = String.fromCharCode(invNum.charCodeAt(index) + 1);\n      invNum = invNum.substr(0, index) + char + invNum.substr(index + 1);\n      index = 0;\n    }\n    index--;\n  }\n  return invNum;\n}\n\nexport default {\n  numberAfter\n};","import React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { SimpleForm, useTranslate, FormDataConsumer, useNotify, useGetOne, Loading } from \"react-admin\";\nimport { TextField, Grid, Button, makeStyles } from \"@material-ui/core\";\nimport { Save } from \"@material-ui/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport WarehouseAutocomplete from \"../../components/Inputs/WarehouseAutocomplete\";\nimport PurchaseOrderAutocomplete from \"../../components/Inputs/PurchaseOrderAutocomplete\";\nimport sequentialNumber from \"../../utils/sequentialNumber\";\nimport gql from \"graphql-tag\";\n\nconst useStyle = makeStyles((theme) => ({\n  autocomplete: {\n    width: 500,\n  },\n  poAutocomplete: {\n    width: 700,\n  },\n}));\n\nexport default function AddStock({ staticContext, ...props }) {\n  const productId = props.match.params.productId;\n  const initialValues = {\n    stock: 0,\n    purchaseOrder: null,\n    warehouse: null,\n    productId: productId,\n    labelFrom: null,\n    labelTo: null,\n    expiryDate: \"-\",\n    cost: 0,\n  };\n  const [formData, setFormData] = useState(initialValues);\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const notify = useNotify();\n  const redirect = () => \"/Inventory\";\n  const INWAREHOUSE = gql`\n    mutation inWarehouse($data: [InventoryItemCreateInput!]!) {\n      inWarehouse(data: $data) {\n        id\n      }\n    }\n  `;\n  const [inWarehouse] = useMutation(INWAREHOUSE);\n  const Product = () => {\n    const { data, loading, error } = useGetOne(\"Product\", productId);\n    if (loading) {\n      return <Loading />;\n    }\n    if (error) {\n      return <p>ERROR</p>;\n    }\n    return (\n      <div>\n        Product :<div>{data.nameChi}</div>\n      </div>\n    );\n  };\n  const handleOnPurchaseOrderChange = (purchaseOrder) => {\n    setFormData({\n      ...formData,\n      purchaseOrder,\n    });\n  };\n  const handleOnWarehouseChange = (warehouse) => {\n    setFormData({\n      ...formData,\n      warehouse,\n    });\n  };\n  const handleOnExpiryDateChange = (e) => {\n    const expiryDate = e.target.value;\n    setFormData({\n      ...formData,\n      expiryDate,\n    });\n  };\n  const handleOnLabelFromChange = (e) => {\n    const labelFrom = e.target.value.toUpperCase();\n    var labelTo = null;\n    if (labelFrom && labelFrom.length > 0) {\n      labelTo = sequentialNumber.numberAfter(labelFrom, formData.stock);\n    }\n    setFormData({\n      ...formData,\n      labelFrom,\n      labelTo,\n    });\n  };\n  const handleOnLabelToChange = (e) => {\n    const labelTo = e.target.value.toUpperCase();\n    setFormData({\n      ...formData,\n      labelTo,\n    });\n  };\n\n  const handleOnStockChange = (e) => {\n    const stock = e.target.value;\n    setFormData({\n      ...formData,\n      stock,\n    });\n  };\n  const handleOnCostChange = (e) => {\n    const cost = e.target.value;\n    setFormData({\n      ...formData,\n      cost,\n    });\n  };\n  const handleSave = () => {\n    console.log(formData);\n    const inventoryItemlist = [];\n    var currentLabel = formData.labelFrom;\n    for (let index = 0; index < formData.stock; index++) {\n      const item = {\n        productId: formData.productId,\n        warehouse: { connect: { id: formData.warehouse.id } },\n        purchaseOrderId: formData.purchaseOrder.id,\n        expiryDate: formData.expiryDate,\n        label: currentLabel,\n      };\n      currentLabel = sequentialNumber.numberAfter(currentLabel);\n      inventoryItemlist.push(item);\n    }\n    inventoryItemlist.map((x) => console.log(x));\n    inWarehouse({\n      variables: {\n        data: [...inventoryItemlist],\n      },\n    })\n      .then((value) => {\n        console.log(\"res\", value);\n        notify(`Save Success.`);\n      })\n      .catch((error) => {\n        notify(`Error: ${error.message}`, \"warning\");\n      });\n  };\n  const classes = useStyle();\n  return (\n    <React.Fragment>\n      <SimpleForm\n        toolbar={\n          <Button color=\"primary\" size=\"small\" onClick={handleSave} style={{ marginTop: 20 }}>\n            <Save />\n            &nbsp;Save\n          </Button>\n        }\n        redirect={redirect}\n      >\n        <Grid container style={{ height: 500 }} alignContent=\"space-around\" alignItems=\"flex-start\">\n          <Product />\n          <PurchaseOrderAutocomplete onChange={handleOnPurchaseOrderChange} defaultValue={formData.purchaseOrder} className={classes.poAutocomplete} />\n          <WarehouseAutocomplete defaultValue={formData.warehouse} onChange={handleOnWarehouseChange} className={classes.autocomplete} />\n          <TextField\n            label={`ExpiryDate`}\n            type=\"date\"\n            value={formData.expiryDate}\n            variant=\"filled\"\n            onChange={handleOnExpiryDateChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            label={`Stock`}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={formData.stock}\n            onChange={handleOnStockChange}\n          />\n          <TextField\n            label={`${translate(\"product.label\")} ${translate(\"common.from\")}`}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={formData.labelFrom}\n            onChange={handleOnLabelFromChange}\n          />\n          <TextField\n            label={`${translate(\"product.label\")} ${translate(\"common.to\")}`}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={formData.labelTo}\n            onChange={handleOnLabelToChange}\n          />\n          <TextField\n            label={`Cost`}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={formData.cost}\n            onChange={handleOnCostChange}\n          />\n        </Grid>\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/Inventory\", label: \"Inventory\" },\n                { url: `/Inventory/editStock/${productId}`, label: `Edit Stock` },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Dns from \"@material-ui/icons/Dns\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst CREATE_REDIRECT = gql`\n  mutation CreateRedirect {\n    createRedirect(data: {}) {\n      id\n      redirectUrl\n    }\n  }\n`;\n\nconst CHECKING = gql`\n  query Check {\n    checking\n  }\n`;\n\nconst DISCONNECT = gql`\n  mutation Disconnect {\n    disconnect\n  }\n`;\nfunction Xero() {\n  return (\n    <div>\n      <h1>ERP-system</h1>\n    </div>\n  );\n}\n\nexport default Xero;\n","import React, { useState, useEffect } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Dns from \"@material-ui/icons/Dns\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst CREATE_AUTH = gql`\n  mutation CreateAuth($data: AuthCreateInput!) {\n    createAuth(data: $data) {\n      id\n    }\n  }\n`;\n\nfunction XeroCallback({ match, location }) {\n  return <div>Loading...</div>;\n}\n\nexport default XeroCallback;\n","import React, { useState } from \"react\";\nimport { useTranslate, useNotify } from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport WarehouseAutocomplete from \"../../components/Inputs/WarehouseAutocomplete\";\nimport { Paper, Grid, TextField } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { useHistory } from \"react-router-dom\";\n\nconst QUERY_ITEM = gql`\n  query getItem($where: InventoryItemWhereUniqueInput!) {\n    inventoryItem(where: $where) {\n      label\n      id\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nconst DELETE_DELIVERY_ITEM = gql`\n  mutation deleteItem($where: DeliveryItemWhereUniqueInput!) {\n    deleteDeliveryItem(where: $where) {\n      id\n    }\n  }\n`;\n\nconst TRANSFER = gql`\n  mutation transfer($data: TransferWarehouse!) {\n    transferWarehouse(data: $data) {\n      id\n    }\n  }\n`;\n\nexport default function DeliveryItemDelete(props) {\n  const translate = useTranslate();\n  // const classes = useStyles();\n  const notify = useNotify();\n  const [warehouseId, setWarehouseId] = useState();\n  const [deleteDeliveryItem] = useMutation(DELETE_DELIVERY_ITEM);\n  const [transfer] = useMutation(TRANSFER);\n  const { record } = props.location.state;\n  const { loading, data } = useQuery(QUERY_ITEM, {\n    variables: { where: { id: record.item.id } },\n  });\n  const history = useHistory();\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n  const itemData = data && data.inventoryItem;\n  console.log(record);\n  console.log(itemData);\n\n  if (loading) {\n    return <h1>Loading...</h1>;\n  }\n\n  const handleSave = async () => {\n    try {\n      await deleteDeliveryItem({\n        variables: {\n          where: { id: record.id },\n        },\n      });\n\n      await transfer({\n        variables: {\n          data: {\n            toWarehouseId: warehouseId.id,\n            inventoryItemIds: [itemData.id],\n            fromWarehouseIds: [itemData.warehouse.id],\n          },\n        },\n      }).then((value) => {\n        console.log(\"res\", value);\n        notify(`Save Success.`);\n        redirect();\n      });\n    } catch (error) {\n      notify(`Error: ${error.message}`, \"warning\");\n    }\n  };\n\n  return (\n    <Paper>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        style={{ height: 300, padding: 10 }}\n      >\n        <h1>Delete Deliery Item</h1>\n        <Grid item>\n          <TextField\n            id=\"id\"\n            label=\"Delivery Item\"\n            variant=\"filled\"\n            defaultValue={itemData.label}\n            disabled={true}\n          />\n        </Grid>\n        <Grid xs={4} item>\n          <WarehouseAutocomplete\n            onChange={setWarehouseId}\n            label={\n              translate(\"inventory.warehouse\") + \" \" + translate(\"common.from\")\n            }\n            where={{ where: { name_not_in: \" \" } }}\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","// in src/customRoutes.js\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport MonthlyReportPage from \"./containers/MonthlyReportPage/Loadable\";\nimport QuarterReportPage from \"./containers/QuarterReportPage/Loadable\";\nimport AnnualReportPage from \"./containers/AnnualReportPage/Loadable\";\nimport StockTransfer from \"./containers/StockTransfer\";\nimport StockDispose from \"./containers/StockDispose\";\nimport Labelling from \"./containers/Labelling\";\nimport Inventory from \"./containers/Inventory\";\nimport AddStock from \"./containers/Inventory/AddStock\";\nimport Xero from \"./containers/Xero\";\nimport XeroCallback from \"./containers/Xero/callback\";\nimport DeliveryItemDelete from \"./containers/DeliveryItem\";\n\nexport default [\n  <Route exact path=\"/Report\" component={MonthlyReportPage} />,\n  <Route exact path=\"/Report/quarter\" component={QuarterReportPage} />,\n  <Route exact path=\"/Report/annual\" component={AnnualReportPage} />,\n  <Route exact path=\"/Inventory\" component={Inventory} />,\n  <Route exact path=\"/Inventory/:productId\" component={StockTransfer} />,\n  <Route exact path=\"/Inventory/editStock/:productId/\" component={AddStock} />,\n  <Route exact path=\"/Inventory/Item/:itemId\" component={StockTransfer} />,\n  <Route exact path=\"/Inventory/Labelling\" component={Labelling} />,\n  <Route exact path=\"/Inventory/StockDispose\" component={StockDispose} />,\n  <Route exact path=\"/Xero\" component={Xero} />,\n  <Route exact path=\"/Callback\" component={XeroCallback} />,\n  <Route exact path=\"/DeliveryItem/:deliveryNoteId/delete\" component={DeliveryItemDelete} />,\n];\n","import { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\n\nimport buildGraphQLProvider from \"@tsunadon/ra-data-prisma\";\n\n/**\n * Convert a `File` object returned by the upload input into a base 64 string.\n * That's not the most optimized way to store images in production, but it's\n * enough to illustrate the idea of data provider decoration.\n */\nconst convertFileToBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file.rawFile);\n\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n  });\n\nconst defaultOptions = {\n  watchQuery: {\n    fetchPolicy: \"no-cache\",\n    errorPolicy: \"ignore\",\n  },\n  query: {\n    fetchPolicy: \"no-cache\",\n    errorPolicy: \"all\",\n  },\n};\nconst link = new HttpLink({\n  // uri: \"http://localhost:4000/\",\n  uri: \"http://35.232.67.13:4000/\",\n});\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  defaultOptions,\n});\n\nexport const apolloClient = new ApolloClient(client);\n\nexport const getDataProvider = async () => {\n  try {\n    const provider = await buildGraphQLProvider({ client: apolloClient });\n    return (fetchType, resource, params) => {\n      if (\n        resource !== \"Product\" ||\n        !params.data ||\n        !params.data.images ||\n        params.data.images.length === 0\n      ) {\n        return provider(fetchType, resource, params);\n      }\n\n      if (fetchType === \"UPDATE\") {\n        delete params.data.imagesIds;\n        /**\n         * For posts update only, convert uploaded image in base 64 and attach it to\n         * the `picture` sent property, with `src` and `title` attributes.\n         */\n        // Freshly dropped pictures are File objects and must be converted to base64 strings\n        const newPictures = params.data.images.filter(\n          (p) => p.rawFile instanceof File\n        );\n        const formerPictures = params.data.images.filter(\n          (p) => !(p.rawFile instanceof File)\n        );\n\n        return Promise.all(newPictures.map(convertFileToBase64))\n          .then((base64Pictures) =>\n            base64Pictures.map((picture64) => ({\n              src: picture64,\n              title: `${params.data.name} (${params.data.code})`,\n            }))\n          )\n          .then((transformedNewPictures) =>\n            provider(\"UPDATE\", resource, {\n              ...params,\n              data: {\n                ...params.data,\n                images: [...formerPictures, ...transformedNewPictures],\n              },\n            })\n          );\n      } else if (fetchType === \"CREATE\") {\n        // Freshly dropped pictures are File objects and must be converted to base64 strings\n        const newPictures = params.data.images.filter(\n          (p) => p.rawFile instanceof File\n        );\n\n        return Promise.all(newPictures.map(convertFileToBase64))\n          .then((base64Pictures) =>\n            base64Pictures.map((picture64) => ({\n              src: picture64,\n              title: `${params.data.name} (${params.data.code})`,\n            }))\n          )\n          .then((transformedNewPictures) =>\n            provider(\"CREATE\", resource, {\n              ...params,\n              data: {\n                ...params.data,\n                images: transformedNewPictures,\n              },\n            })\n          );\n      } else {\n        return provider(fetchType, resource, params);\n      }\n    };\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n","import { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { apolloClient } from \"./index\";\n\nconst GET_USER = gql`\n  query users($where: UserWhereInput) {\n    users(where: $where) {\n      id\n      name\n      password\n      permission\n      group {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst authProvider = {\n  login: async ({ username, password }) => {\n    const response = await apolloClient.query({\n      query: GET_USER,\n      variables: {\n        where: {\n          AND: [\n            {\n              name: username,\n            },\n            {\n              password: password,\n            },\n          ],\n        },\n      },\n    });\n    const loginUser = response.data.users[0];\n    if (response.data.users.length === 0) {\n      throw new Error(\"Login Error\");\n    }\n    localStorage.setItem(\"token\", loginUser.name);\n    localStorage.setItem(\"permissions\", loginUser.permission.toLowerCase());\n    localStorage.setItem(\n      \"group\",\n      JSON.stringify({\n        name: loginUser.group.name,\n        id: loginUser.group.id,\n      })\n    );\n    return Promise.resolve(loginUser);\n  },\n\n  logout: () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"permissions\");\n    localStorage.removeItem(\"group\");\n    return Promise.resolve();\n  },\n  checkAuth: () => {\n    console.log(\"checkAuth\", localStorage.getItem(\"token\"));\n    return localStorage.getItem(\"token\") ? Promise.resolve() : Promise.reject();\n  },\n  checkError: (error) => {\n    console.log(\"checkError\", error);\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"token\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem(\"permissions\");\n    return role ? Promise.resolve(role) : Promise.reject();\n  },\n};\n\nexport default authProvider;\n","import React from 'react';\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  SimpleShowLayout,\n\n\n  EditButton,\n  DeleteButton,\n\n  TextField,\n\n  TextInput,\n  RadioButtonGroupInput,\n\n  required, FormDataConsumer, ShowController, ShowView,\n} from 'react-admin';\nimport { useDispatch } from 'react-redux';\nimport { setBreadcrumbs } from '../../redux/breadcrumbs';\n\nconst redirect = () => '/Warehouse';\nconst breadcrumbBase = { url: '/Warehouse', label: 'Warehouse' };\n\nexport const WarehouseCreate = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([\n    breadcrumbBase,\n    { url: '/Warehouse/create', label: 'Create New' },\n  ]));\n  return (\n    <Create {...props}>\n      <SimpleForm  variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n        <TextInput source=\"description\" />\n        <TextInput source=\"address\" />\n        <RadioButtonGroupInput source=\"type\" choices={[\n          { id: 'NORMAL', name: 'Normal' },\n          { id: 'TEMPORARY', name: 'Temporary' },\n        ]} />\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport const WarehouseEdit = props => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm  variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n        <TextInput source=\"description\" />\n        <TextInput source=\"address\" />\n        <RadioButtonGroupInput source=\"type\" choices={[\n          { id: 'NORMAL', name: 'Normal' },\n          { id: 'TEMPORARY', name: 'Temporary' },\n        ]} />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(setBreadcrumbs([breadcrumbBase, { url: `/Warehouse/${formData.id}`, label: `Edit: ${formData.name}` }]));\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport const WarehouseList = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"name\" />\n        <TextField source=\"description\" />\n        <TextField source=\"type\" />\n\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n}\n\nexport const WarehouseShow = props => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {controllerProps => {\n        const label = controllerProps.record ? controllerProps.record.name : '';\n        const id = controllerProps.record ? controllerProps.record.id : '';\n        dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerGroup/${id}/show`, label: `Details: ${label}` }]));\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <TextField source=\"id\" />\n              <TextField source=\"name\" />\n              <TextField source=\"description\" />\n              <TextField source=\"address\" />\n              <TextField source=\"type\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n}\n","import React from \"react\";\nimport { Create, Edit, SimpleForm, List, Datagrid, Show, SimpleShowLayout, EditButton, DeleteButton, TextField, EmailField, DateField, TextInput, required, email, FormDataConsumer, ShowController, ShowView } from \"react-admin\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/Supplier\";\nconst breadcrumbBase = { url: \"/Supplier\", label: \"Supplier\" };\n\nexport const SupplierCreate = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase, { url: \"/Supplier/create\", label: \"Create New\" }]));\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n        <TextInput source=\"email\" validate={email()} />\n        <TextInput source=\"country\" />\n        <TextInput source=\"phone\" />\n        <TextInput source=\"fax\" />\n        <TextInput multiline source=\"paymentTerms\" />\n        <TextInput multiline source=\"creditLine\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const SupplierEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n        <TextInput source=\"email\" validate={email()} />\n        <TextInput source=\"country\" />\n        <TextInput source=\"phone\" />\n        <TextInput source=\"fax\" />\n        <TextInput source=\"paymentTerms\" />\n        <TextInput source=\"creditLine\" />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(setBreadcrumbs([breadcrumbBase, { url: `/Supplier/${formData.id}`, label: `Edit: ${formData.name}` }]));\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const SupplierShow = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        const label = controllerProps.record ? controllerProps.record.name : \"\";\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(setBreadcrumbs([breadcrumbBase, { url: `/Supplier/${id}/show`, label: `Details: ${label}` }]));\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <TextField source=\"name\" />\n              <EmailField source=\"email\" />\n              <TextField source=\"country\" />\n              <TextField source=\"phone\" />\n              <TextField source=\"fax\" />\n              <TextField source=\"paymentTerms\" />\n              <TextField source=\"creditLine\" />\n              <DateField source=\"createdAt\" />\n              <DateField source=\"updatedAt\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const SupplierList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props} sort={{ field: \"createdAt\", order: \"DESC\" }}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"name\" />\n        <EmailField source=\"email\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from \"react\";\nimport {\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  Create,\n  ReferenceInput,\n  DeleteButton,\n  TextField,\n  DateField,\n  SelectInput,\n  DateTimeInput,\n  required,\n  ReferenceField,\n  DateInput,\n  SimpleShowLayout,\n  TextInput,\n  FormDataConsumer,\n  ShowController,\n  ShowView,\n} from \"react-admin\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/ReceivePayment\";\nconst breadcrumbBase = { url: \"/ReceivePayment\", label: \"Receive Payment\" };\n\nexport const ReceivePaymentCreate = (props) => {\n  const dispatch = useDispatch();\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/ReceivePayment/create\", label: \"Create New\" },\n    ])\n  );\n  return (\n    <Create {...props}>\n      <SimpleForm redirect={redirect}>\n        <ReferenceInput\n          label=\"Invoice\"\n          source=\"invoiceId\"\n          reference=\"Invoice\"\n          sort={{ field: \"createdAt\", order: \"DESC\" }}\n        >\n          <SelectInput optionText=\"code\" label=\"Receive Payment No.\" />\n        </ReferenceInput>\n        <SelectInput\n          source=\"paymentMethod\"\n          validate={required()}\n          choices={[\n            { id: \"COD\", name: \"Cash on Delivery\" },\n            { id: \"CREDIT\", name: \"Credit\" },\n            { id: \"DEBIT\", name: \"Debit\" },\n          ]}\n        />\n        <DateInput source=\"paidAt\" validate={required()} />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const ReceivePaymentEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm redirect={redirect}>\n        <ReferenceInput label=\"Invoice\" source=\"invoiceId\" reference=\"Invoice\">\n          <SelectInput optionText=\"code\" label=\"Receive Payment No.\" />\n        </ReferenceInput>\n        <SelectInput\n          source=\"paymentMethod\"\n          validate={required()}\n          choices={[\n            { id: \"COD\", name: \"Cash on Delivery\" },\n            { id: \"Credit\", name: \"Credit\" },\n            { id: \"Debit\", name: \"Debit\" },\n          ]}\n        />\n        <DateTimeInput source=\"paidAt\" validate={required()} />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                breadcrumbBase,\n                { url: `/ReceivePayment/${formData.id}`, label: \"Edit\" },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const ReceivePaymentShow = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        const label = \"Details\";\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(\n          setBreadcrumbs([\n            breadcrumbBase,\n            { url: `/CustomerGroup/${id}/show`, label: `Details: ${label}` },\n          ])\n        );\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <ReferenceField\n                label=\"Invoice\"\n                reference=\"Invoice\"\n                source=\"invoice.id\"\n              >\n                <TextField source=\"code\" label=\"Receive Payment No.\" />\n              </ReferenceField>\n              <DateField source=\"paidAt\" />\n              <TextField source=\"paymentMethod\" />\n              <DateField source=\"createdAt\" />\n              <DateField source=\"updatedAt\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const ReceivePaymentList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props} sort={{ field: \"createdAt\", order: \"DESC\" }}>\n      <Datagrid rowClick=\"show\">\n        <ReferenceField label=\"Invoice\" reference=\"Invoice\" source=\"invoice.id\">\n          <TextField source=\"code\" label=\"Receive Payment No.\" />\n        </ReferenceField>\n        <DateField source=\"paidAt\" />\n        <TextField source=\"paymentMethod\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    padding: theme.spacing(1),\n    paddingBottom: 0,\n    color: theme.palette.text.hint,\n  },\n  text: {\n    padding: theme.spacing(1),\n    paddingTop: 0,\n    color: theme.palette.text.primary,\n  }\n}));\n\nfunction ShowText({ label, children }) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <div className={classes.label}>\n        <Typography variant=\"caption\">{label}</Typography>\n      </div>\n      <div className={classes.text}>\n        <Typography variant=\"inherit\">{children}</Typography>\n      </div>\n    </React.Fragment>\n  );\n}\n\nShowText.propTypes = {\n  label: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ShowText;","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  SelectInput,\n  NumberField,\n  ReferenceInput,\n  TextInput,\n  ReferenceField,\n  Datagrid,\n  required,\n  useTranslate,\n  FormDataConsumer,\n  TextField,\n  ReferenceArrayField,\n  DateInput,\n  Show,\n  ReferenceFieldController,\n} from \"react-admin\";\nimport ShowText from \"../../../components/Shows/ShowText\";\nimport BilingualField from \"../../../components/BilingualField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { Field } from \"react-final-form\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\n// import { TextField } from '@material-ui/core';\n\nfunction InvoiceSelector({ formProps }) {\n  const translate = useTranslate();\n\n  const renderSalesOrderDetails = (formData) => {\n    return (\n      <React.Fragment>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate(\"invoice.totalPrice\")}>\n            <ReferenceField\n              resource=\"DeliveryNote\"\n              basePath=\"/DeliveryNote\"\n              source=\"invoiceId\"\n              reference=\"Invoice\"\n              record={formData}\n              link={false}\n            >\n              <NumberField\n                source=\"totalPrice\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </ReferenceField>\n          </ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate(\"invoice.state\")}>\n            <ReferenceField\n              resource=\"DeliveryNote\"\n              basePath=\"/DeliveryNote\"\n              source=\"invoiceId\"\n              reference=\"Invoice\"\n              record={formData}\n              link={false}\n            >\n              <TextField source=\"state\" />\n            </ReferenceField>\n          </ShowText>\n        </Grid>\n        <Grid item xs={12}>\n          <ReferenceField\n            resource=\"DeliveryNote\"\n            basePath=\"/DeliveryNote\"\n            source=\"salesOrderId\"\n            reference=\"SalesOrder\"\n            record={formData}\n            link={false}\n          >\n            <ReferenceArrayField\n              reference=\"SalesOrderItem\"\n              source=\"productsIds\"\n              addLabel={false}\n            >\n              <Datagrid>\n                <ReferenceField\n                  label=\"#\"\n                  source=\"product.id\"\n                  reference=\"Product\"\n                  link=\"show\"\n                >\n                  <TextField source=\"code\" label=\"Product No.\" />\n                </ReferenceField>\n                <ReferenceField\n                  label=\"Product Name\"\n                  source=\"product.id\"\n                  reference=\"Product\"\n                  link=\"show\"\n                >\n                  <BilingualField source=\"name\" />\n                </ReferenceField>\n                <NumberField\n                  source=\"price\"\n                  options={{ style: \"currency\", currency: \"HKD\" }}\n                />\n                <TextField source=\"quantity\" />\n                <NumberField\n                  source=\"totalPrice\"\n                  options={{ style: \"currency\", currency: \"HKD\" }}\n                />\n              </Datagrid>\n            </ReferenceArrayField>\n          </ReferenceField>\n        </Grid>\n      </React.Fragment>\n    );\n  };\n\n  const renderCustomerInput = (formData) => {\n    return (\n      <Grid item xs={12} sm={6}>\n        <ReferenceField\n          resource=\"DeliveryNote\"\n          basePath=\"/DeliveryNote\"\n          source=\"salesOrderId\"\n          reference=\"SalesOrder\"\n          record={formData}\n          link={false}\n        >\n          <ReferenceFieldController\n            source=\"shop.id\"\n            reference=\"CustomerShop\"\n            record={formData}\n            link={false}\n          >\n            {({ referenceRecord }) => (\n              <SelectInput\n                fullWidth\n                choices={\n                  referenceRecord && [\n                    {\n                      id: referenceRecord.id,\n                      name: `${referenceRecord.nameChi} (${referenceRecord.code})`,\n                    },\n                  ]\n                }\n                defaultValue={referenceRecord && referenceRecord.id}\n                disabled\n                source=\"customerId\"\n              />\n            )}\n          </ReferenceFieldController>\n        </ReferenceField>\n      </Grid>\n    );\n  };\n\n  const renderStatusInput = (formData) => {\n    return (\n      <Field name=\"state\">\n        {({ input }) => {\n          const { value, name, onChange } = input;\n          if (!value) {\n            onChange(\"SENT\");\n          }\n\n          const handleChange = (state) => {\n            onChange(state);\n          };\n          return (\n            <Grid item xs={12} sm={6}>\n              <FormControl variant=\"filled\" fullWidth>\n                <InputLabel id=\"form-state\">\n                  {translate(\"salesOrder.state\")}\n                </InputLabel>\n                <Select\n                  label=\"form-state\"\n                  onChange={(e) => handleChange(e.target.value)}\n                  title=\"Status\"\n                  defaultValue=\"SENT\"\n                >\n                  {[\n                    { id: \"SENT\", name: \"SENT\" },\n                    { id: \"PICKED\", name: \"PICKED\" },\n                    { id: \"PACKED\", name: \"PACKED\" },\n                    { id: \"DELIVERED\", name: \"DELIVERED\" },\n                  ].map((d) => (\n                    <MenuItem key={`DN${d.id}`} value={d.id}>\n                      {d.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          );\n        }}\n      </Field>\n    );\n  };\n\n  const renderInvoiceDetails = (formData, setFormData) => {\n    const { invoiceId } = formData;\n    return (\n      <React.Fragment>\n        <Grid item xs={12} sm={6}>\n          <ReferenceField\n            resource=\"DeliveryNote\"\n            basePath=\"/DeliveryNote\"\n            source=\"invoiceId\"\n            reference=\"Invoice\"\n            record={formData}\n            link={false}\n          >\n            <ReferenceFieldController\n              source=\"salesOrder.id\"\n              reference=\"SalesOrder\"\n              record={formData}\n              link={false}\n            >\n              {({ referenceRecord }) => (\n                <SelectInput\n                  fullWidth\n                  defaultValue={referenceRecord && referenceRecord.id}\n                  disabled\n                  choices={\n                    referenceRecord && [\n                      { id: referenceRecord.id, name: referenceRecord.code },\n                    ]\n                  }\n                  source=\"salesOrderId\"\n                />\n              )}\n            </ReferenceFieldController>\n          </ReferenceField>\n        </Grid>\n        {formData.salesOrderId && renderCustomerInput(formData)}\n        {formData.customerId && renderStatusInput(formData)}\n        {formData.customerId && renderSalesOrderDetails(formData)}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={6}>\n        <ReferenceInput\n          label=\"Select Invoice\"\n          source=\"invoiceId\"\n          reference=\"Invoice\"\n          resource=\"DeliveryNote\"\n          validate={required()}\n          filterToQuery={(searchText) => ({ code_contains: searchText })}\n          sort={{ field: \"createdAt\", order: \"DESC\" }}\n        >\n          <SelectInput optionText=\"code\" fullWidth label=\"Invoice No.\" />\n        </ReferenceInput>\n      </Grid>\n      <FormDataConsumer subscription={{ values: true }}>\n        {({ formData, ...others }) => {\n          return formData.invoiceId && renderInvoiceDetails(formData);\n        }}\n      </FormDataConsumer>\n    </Grid>\n  );\n}\n\nexport default InvoiceSelector;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\n// remove query warehouse\nconst GET_ITEMS = gql`\n  query inventoryItems($where: InventoryItemWhereInput) {\n    inventoryItems(where: $where, first: 10) {\n      id\n      label\n      expiryDate\n      product {\n        id\n        code\n        nameEn\n        nameChi\n      }\n    }\n  }\n`;\n\nexport default function InventoryItemAutocomplete({\n  onChange,\n  defaultValue,\n  products,\n}) {\n  console.log(products.map((product) => product.product.id));\n  const [label, setLabel] = useState(\"\");\n  const translate = useTranslate();\n  const { loading: fetching, data } = useQuery(GET_ITEMS, {\n    variables: {\n      where: {\n        label_contains: label,\n        productId_in: products.map((p) => p.product.id),\n        warehouse: { name_not: \"OUT\" },\n      },\n    },\n  });\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = fetching || (open && options.length === 0);\n\n  React.useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      console.log(\"get!!!!data\", data);\n      const { inventoryItems } = data;\n      const filteredItems = inventoryItems.filter((item) =>\n        products.map((p) => p.product.code).includes(item.product.code)\n      );\n      // setOptions(\n      //   filteredItems.map((obj) => ({\n      //     id: obj.id,\n      //     name: `(${obj.label} - ${obj.product.code}-${obj.product.nameChi} `,\n      //   }))\n      // );\n      setOptions(\n        inventoryItems.map((obj) => ({\n          id: obj.id,\n          name: `(${obj.label} - ${obj.product.code}-${obj.product.nameChi} `,\n        }))\n      );\n    }\n  }, [loading, data]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = (evt, value) => {\n    const { inventoryItems } = data;\n    if (!value) {\n      return;\n    }\n    onChange(inventoryItems.find((obj) => obj.id === value.id));\n    setLabel(\"\");\n  };\n\n  const handleInputChange = (e, value) => {\n    setLabel(value);\n  };\n\n  return (\n    <Autocomplete\n      id=\"purchase-order-autocomplete\"\n      autoSelect\n      autoComplete\n      autoHighlight\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      onInputChange={handleInputChange}\n      getOptionLabel={(option) => option.name}\n      getOptionSelected={(option) => option.id}\n      options={options}\n      loading={loading}\n      value={defaultValue && { id: defaultValue.id, name: defaultValue.code }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Search by label...\"\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\n// remove query warehouse\nconst GET_PRODUCTS = gql`\n  query products($where: ProductWhereInput) {\n    products(where: $where) {\n      id\n      code\n      nameChi\n      nameEn\n      inventoryItems {\n        id\n        label\n        expiryDate\n        product {\n          id\n          code\n          nameChi\n          nameEn\n        }\n        warehouse {\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst GET_PRODUCT_ID = gql`\n  query products($where: ProductWhereInput!) {\n    products(where: $where) {\n      id\n    }\n  }\n`;\n// product -> item\nconst GET_ITEM = gql`\n  query inventoryItems($where: InventoryItemWhereInput!) {\n    inventoryItems(where: $where, first: 20) {\n      id\n      label\n      expiryDate\n      product {\n        id\n        code\n        nameChi\n        nameEn\n      }\n      warehouse {\n        name\n      }\n    }\n  }\n`;\n\nexport default function ProductAutocomplete({ onChange, value, productIds }) {\n  const [code, setCode] = useState(\"\");\n  const [productID, setProductID] = useState(\"\");\n  const { loading: fetchID, productData } = useQuery(GET_PRODUCT_ID, {\n    variables: {\n      where: { id_in: productIds, code_contains: code },\n    },\n    onCompleted: (value) => {\n      getItem({\n        variables: {\n          where: {\n            productId_in:\n              value.products.length >= 1 ? value.products[0].id : \"\",\n          },\n        },\n      });\n    },\n  });\n\n  const [getItem, { loading: fetching, data }] = useLazyQuery(GET_ITEM, {\n    onCompleted: (value) => {\n      const inventoryItems = !!value ? value.inventoryItems : [];\n\n      const item = inventoryItems\n        .filter((item) => item.warehouse.name !== \"OUT\")\n        .reduce((results, item) => {\n          results = [\n            ...results,\n            {\n              id: `${item.product.id}-${item.id}`,\n              name: `${item.product.code}-${item.product.nameChi} (${\n                item.label || \"No Label\"\n              })`,\n            },\n          ];\n          return results;\n        }, []);\n\n      setOptions(item);\n    },\n  });\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = fetching || (open && options.length === 0);\n\n  // React.useEffect(() => {\n  //   if (!loading) {\n  //     return undefined;\n  //   }\n\n  //   if (data) {\n  //     const { inventoryItems } = data;\n  //\n  //     const item = inventoryItems\n  //       .filter((item) => item.warehouse.name !== \"OUT\")\n  //       .reduce((results, item) => {\n  //\n\n  //         results = [\n  //           ...results,\n  //           {\n  //             id: `${item.product.id}-${item.id}`,\n  //             name: `${item.product.code}-${item.product.nameChi} (${\n  //               item.label || \"No Label\"\n  //             })`,\n  //           },\n  //         ];\n  //         return results;\n  //       }, []);\n  //\n  //     setOptions(item);\n  //   }\n  // }, [loading, data]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = (evt, value) => {\n    const [productId, itemId] = value ? value.id.split(\"-\") : [];\n    const { inventoryItems } = data;\n    if (!inventoryItems) {\n      return;\n    }\n    onChange(inventoryItems.find((obj) => obj.id === itemId));\n    setCode(\"\");\n  };\n\n  const handleInputChange = (e, value) => {\n    setCode(value);\n  };\n\n  return (\n    <Autocomplete\n      id=\"product-autocomplete\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      onInputChange={handleInputChange}\n      getOptionLabel={(option) => option.name}\n      getOptionSelected={(option) => option.id}\n      options={options}\n      loading={loading}\n      value={value}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Search by product code...\"\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport {\n  useNotify,\n  Datagrid,\n  TextField,\n  FormDataConsumer,\n  useTranslate,\n  NumberField,\n} from \"react-admin\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Field } from \"react-final-form\";\nimport gql from \"graphql-tag\";\nimport ItemAutocomplete from \"./ItemAutocomplete\";\nimport ProductAutocomplete from \"./ProductAutocomplete\";\nimport ShowText from \"../../../components/Shows/ShowText\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport BilingualField from \"../../../components/BilingualField\";\nimport Chip from \"@material-ui/core/Chip\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { List, Avatar, Button, Skeleton } from \"antd\";\n\nconst GET_INVOICE = gql`\n  query invoice($where: InvoiceWhereUniqueInput!) {\n    invoice(where: $where) {\n      salesOrder {\n        id\n        products {\n          id\n          quantity\n          product {\n            id\n            code\n            nameChi\n            nameEn\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ChipsArrayField = ({ source, record = {}, label, onDelete }) => {\n  return (\n    <React.Fragment>\n      {record[source] &&\n        record[source].map((item) => (\n          <Chip\n            key={`chip-${item.itemId}`}\n            // label={`${item.label || \"No label\"} from ${item.warehouseName}`}\n            label={`${item.label || \"No label\"}`}\n            onDelete={() => onDelete(item)}\n            color=\"primary\"\n          />\n        ))}\n    </React.Fragment>\n  );\n};\n\nexport default () => {\n  return (\n    <Field name=\"items\">\n      {({ input }) => {\n        const translate = useTranslate();\n        const { value, name, onChange } = input;\n        if (!value) {\n          onChange([]);\n        }\n        const handleChange = (inventoryItem) => {\n          // check already exists\n          if (value.map((v) => v.itemId).includes(inventoryItem.id)) {\n            return;\n          }\n          onChange([\n            ...value,\n            {\n              itemId: inventoryItem.id,\n              productId: inventoryItem.product.id,\n              productCode: inventoryItem.product.code,\n              productNameEn: inventoryItem.product.nameEn,\n              productNameChi: inventoryItem.product.nameChi,\n              // warehouseId: inventoryItem.warehouse.id,\n              // warehouseName: inventoryItem.warehouse.name,\n              label: inventoryItem.label,\n              expiryDate: inventoryItem.expiryDate,\n              boxNum: 1,\n            },\n          ]);\n        };\n\n        const handleDeleteChange = (item) => {\n          onChange(value.filter((v) => v.itemId !== item.itemId));\n        };\n\n        return (\n          <FormDataConsumer subscription={{ values: true }}>\n            {({ formData }) => {\n              console.log(\"formData\", formData);\n              const { invoiceId, items } = formData;\n              const notify = useNotify();\n              // request invoice info\n              const { data } = useQuery(GET_INVOICE, {\n                variables: { where: { id: invoiceId } },\n              });\n              // preparing data\n              const products = data ? data.invoice.salesOrder.products : [];\n              console.log(\"fetching date here:\", products);\n              const record = products.reduce((results, p) => {\n                // flatten product\n                const { product, ...other } = p;\n                results[product.id] = { ...product, ...other };\n                return results;\n              }, {});\n              // merge selected items\n              items.forEach((item) => {\n                const { productId } = item;\n                if (!record[productId]) {\n                  notify(\"deliveryNote.noNeedThisProduct\", \"info\");\n                  return;\n                }\n                const selected = record[productId].selected || [];\n                record[productId].selected = [...selected, item];\n                record[productId].selectedNum =\n                  record[productId].selected.length;\n              });\n\n              return (\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <ShowText label={translate(\"common.addNew\")}>\n                      <ItemAutocomplete\n                        onChange={handleChange}\n                        placeholder=\"search by label...\"\n                        products={products}\n                      />\n                    </ShowText>\n                  </Grid>\n                  <Grid item xs={6} style={{ marginTop: 29 }}>\n                    <ProductAutocomplete\n                      onChange={handleChange}\n                      placeholder=\"search by product no...\"\n                      productIds={Object.keys(record)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Datagrid\n                      data={record}\n                      ids={Object.keys(record)}\n                      resource=\"DeliveryNote\"\n                      basePath=\"/DeliveryNote\"\n                      currentSort={{ field: \"code\", order: \"ASC\" }}\n                    >\n                      <TextField source=\"code\" label=\"Delivery Note No.\" />\n                      <BilingualField source=\"name\" />\n                      <NumberField source=\"quantity\" />\n                      <ChipsArrayField\n                        source=\"selected\"\n                        onDelete={handleDeleteChange}\n                      />\n                      <NumberField\n                        source=\"selectedNum\"\n                        label=\"Selected quantity\"\n                      />\n                    </Datagrid>\n                  </Grid>\n                </Grid>\n              );\n            }}\n          </FormDataConsumer>\n        );\n      }}\n    </Field>\n  );\n};\n","import React, { useState } from 'react';\nimport range from 'lodash/range';\nimport { useNotify, Datagrid, TextField, FormDataConsumer, useTranslate, NumberField } from 'react-admin';\nimport Grid from '@material-ui/core/Grid';\nimport { Field } from 'react-final-form';\nimport gql from 'graphql-tag';\nimport ItemAutocomplete from './ItemAutocomplete';\nimport ProductAutocomplete from './ProductAutocomplete';\nimport ShowText from '../../../components/Shows/ShowText';\nimport { useQuery } from '@apollo/react-hooks';\nimport BilingualField from '../../../components/BilingualField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst BoxSelectField = ({ source, record = {}, label, onChange, maxBox }) => {\n  const boxNum = record[source];\n  const handleChange = (e) => {\n    onChange(e.target.value, record.itemId)\n  };\n  return (\n    <FormControl>\n      <InputLabel id=\"demo-simple-select-label\">Box</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={boxNum}\n        onChange={handleChange}\n      >\n        {range(maxBox + 1).map(i => (\n          <MenuItem key={`option-${record.itemId}-${i + 1}`} value={i + 1}>Box {i + 1}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default () => {\n  const [maxBox, setMaxBox] = useState(1);\n  return (\n    <Field name=\"items\">\n      {({ input }) => {\n        const translate = useTranslate();\n        const { value, name, onChange } = input;\n        console.log('value in box form', value);\n\n        const handleChange = (boxNum, itemId) => {\n          // check already exists\n          const item = value.find(v => v.itemId === itemId);\n          item.boxNum = boxNum;\n\n          onChange([...value]);\n          if (boxNum > maxBox) {\n            setMaxBox(boxNum);\n          }\n        };\n\n        // preparing record\n        const record = value.reduce((r, v) => {\n          r[v.itemId] = v;\n          return r;\n        }, {});\n\n        return (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Datagrid\n                data={record}\n                ids={Object.keys(record)}\n                resource=\"DeliveryNote\"\n                basePath=\"/DeliveryNote\"\n                currentSort={{ field: 'code', order: 'ASC' }}\n              >\n                <TextField source=\"productCode\" />\n                <BilingualField source=\"productName\" />\n                <NumberField source=\"label\" />\n                <BoxSelectField source=\"boxNum\" onChange={handleChange} maxBox={maxBox} />\n              </Datagrid>\n            </Grid>\n          </Grid>\n        );\n      }}\n    </Field>\n  );\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport dayjs from 'dayjs';\nimport { FormDataConsumer, Datagrid, ReferenceField, DateField, TextField, useTranslate, NumberField } from 'react-admin';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Grid from '@material-ui/core/Grid';\nimport TableRow from '@material-ui/core/TableRow';\nimport BilingualField from '../../../components/BilingualField';\nimport ShowText from '../../../components/Shows/ShowText';\n\nfunction Review({ formProps }) {\n  const translate = useTranslate();\n  console.log(formProps);\n\n  return (\n    <FormDataConsumer subscription={{ values: true }}>\n      {({ formData }) => {\n        const { invoiceId, salesOrderId, customerId, items } = formData;\n        const record = formData.items.reduce((r, i) => {\n          r[i.itemId] = i;\n          return r;\n        }, {});\n        return (\n          <React.Fragment>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ShowText label={translate('customer.shippingAddress')}>\n                <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    \n                    <TextField source=\"deliverAddress\" />\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n                <ShowText label=\"Attn.\">\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"customer.id\"\n                    reference=\"Customer\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"nameChi\" />\n                  </ReferenceField>\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n                <ShowText label=\"Tel..\">\n                <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"customer.id\"\n                    reference=\"Customer\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"mobile\" />\n                  </ReferenceField>\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n                <ShowText label={translate('customer.billingAddress')}>\n                <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"customer.id\"\n                    reference=\"Customer\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"billingAddress\" />\n                  </ReferenceField>\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n                <ShowText label=\"Attn.\">\n                <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"customer.id\"\n                    reference=\"Customer\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"nameChi\" />\n                  </ReferenceField>\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n                <ShowText label=\"Tel..\">\n                <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"salesOrderId\" reference=\"SalesOrder\" \n                    record={formData}\n                    link={false}\n                 >\n                 <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    record={formData}\n                    link={false}\n                  >\n                    <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"customer.id\"\n                    reference=\"Customer\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"mobile\" />\n                  </ReferenceField>\n                  </ReferenceField>\n                 </ReferenceField>\n                </ShowText>\n              </Grid>\n              <Grid item xs={6}>\n                <ShowText label={translate('common.date')}>\n                  {dayjs().format('YYYY-MM-DD')}\n                </ShowText>\n                <ShowText label=\"Ref.\">\n                  <ReferenceField\n                    resource=\"DeliveryNote\"\n                    basePath=\"/DeliveryNote\"\n                    source=\"invoiceId\"\n                    reference=\"Invoice\"\n                    record={formData}\n                    link={false}\n                  >\n                    <TextField source=\"code\" label=\"Delivery Note No.\" />\n                  </ReferenceField>\n                </ShowText>\n                <ShowText label={translate('deliveryNote.deliveryDate')}>\n                  <TextField source=\"deliveryDate\" record={formData} />\n                </ShowText>\n                <ShowText label={translate('common.salesman')}>\n                  Jacky Lee\n                </ShowText>\n              </Grid>\n              <Grid item xs={12}>\n                <Datagrid\n                  data={record}\n                  ids={Object.keys(record)}\n                  resource=\"DeliveryNote\"\n                  basePath=\"/DeliveryNote\"\n                  currentSort={{ field: 'code', order: 'ASC' }}\n                >\n                  <TextField source=\"productCode\" />\n                  <BilingualField source=\"productName\" />\n                  <NumberField source=\"label\" />\n                  <DateField source=\"expiryDate\" />\n                  <TextField label=\"Box Num\" source=\"boxNum\" />\n                </Datagrid>\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        );\n      }}\n    </FormDataConsumer>\n  );\n}\n\nexport default Review;","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  useTranslate,\n  FormWithRedirect,\n  SaveButton,\n  Toolbar,\n  useCreate,\n  useRedirect,\n  useNotify,\n} from \"react-admin\";\nimport { useFormState } from \"react-final-form\";\nimport { useHistory } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport InvoiceSelector from \"./1_InvoiceSelector\";\nimport QuantityCheckForm from \"./2_QuantityCheckForm\";\nimport BoxingForm from \"./3_BoxingForm\";\nimport Review from \"./4_Review\";\nimport Box from \"@material-ui/core/Box\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../../redux/breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n}));\nconst GET_INVOICE = gql`\n  query getInvoice($id: ID!) {\n    invoice(where: { id: $id }) {\n      code\n    }\n  }\n`;\n\nconst SaveWithNoteButton = (props) => {\n  const [create] = useCreate(\"DeliveryNote\");\n  const redirectTo = useRedirect();\n  const notify = useNotify();\n  const formState = useFormState();\n  const { basePath, redirect } = props;\n  const { loading, data: res } = useQuery(GET_INVOICE, {\n    variables: { id: formState.values.invoiceId },\n  });\n  const handleClick = useCallback(() => {\n    // call dataProvider.create() manually\n    const { items, ...others } = formState.values;\n    console.log(res.invoice.code);\n    create(\n      {\n        payload: {\n          data: {\n            ...others,\n            code: `DN-${res.invoice.code}`,\n            items: items.map(({ productId, itemId, boxNum }) => ({\n              productId,\n              itemId,\n              boxNum,\n            })),\n          },\n        },\n      },\n      {\n        onSuccess: ({ data: newRecord }) => {\n          notify(\"ra.notification.created\", \"info\", {\n            smart_count: 1,\n          });\n          redirectTo(redirect, basePath, newRecord.id, newRecord);\n        },\n        onFailure: (error) => notify(`Error: ${error.message}`, \"warning\"),\n      }\n    );\n  }, [create, notify, redirectTo, basePath, formState, redirect]);\n\n  return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n};\n\n// const ADD_DELIVERY_NOTE = gql`\n//   mutation createDeliveryNote($data: DeliveryNoteCreateInput!) {\n//     createDeliveryNote(data: $data) {\n//       id\n//     }\n//   }\n// `;\n\nexport default (props) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const classes = useStyles();\n  const history = useHistory();\n  // const [addDeliveryNote] = useMutation(ADD_DELIVERY_NOTE);\n  const [activeStep, setActiveStep] = useState(0);\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/DeliveryNote\", label: \"Delivery Note\" },\n      { url: \"/DeliveryNote/create\", label: \"Create New\" },\n    ])\n  );\n  // const initialValues = {\n  //   purchaseOrder: null,\n  // };\n  // const [formData, setFormData] = useState(initialValues);\n\n  const steps = [\n    translate(\"deliveryNote.selectInvoice\"),\n    translate(\"deliveryNote.quantityCheck\"),\n    translate(\"deliveryNote.packingBox\"),\n    translate(\"deliveryNote.review\"),\n  ];\n\n  // const handleSave = () => {\n  //   const data = {\n  //     salesOrderId: formData.salesOrder.id,\n  //     invoiceId: formData.invoice.id,\n  //     deliveryDate: formData.invoice.shipmentDate,\n  //     contactPerson: formData.invoice.contactPerson,\n  //     items: {\n  //       create: formData.items.map(item => ({\n  //         id: item.id,\n  //         productId: item.product.id,\n  //         code: item.product.code,\n  //         label: item.label,\n  //         boxNum: item.boxNum,\n  //       })),\n  //     },\n  //     state: 'PACKED',\n  //   };\n  //   console.log('create data', data);\n  //   addDeliveryNote({ variables: { data } })\n  //     .then(() => {\n  //       history.push('/DeliveryNote');\n  //     });\n  // };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <FormWithRedirect\n      {...props}\n      render={(formProps) => {\n        return (\n          <form>\n            <main className={classes.layout}>\n              <Paper className={classes.paper}>\n                <Stepper activeStep={activeStep} className={classes.stepper}>\n                  {steps.map((label) => (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  ))}\n                </Stepper>\n\n                <React.Fragment>\n                  {activeStep === 0 && (\n                    <InvoiceSelector formProps={formProps} />\n                  )}\n                  {activeStep === 1 && (\n                    <QuantityCheckForm formProps={formProps} />\n                  )}\n                  {activeStep === 2 && <BoxingForm formProps={formProps} />}\n                  {activeStep === 3 && <Review formProps={formProps} />}\n\n                  <Toolbar>\n                    <Box display=\"flex\" justifyContent=\"flex-end\" width=\"100%\">\n                      {activeStep > 0 && (\n                        <Button onClick={handleBack} color=\"primary\">\n                          {translate(\"common.prev\")}\n                        </Button>\n                      )}\n                      {activeStep < steps.length - 1 && (\n                        <Button onClick={handleNext} color=\"primary\">\n                          {translate(\"common.next\")}\n                        </Button>\n                      )}\n                      <SaveWithNoteButton\n                        disabled={activeStep !== steps.length - 1}\n                        basePath=\"/DeliveryNote\"\n                        redirect=\"/DeliveryNote\"\n                      />\n                    </Box>\n                  </Toolbar>\n                </React.Fragment>\n              </Paper>\n            </main>\n          </form>\n        );\n      }}\n    />\n  );\n};\n","export default function capitalizeFirstLetter(str) {\n  var splitStr = str\n    .toLowerCase()\n    .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \" \")\n    .split(\" \");\n  for (var i = 0; i < splitStr.length; i++) {\n    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n  }\n  return splitStr.join(\" \");\n}\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport T2W from \"numbers2words\";\nimport capitalizeFirstLetter from \"./capitalizeFirstLetter\";\nimport dayjs from \"dayjs\";\n\nconst SCGenerator = (dataArray) => () => {\n  var now = dayjs();\n  var translator = new T2W(\"EN_US\");\n  let data = [];\n  let col = [\n    { dataKey: \"count\", header: \"Item\" },\n    { dataKey: \"no\", header: \"Product No\" },\n    { dataKey: \"des\", header: \"Description\" },\n    { dataKey: \"qty\", header: \"Qty\" },\n    { dataKey: \"price\", header: \"Price\" },\n    { dataKey: \"amount\", header: \"Amount\" },\n  ];\n\n  var doc = new jsPDF(\"p\", \"pt\");\n  doc.page = 1;\n  var totalPagesExp = \"{total_pages_count_string}\";\n  var width = doc.internal.pageSize.getWidth();\n  var height = doc.internal.pageSize.getHeight();\n  var header = function () {\n    var str = doc.internal.getNumberOfPages().toString();\n    if (typeof doc.putTotalPages === \"function\") {\n      str = str + \" of \" + totalPagesExp;\n    }\n    doc.setFontSize(23);\n    doc.setFontStyle(\"bold\");\n    doc.text(width - 200, 50, \"Sales Contract\");\n\n    doc.setFontSize(10);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 100, \"Bill To:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 100, dataArray.salesOrder.shop.nameEn);\n    doc.text(100, 115, dataArray.salesOrder.shop.deliverAddress);\n    doc.text(100, 130, \"\");\n    doc.text(100, 145, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 165, \"Attn:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 165, dataArray.salesOrder.shop.customer.nameEn);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 180, \"Tel:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 180, dataArray.salesOrder.shop.phone ? dataArray.salesOrder.shop.phone.toString() : \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(200, 180, \"Fax:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(250, 180, dataArray.salesOrder.shop.phone ? dataArray.salesOrder.shop.phone.toString() : \"\");\n\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 100, \"Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 100, now.format(\"DD/MMM/YYYY\"));\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 115, \"REF. No.:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 115, dataArray.salesOrder.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 130, \"Cust. ID:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 130, dataArray.salesOrder.shop.customer.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 145, \"Pay term:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 145, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 160, \"Ship Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 160, dayjs(dataArray.salesOrder.shippingDate).format(\"DD/MMM/YYYY\"));\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 175, \"Salesman:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 175, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 190, \"Page:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 190, str);\n\n    doc.setLineWidth(1.5);\n    doc.setDrawColor(0, 0, 0);\n    doc.line(50, 200, width - 50, 200);\n    doc.line(50, 220, width - 50, 220);\n  };\n\n  var footer = function () {\n    doc.setFontSize(7);\n    doc.text(width - 40, height - 30, \"Page - \" + doc.page);\n    doc.page++;\n  };\n\n  var options = {\n    beforePageContent: header,\n    afterPageContent: footer,\n    theme: \"striped\",\n    columnStyles: {\n      count: { columnWidth: 30 },\n      no: { columnWidth: 70 },\n      des: { columnWidth: 270 },\n      qty: { columnWidth: 30 },\n      price: { columnWidth: 40 },\n      amount: { columnWidth: 50, halign: \"right\" },\n    },\n\n    headStyles: { fillColor: false, textColor: \"black\" },\n    style: { cellWidth: \"auto\" },\n    margin: { top: 200, bottom: 100, horizontal: 50 },\n  };\n\n  dataArray.salesOrder.products.map((item, index) => {\n    let b = {\n      count: index + 1,\n      no: item.product.code,\n      des: item.product.nameEn,\n      qty: item.quantity,\n      price: item.price,\n      amount: item.totalPrice,\n    };\n    data.push(b);\n  });\n\n  doc.autoTable(col, data, options);\n  doc.setFontSize(10);\n  doc.setFontStyle(\"normal\");\n  doc.text(412, doc.autoTable.previous.finalY + 12, \"Sub-total :\");\n  doc.text(width - 53 - 5 * dataArray.salesOrder.subtotal.toFixed(1).toString().length, doc.autoTable.previous.finalY + 12, dataArray.salesOrder.subtotal.toFixed(1).toString());\n  doc.text(376, doc.autoTable.previous.finalY + 27, \"Discount Amount :\");\n  doc.text(width - 47 - 5 * (dataArray.salesOrder.discountAmount.toFixed(1).toString().length + 1), doc.autoTable.previous.finalY + 27, dataArray.salesOrder.discountAmount.toFixed(1).toString());\n  doc.text(400, doc.autoTable.previous.finalY + 47, \"Grand Total :\");\n  doc.text(width - 53 - 5 * dataArray.salesOrder.grandTotal.toFixed(1).toString().length, doc.autoTable.previous.finalY + 47, dataArray.salesOrder.grandTotal.toFixed(1).toString());\n  if (dataArray.salesOrder.grandTotal === parseInt(dataArray.salesOrder.grandTotal, 10)) {\n    doc.text(50, doc.autoTable.previous.finalY + 70, \"Say: Hong Kong Dollar \" + capitalizeFirstLetter(translator.toWords(dataArray.salesOrder.grandTotal)) + \" ONLY.\");\n  } else {\n    const strings = dataArray.salesOrder.grandTotal.toFixed(1).toString().split(\".\");\n    doc.text(50, doc.autoTable.previous.finalY + 70, \"Say: Hong Kong Dollar \" + capitalizeFirstLetter(translator.toWords(parseInt(strings[0]))) + \" And \" + capitalizeFirstLetter(translator.toWords(parseInt(strings[1] * 10))) + \" CENTS ONLY.\");\n  }\n  doc.setFontStyle(\"bold\");\n  doc.text(50, doc.autoTable.previous.finalY + 87, \"Shipterm :\");\n  doc.setFontStyle(\"normal\");\n  doc.text(100, doc.autoTable.previous.finalY + 87, \"Standard Delivery\");\n  doc.setFontStyle(\"bold\");\n  doc.text(50, doc.autoTable.previous.finalY + 105, \"REMARKS :\");\n  doc.setFontStyle(\"normal\");\n  doc.text(115, doc.autoTable.previous.finalY + 105, \"The sales order only valid for 7 days.\");\n  doc.setFontSize(8);\n  doc.text(350, doc.autoTable.previous.finalY + 120, \"RECEIVED THE ABOVE IN GOOD CONDITIONS :\");\n  doc.line(350, doc.autoTable.previous.finalY + 190, width - 50, doc.autoTable.previous.finalY + 190);\n  doc.text(350, doc.autoTable.previous.finalY + 200, \"COMPANY CHOP & AUTHORIZED SIGNATURE :\");\n  doc.setLineWidth(1);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(455, doc.autoTable.previous.finalY, width - 50, doc.autoTable.previous.finalY);\n  doc.line(455, doc.autoTable.previous.finalY + 33, width - 50, doc.autoTable.previous.finalY + 33);\n  doc.line(455, doc.autoTable.previous.finalY + 50, width - 50, doc.autoTable.previous.finalY + 50);\n  doc.line(455, doc.autoTable.previous.finalY + 52, width - 50, doc.autoTable.previous.finalY + 52);\n  doc.setLineWidth(1.5);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(50, doc.autoTable.previous.finalY + 76, width - 50, doc.autoTable.previous.finalY + 76);\n  doc.line(50, doc.autoTable.previous.finalY + 91, width - 50, doc.autoTable.previous.finalY + 91);\n\n  if (typeof doc.putTotalPages === \"function\") {\n    doc.putTotalPages(totalPagesExp);\n  }\n  doc.save(\"SalesContract.pdf\");\n};\nexport default SCGenerator;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport dayjs from \"dayjs\";\nimport lodash from \"lodash\";\n\nconst DNGenerator = ({ deliveryNote }) => () => {\n  var now = dayjs();\n  let data = [];\n  let col = [\n    { dataKey: \"count\", header: \"Item\" },\n    { dataKey: \"no\", header: \"Product No\" },\n    { dataKey: \"des\", header: \"Description\" },\n    { dataKey: \"exDate\", header: \"Expiry Date\" },\n    { dataKey: \"qty\", header: \"Qty\" },\n  ];\n\n  var doc = new jsPDF(\"p\", \"pt\");\n  doc.page = 1;\n  var totalPagesExp = \"{total_pages_count_string}\";\n  var width = doc.internal.pageSize.getWidth();\n  var height = doc.internal.pageSize.getHeight();\n\n  var header = function () {\n    var str = doc.internal.getNumberOfPages().toString();\n    if (typeof doc.putTotalPages === \"function\") {\n      str = str + \" of \" + totalPagesExp;\n    }\n    doc.setFontSize(23);\n    doc.setFontStyle(\"bold\");\n    doc.text(width - 250, 50, \"DELIVERY NOTE\");\n    doc.setFontSize(10);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 80, \"Ship To:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 80, deliveryNote.salesOrder.shop.nameEn);\n    doc.text(100, 95, deliveryNote.salesOrder.shop.deliverAddress);\n    doc.text(100, 110, \"\");\n    doc.text(100, 125, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 145, \"Attn:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 145, deliveryNote.salesOrder.shop.customer.nameEn);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 160, \"Tel:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 160, deliveryNote.salesOrder.shop.phone ? deliveryNote.salesOrder.shop.phone.toString() : \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(200, 160, \"Fax:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(250, 160, deliveryNote.salesOrder.shop.phone ? deliveryNote.salesOrder.shop.phone.toString() : \"\");\n\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 180, \"Bill To:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 180, deliveryNote.salesOrder.shop.nameEn);\n    doc.text(100, 195, deliveryNote.salesOrder.shop.deliverAddress);\n    doc.text(100, 210, \"\");\n    doc.text(100, 225, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 245, \"Attn:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 245, deliveryNote.salesOrder.shop.customer.nameEn);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 260, \"Tel:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 260, deliveryNote.salesOrder.shop.phone ? deliveryNote.salesOrder.shop.phone.toString() : \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(200, 260, \"Fax:\");\n    doc.setFontStyle(\"normal\");\n    // doc.text(250, 260, deliveryNote.customer.mobile)\n    doc.text(250, 260, deliveryNote.salesOrder.shop.phone ? deliveryNote.salesOrder.shop.phone.toString() : \"\");\n\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 100, \"Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 100, now.format(\"DD/MMM/YYYY\"));\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 115, \"REF. No.:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 115, deliveryNote.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 130, \"Cust. ID:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 130, deliveryNote.salesOrder.shop.customer.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 145, \"Pay term:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 145, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 160, \"Ship Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 160, dayjs(deliveryNote.invoice.shipmentDate).format(\"DD/MMM/YYYY\"));\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 175, \"Salesman:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 175, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 190, \"Page:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 190, str);\n\n    doc.setLineWidth(1.5);\n    doc.setDrawColor(0, 0, 0);\n    doc.line(50, 270, width - 50, 270);\n    doc.line(50, 290, width - 50, 290);\n  };\n\n  var footer = function () {\n    doc.setFontSize(7);\n    doc.text(width - 40, height - 30, \"Page - \" + doc.page);\n    doc.page++;\n  };\n\n  var options = {\n    beforePageContent: header,\n    afterPageContent: footer,\n    theme: \"striped\",\n    columnStyles: {\n      count: { columnWidth: 30 },\n      no: { columnWidth: 70 },\n      des: { columnWidth: 270 },\n      exDate: { columnWidth: 80 },\n      qty: { columnWidth: 40 },\n    },\n\n    headStyles: { fillColor: false, textColor: \"black\" },\n    style: { cellWidth: \"auto\" },\n    margin: { top: 270, bottom: 100, horizontal: 50 },\n  };\n\n  const groupedItems = lodash.groupBy(deliveryNote.items, \"product.code\");\n  const items = Object.values(groupedItems).map((array) => {\n    const result = array.reduce((a, b) => {\n      const itemA = dayjs(a.item.expiryDate);\n      const itemB = dayjs(b.item.expiryDate);\n      return Math.abs(itemB - now) < Math.abs(itemA - now) ? b : a;\n    });\n    result.qty = array.length;\n    return result;\n  });\n  items.map((value, index) => {\n    let b = {\n      count: index + 1,\n      no: value.product.code,\n      des: value.product.nameEn,\n      qty: value.qty,\n      exDate: dayjs(value.item.expiryDate).format(\"DD/MMM/YYYY\"),\n    };\n    data.push(b);\n  });\n  console.log(\"data_json\", data);\n  doc.autoTable(col, data, options);\n  doc.setFontSize(10);\n  doc.setFontStyle(\"normal\");\n  doc.setFontSize(8);\n  doc.text(350, doc.autoTable.previous.finalY + 40, \"RECEIVED THE ABOVE IN GOOD CONDITIONS :\");\n  doc.line(350, doc.autoTable.previous.finalY + 110, width - 50, doc.autoTable.previous.finalY + 110);\n  doc.text(350, doc.autoTable.previous.finalY + 120, \"COMPANY CHOP & AUTHORIZED SIGNATURE :\");\n  doc.setLineWidth(1.5);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(50, doc.autoTable.previous.finalY + 6, width - 50, doc.autoTable.previous.finalY + 6);\n  doc.line(50, doc.autoTable.previous.finalY + 21, width - 50, doc.autoTable.previous.finalY + 21);\n\n  if (typeof doc.putTotalPages === \"function\") {\n    doc.putTotalPages(totalPagesExp);\n  }\n  doc.save(\"Delivery Note.pdf\");\n};\nexport default DNGenerator;\n","import { useHistory } from \"react-router-dom\";\nimport {\n  DateField,\n  Datagrid,\n  ReferenceField,\n  ReferenceFieldController,\n  Show,\n  SimpleShowLayout,\n  TextField,\n  FunctionField,\n  useTranslate,\n  ShowController,\n  ShowView,\n  ReferenceManyField,\n  TopToolbar,\n  EditButton,\n  ReferenceArrayField,\n  NumberField,\n} from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport { Add, Edit, Print, DeleteForever } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport SCGenerator from \"../../utils/generateSC\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport DNGenerator from \"../../utils/generateDN\";\n\nconst GET_DN = gql`\n  query deliveryNote($where: DeliveryNoteWhereUniqueInput!) {\n    deliveryNote(where: $where) {\n      id\n      code\n      invoice {\n        shipmentDate\n      }\n      items {\n        product {\n          code\n          nameEn\n        }\n        item {\n          expiryDate\n        }\n      }\n      salesOrder {\n        shop {\n          phone\n          deliverAddress\n          nameEn\n          customer {\n            code\n            nameEn\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ({ permissions, ...props }) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const history = useHistory();\n  console.log(\"DeliveryNote Show\", props);\n  const toEdit = () => {\n    const { id } = props;\n    history.push(`/DeliveryNote/${id}/edit`);\n  };\n  const toEditItem = (record) => () => {\n    console.log(\"record: \", record);\n    history.push(`/DeliveryItem/${record.id}/edit`, {\n      record,\n    });\n  };\n  const toDeleteItem = (record) => () => {\n    console.log(\"record: \", record);\n    history.push(`/DeliveryItem/${record.id}/delete`, {\n      record,\n    });\n  };\n  const toCreateItem = () => {\n    const { id } = props;\n    console.log(\"deliveryNote id : \", id);\n    history.push(\"/DeliveryItem/create\", {\n      record: { DeliveryNote: { id } },\n    });\n  };\n  const { loading, data: res } = useQuery(GET_DN, {\n    variables: { where: { id: props.id } },\n  });\n  if (res) {\n    console.log(\"res\", res.deliveryNote.salesOrder.state);\n  }\n\n  const isAdmin = permissions === \"admin\";\n  let isPaid = true;\n  if (res) {\n    isPaid = res && res.deliveryNote.salesOrder.state === \"PAID\";\n  }\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={4}>\n        <Typography variant=\"h6\">\n          {translate(\"common.information\")}&nbsp;\n          {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={toEdit}>\n              <Edit />\n              &nbsp;{translate(\"common.edit\")}\n            </Button>\n          ) : null}\n          {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={DNGenerator(res)} disabled={loading}>\n              <Print />\n              &nbsp;{translate(\"common.print\")}\n            </Button>\n          ) : null}\n        </Typography>\n        <ShowController title=\"Delivery Note Details\" {...props}>\n          {(controllerProps) => {\n            const label = controllerProps.record ? controllerProps.record.code : \"\";\n            const id = controllerProps.record ? controllerProps.record.id : \"\";\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/DeliveryNote\", label: \"Delivery Note\" },\n                { url: `/DeliveryNote/${id}/show`, label: `Details` },\n              ])\n            );\n            return (\n              <ShowView {...controllerProps}>\n                <SimpleShowLayout>\n                  <TextField label=\"Delivery No.\" source=\"code\" />\n                  <ReferenceField label=\"Shipment Date\" reference=\"Invoice\" source=\"invoice.id\">\n                    <DateField source=\"shipmentDate\" />\n                  </ReferenceField>\n                  <DateField source=\"createdAt\" />\n                  <DateField source=\"updatedAt\" />\n                </SimpleShowLayout>\n              </ShowView>\n            );\n          }}\n        </ShowController>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Customer</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceFieldController label=\"Customer\" reference=\"SalesOrder\" source=\"salesOrder.id\" link={false}>\n                {({ referenceRecord, ...props }) => (\n                  <ReferenceField resource=\"Customer\" basePath=\"/Customer\" source=\"shop.id\" reference=\"CustomerShop\" record={referenceRecord || {}} link=\"show\">\n                    <ReferenceField resource=\"Customer\" basePath=\"/Customer\" source=\"customer.id\" reference=\"Customer\" record={referenceRecord || {}} link=\"show\">\n                      <TextField source=\"nameChi\" />\n                    </ReferenceField>\n                  </ReferenceField>\n                )}\n              </ReferenceFieldController>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Sales Order</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceField label=\"Sales Order No.\" reference=\"SalesOrder\" source=\"salesOrder.id\" link=\"show\">\n                <TextField source=\"code\" />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Invoice</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceField label=\"Invoice No.\" reference=\"Invoice\" source=\"invoice.id\" link=\"show\">\n                <TextField source=\"code\" />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item container xs={5} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Products</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceFieldController label=\"Products\" reference=\"SalesOrder\" source=\"salesOrder.id\" link={false}>\n                {({ referenceRecord, ...props }) => (\n                  <ReferenceArrayField basePath=\"/SalesOrder\" resource=\"SalesOrderItem\" reference=\"SalesOrderItem\" source=\"productsIds\" record={referenceRecord || {}} addLabel={false}>\n                    <Datagrid>\n                      <ReferenceField label=\"#\" source=\"product.id\" reference=\"Product\" link={(item, referece) => `/Product/${item.product.id}/show`}>\n                        <TextField source=\"code\" label=\"Product No.\" />\n                      </ReferenceField>\n                      <ReferenceField label=\"Product Name\" source=\"product.id\" reference=\"Product\" link=\"show\">\n                        <BilingualField source=\"name\" />\n                      </ReferenceField>\n                      <TextField source=\"quantity\" />\n                    </Datagrid>\n                  </ReferenceArrayField>\n                )}\n              </ReferenceFieldController>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">\n          Packing\n          {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={toCreateItem}>\n              <Add />\n              &nbsp;{translate(\"common.create\")}\n            </Button>\n          ) : null}\n        </Typography>\n        <Show actions={<React.Fragment />} {...props}>\n          <ReferenceManyField reference=\"DeliveryItem\" target=\"deliveryNote\" addLabel={false}>\n            <Datagrid>\n              <TextField label=\"Box Num\" source=\"boxNum\" />\n              <ReferenceField label=\"Label\" source=\"item.id\" reference=\"InventoryItem\" link={false}>\n                <TextField source=\"label\" />\n              </ReferenceField>\n              <ReferenceField label=\"ExpiryDate\" source=\"item.id\" reference=\"InventoryItem\" link={false}>\n                <DateField source=\"expiryDate\" />\n              </ReferenceField>\n              <ReferenceField label=\"#\" source=\"product.id\" reference=\"Product\" link=\"show\">\n                <TextField source=\"code\" label=\"Product No.\" />\n              </ReferenceField>\n              <ReferenceField label=\"Product Name\" source=\"product.id\" reference=\"Product\" link=\"show\">\n                <BilingualField source=\"name\" />\n              </ReferenceField>\n              <FunctionField\n                render={(record) => (\n                  <Button color=\"primary\" size=\"small\" onClick={toEditItem(record)} disabled={isPaid}>\n                    <Edit />\n                    &nbsp;{translate(\"common.edit\")}\n                  </Button>\n                )}\n              />\n              <FunctionField\n                render={(record) => (\n                  <Button color=\"primary\" size=\"small\" onClick={toDeleteItem(record)} disabled={isPaid}>\n                    <DeleteForever />\n                    &nbsp;{translate(\"common.delete\")}\n                  </Button>\n                )}\n              />\n            </Datagrid>\n          </ReferenceManyField>\n        </Show>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_CUSTOMER = gql`\n  query customers($where: CustomerWhereInput) {\n    customers(where: $where) {\n      code\n      id\n      nameEn\n      nameChi\n      wholesalePlan\n    }\n  }\n`;\n\nexport default function CustomerAutocomplete({\n  onChange,\n  value: initialValue,\n}) {\n  const translate = useTranslate();\n  const { loading: fetching, data } = useQuery(GET_CUSTOMER, {\n    variables: { state: \"APPROVED\" },\n  });\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const [options, setOptions] = useState([]);\n  const loading = fetching || (open && options.length === 0);\n  useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      setOptions(\n        data.customers.map((obj) => ({ id: obj.id, name: obj.nameChi }))\n      );\n    }\n  }, [loading, data]);\n\n  const [value, setValue] = useState(initialValue);\n  useEffect(() => {\n    if (initialValue) {\n      setValue({ id: initialValue.id, name: initialValue.nameChi });\n    }\n  }, [initialValue]);\n\n  const handleChange = (evt, value) => {\n    setValue(value);\n    onChange(data.customers.find((o) => o.id === value.id));\n  };\n\n  return (\n    <Autocomplete\n      id=\"purchase-order-autocomplete\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionSelected={(option, v) => {\n        return option.id === v;\n      }}\n      getOptionLabel={(option) => {\n        return option.name;\n      }}\n      options={options}\n      loading={loading}\n      value={value}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={translate(\"customer.customer\")}\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport {\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  EditButton,\n  DeleteButton,\n  TextField,\n  DateField,\n  ReferenceField,\n  FormDataConsumer,\n  ReferenceInput,\n  SelectInput,\n  FunctionField,\n  useGetOne,\n} from \"react-admin\";\n\nimport DeliveryNoteCreate from \"./Create\";\nimport DeliveryNoteShow from \"./Show\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport { useTranslate } from \"react-admin\";\nimport CustomerAutocomplete from \"../../components/Inputs/CustomerAutocomplete\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport { DeliveryNoteCreate, DeliveryNoteShow };\n\nconst redirect = () => \"/DeliveryNote\";\nconst breadcrumbBase = { url: \"/DeliveryNote\", label: \"DeliveryNote\" };\n\nexport const DeliveryNoteEdit = (props) => {\n  console.log(props);\n  const dispatch = useDispatch();\n\n  return (\n    <Edit {...props}>\n      <SimpleForm redirect={redirect}>\n        <ReferenceInput label=\"Invoice\" source=\"invoice.id\" reference=\"Invoice\">\n          <SelectInput optionText=\"code\" label=\"Invoice No.\" />\n        </ReferenceInput>\n\n        <ReferenceField\n          label=\"Sales Order\"\n          reference=\"Invoice\"\n          source=\"invoice.id\"\n        >\n          <ReferenceField reference=\"SalesOrder\" source=\"salesOrder.id\">\n            <TextField source=\"code\" label=\"Sales Order No.\" />\n          </ReferenceField>\n        </ReferenceField>\n\n        <ReferenceField\n          label=\"CustomerShop\"\n          reference=\"SalesOrder\"\n          source=\"salesOrder.id\"\n        >\n          <ReferenceField\n            reference=\"CustomerShop\"\n            source=\"shop.id\"\n            link={(shop, referece) => `/CustomerShop/${shop.shop.id}/show`}\n          >\n            <BilingualField source=\"name\" />\n          </ReferenceField>\n        </ReferenceField>\n        <ReferenceField\n          label=\"Customer\"\n          reference=\"SalesOrder\"\n          source=\"salesOrder.id\"\n        >\n          <ReferenceField source=\"shop.id\" reference=\"CustomerShop\">\n            <ReferenceField\n              source=\"customer.id\"\n              reference=\"Customer\"\n              link={(shop, referece) => `/Customer/${shop.customer.id}/show`}\n            >\n              <BilingualField source=\"name\" />\n            </ReferenceField>\n          </ReferenceField>\n        </ReferenceField>\n\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                breadcrumbBase,\n                {\n                  url: `/DeliveryNote/${formData.id}`,\n                  label: `Edit: ${formData.name}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nconst StatusButton = ({ record, props, permissions }) => {\n  const { data, loaded } = useGetOne(\"SalesOrder\", record.salesOrder.id);\n  let isPaid = true;\n  if (data) {\n    isPaid = data.state === \"PAID\";\n  }\n  return !isPaid ? (\n    <div>\n      <EditButton basePath={props.basePath} record={record} />\n      <DeleteButton\n        basePath={props.basePath}\n        record={record}\n        resource={props.resource}\n      />\n    </div>\n  ) : null;\n};\n\nexport const DeliveryNoteList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  console.log(props);\n  return (\n    <List {...props} sort={{ field: \"createdAt\", order: \"DESC\" }}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" />\n        <ReferenceField\n          label=\"Sales Order\"\n          reference=\"SalesOrder\"\n          source=\"salesOrder.id\"\n          link=\"show\"\n        >\n          <TextField source=\"code\" label=\"Sales Order No.\" />\n        </ReferenceField>\n        <ReferenceField\n          label=\"Invoice\"\n          reference=\"Invoice\"\n          source=\"invoice.id\"\n          link=\"show\"\n        >\n          <TextField source=\"code\" label=\"Invoice No.\" />\n        </ReferenceField>\n        <ReferenceField\n          label=\"Customer\"\n          reference=\"SalesOrder\"\n          source=\"salesOrder.id\"\n        >\n          <ReferenceField source=\"shop.id\" reference=\"CustomerShop\">\n            <ReferenceField\n              source=\"customer.id\"\n              reference=\"Customer\"\n              link={(shop, referece) => `/Customer/${shop.customer.id}/show`}\n            >\n              <BilingualField source=\"name\" />\n            </ReferenceField>\n          </ReferenceField>\n        </ReferenceField>\n\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n\n        <FunctionField\n          render={(record) => (\n            <StatusButton\n              record={record}\n              props={props}\n              // permissions={permissions}\n            />\n          )}\n        />\n      </Datagrid>\n    </List>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SaveButton, Toolbar, useCreate, useNotify, Create, SimpleForm, AutocompleteInput, NumberInput, ReferenceInput, SelectInput, Edit, FormDataConsumer, useTranslate } from 'react-admin';\nimport { useFormState } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { addBreadcrumbs } from '../../redux/breadcrumbs';\nimport { Grid, Container } from '@material-ui/core';\nimport ShowText from \"../../components/Shows/ShowText\";\nimport ItemAutocomplete from \"../DeliveryNote/Create/ItemAutocomplete\";\nimport { useLocation } from 'react-router-dom';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport TextField from '@material-ui/core/TextField';\n\n\nconst UPDATEDELIVERY = gql`\n    mutation updateDeliveryNote($data: DeliveryNoteUpdateInput!, $where: DeliveryNoteWhereUniqueInput!) {\n        updateDeliveryNote(data: $data, where: $where) {\n        id\n      }\n    }\n  `;\n\nexport const DeliveryItemEdit = (props) => {\n    const notify = useNotify();\n    const [updateDeliveryNote] = useMutation(UPDATEDELIVERY);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const record = location.state.record;\n    const [selectedProduct, setSelectedProduct] = useState();\n\n    const EditSaveButton = (props) => {\n        const handleClick = () => {\n            updateDeliveryNote({\n                variables: {\n                    where: {\n                        id: record.deliveryNote.id\n                    },\n                    data: {\n                        items: {\n                            update: {\n                                where: { id: record.id },\n                                data: { itemId: selectedProduct.itemId, productId: selectedProduct.id, boxNum: selectedProduct.boxNum }\n                            }\n                        }\n                    }\n                },\n            })\n                .then((value) => {\n                    console.log(\"res\", value);\n                    notify(`Save Success.`);\n                    redirect()\n                })\n                .catch((error) => {\n                    notify(`Error: ${error.message}`, \"warning\");\n                });\n        }\n\n        return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n    };\n\n    const DeliveryEditItemToolbar = (props) => (\n        <Toolbar {...props}>\n            <EditSaveButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n        </Toolbar>\n    );\n\n    const OptionRenderer = (choice) => `${choice.record.code} ${choice.record.nameChi}`;\n\n    const inputText = (record) => () => {\n        setSelectedProduct(record);\n        return `${record.code} ${record.nameChi}`;\n    };\n\n    const searchProduct = (searchText) => ({\n        code_contains: searchText,\n    });\n\n    const redirect = () => {\n        return history.go(-1);\n    };\n\n    const handleOnChange = (value) => {\n        selectedProduct.itemId = value.id;\n    }\n\n    const renderLable = () => {\n        const tempProduct = {\n            id: selectedProduct.id,\n            product: {\n                id: selectedProduct.id,\n                code: selectedProduct.code\n            }\n        }\n        return (\n            <Grid container direction=\"column\" style={{ width: 280 }}>\n                <ShowText label=\"Select lable\">\n                    <ItemAutocomplete onChange={handleOnChange} placeholder=\"Label\" products={[tempProduct]} />\n                </ShowText>\n            </Grid>\n        )\n    }\n    const onNumberChange = (event) => {\n        selectedProduct.boxNum = parseInt(event.target.value)\n    }\n\n    return (\n        <Edit actions={<React.Fragment />} {...props}>\n            <SimpleForm variant=\"standard\" redirect={redirect} toolbar={<DeliveryEditItemToolbar />}>\n                <ReferenceInput filterToQuery={searchProduct} label=\"Product\" source=\"product.id\" reference=\"Product\">\n                    <AutocompleteInput disabled optionText={<OptionRenderer />} label=\"DeliveryNote\" inputText={inputText} matchSuggestion={(filterValue, suggestion) => true} options={{ style: { width: 500 } }} />\n                </ReferenceInput>\n                {selectedProduct && renderLable()}\n                <ShowText label=\"BoxNum\">\n                    <TextField type=\"number\" onChange={onNumberChange} placeholder=\"BoxNumber\" />\n                </ShowText>\n                <FormDataConsumer>\n                    {({ formData }) => {\n                        dispatch(addBreadcrumbs({ url: `/DeliveryItem/${formData.id}`, label: `Edit` }));\n                        return null;\n                    }}\n                </FormDataConsumer>\n            </SimpleForm>\n        </Edit>\n    );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SaveButton, Toolbar, useCreate, useNotify, Create, SimpleForm, AutocompleteInput, NumberInput, ReferenceInput, SelectInput, Edit, FormDataConsumer, useTranslate } from 'react-admin';\nimport { useFormState } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { addBreadcrumbs } from '../../../redux/breadcrumbs';\nimport { Grid } from '@material-ui/core';\nimport ShowText from \"../../../components/Shows/ShowText\";\nimport ItemAutocomplete from \"../../DeliveryNote/Create/ItemAutocomplete\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst CREATE_DELIVERY_ITEM = gql`\n    mutation createDeliveryItem($data: DeliveryItemCreateInput!) {\n        createDeliveryItem(data: $data) {\n        id\n      }\n    }\n  `;\n\nconst SaveItemButton = (props) => {\n    const [createDeliveryItem] = useMutation(CREATE_DELIVERY_ITEM);\n    const [create] = useCreate('DeliveryItem');\n    const history = useHistory();\n    const notify = useNotify();\n    const formState = useFormState();\n\n    const redirect = () => {\n        return history.go(-1);\n    };\n\n    const handleClick = useCallback(() => {\n        if (!formState.valid) {\n            return;\n        }\n        const { product, boxNum, DeliveryNote, itemId, label, ...formValues } = formState.values;\n        createDeliveryItem({\n            variables: {\n                data: {\n                    deliveryNote: {\n                        connect: {\n                            id: DeliveryNote.id\n                        }\n                    },\n                    productId: product.id,\n                    itemId,\n                    boxNum\n                }\n            }\n        })\n            .then((value) => {\n                console.log(\"res\", value);\n                notify(`Save Success.`);\n                redirect()\n            })\n            .catch((error) => {\n                notify(`Error: ${error.message}`, \"warning\");\n            });\n\n        // create(\n        //     {\n        //         payload: {\n        //             data: {\n        //                 deliveryNote: {\n        //                     connect: {\n        //                         id: DeliveryNote.id\n        //                     }\n        //                 },\n        //                 productId: product.id,\n        //                 itemId: itemId,\n        //                 boxNum: boxNum\n        //             },\n        //         },\n        //     },\n        //     {\n        //         onSuccess: ({ data: newRecord }) => {\n        //             notify('ra.notification.created', 'info', {\n        //                 smart_count: 1,\n        //             });\n        //             redirect();\n        //         },\n        //     }\n        // );\n    }, [formState.valid, formState.values, create, notify, redirect]);\n\n    return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n};\n\nconst DeliveryItemCreateToolbar = (props) => (\n    <Toolbar {...props}>\n        <SaveItemButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n    </Toolbar>\n);\n\nexport function DeliveryItemCreate(props) {\n    const [selectedProduct, setSelectedProduct] = useState();\n    const dispatch = useDispatch();\n\n    dispatch(addBreadcrumbs({ url: '/DeliveryItem/create', label: 'Add New Delivery Item' }));\n\n    const searchProduct = (searchText) => ({\n        code_contains: searchText,\n    });\n\n    const inputText = (record) => () => {\n        setSelectedProduct(record);\n        return `${record.code} ${record.nameChi}`;\n    };\n    const handleChange = (formData) => (inventoryItem) => {\n        formData.itemId = inventoryItem.id\n        formData.label = inventoryItem.label\n    }\n\n    const OptionRenderer = (choice) => `${choice.record.code} ${choice.record.nameChi}`;\n\n    const renderInput = () => {\n        return (\n            <FormDataConsumer>\n                {({ formData, ...rest }) => {\n                    formData.quantity = selectedProduct.quantity;\n                    formData.price = selectedProduct.cost;\n                    const tempProduct = {\n                        id: selectedProduct.id,\n                        quantity: selectedProduct.quantity,\n                        product: {\n                            id: selectedProduct.id,\n                            code: selectedProduct.code\n                        }\n                    }\n                    return (\n                        <Grid container direction=\"column\" style={{ width: 280 }}>\n                            <ShowText label=\"Select lable\">\n                                <ItemAutocomplete onChange={handleChange(formData)} placeholder=\"Label\" products={[tempProduct]} />\n                            </ShowText>\n                            <NumberInput source=\"boxNum\" label=\"boxNum\" />\n                        </Grid>\n                    );\n                }}\n            </FormDataConsumer>\n        );\n    };\n\n\n    return (\n        <Create {...props}>\n            <SimpleForm toolbar={<DeliveryItemCreateToolbar />} variant=\"standard\">\n                <ReferenceInput label=\"DeliveryNote\" source=\"DeliveryNote.id\" reference=\"DeliveryNote\">\n                    <SelectInput disabled optionText=\"id\" label=\"DeliveryNote No.\" />\n                </ReferenceInput>\n                <ReferenceInput filterToQuery={searchProduct} label=\"Product\" source=\"product.id\" reference=\"Product\">\n                    <AutocompleteInput optionText={<OptionRenderer />} label=\"DeliveryNote\" inputText={inputText} matchSuggestion={(filterValue, suggestion) => true} options={{ style: { width: 500 } }} />\n                </ReferenceInput>\n                {selectedProduct && renderInput()}\n            </SimpleForm>\n        </Create>\n    );\n}","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_SALES_ORDER = gql`\n  query salesOrders($where: SalesOrderWhereInput) {\n    salesOrders(where: $where, orderBy: updatedAt_DESC) {\n      id\n      code\n      shop {\n        id\n        code\n        nameEn\n        nameChi\n        deliveryDay\n        customer {\n          id\n          nameEn\n          nameChi\n        }\n      }\n      products {\n        id\n        quantity\n        price\n        totalPrice\n        product {\n          code\n          nameEn\n          nameChi\n        }\n      }\n      grandTotal\n      state\n    }\n  }\n`;\n\nexport default function SalesOrderAutocomplete({\n  onChange,\n  defaultValue,\n  where = {},\n}) {\n  const translate = useTranslate();\n  console.log(\"where\", where);\n  const { loading: fetching, data } = useQuery(GET_SALES_ORDER, where);\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = fetching || (open && options.length === 0);\n\n  React.useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      const { salesOrders } = data;\n      setOptions(\n        salesOrders\n          .filter((obj) => !!obj)\n          .map((obj) => ({ id: obj.id, name: obj.code }))\n      );\n    }\n  }, [loading, data]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleChange = (evt, value) => {\n    const { salesOrders } = data;\n    onChange(\n      salesOrders.filter((obj) => !!obj).find((po) => po.id === value.id)\n    );\n  };\n\n  return (\n    <Autocomplete\n      id=\"sales-order-autocomplete\"\n      style={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionLabel={(option) => option.name}\n      options={options}\n      loading={loading}\n      value={defaultValue && { id: defaultValue.id, name: defaultValue.code }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={translate(\"salesOrder.salesOrder\")}\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useTranslate, NumberField } from \"react-admin\";\nimport SalesOrderAutocomplete from \"../../../components/Inputs/SalesOrderAutocomplete\";\nimport ShowText from \"../../../components/Shows/ShowText\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport BilingualField from \"../../../components/BilingualField\";\n\nfunction SalesOrderSelector({ formData, setFormData }) {\n  const translate = useTranslate();\n\n  const handleSelect = (salesOrder) => {\n    setFormData({\n      ...formData,\n      salesOrderCode: salesOrder.code,\n      salesOrderId: salesOrder.id,\n      totalPrice: salesOrder.grandTotal,\n      contactPerson: salesOrder.contactPerson,\n      customerShop: salesOrder.shop,\n      salesOrder,\n    });\n  };\n\n  const renderSalesOrderDetails = () => {\n    const { salesOrder } = formData;\n    const { products } = salesOrder;\n    return (\n      <React.Fragment>\n        <Grid item xs={12} sm={6}>\n          <ShowText label=\"Shop\">{salesOrder.shop.code}</ShowText>\n          <ShowText label={translate(\"salesOrder.customer\")}>\n            {salesOrder.shop.customer.nameChi}\n          </ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate(\"salesOrder.totalPrice\")}>\n            <NumberField\n              source=\"totalPrice\"\n              record={salesOrder}\n              options={{ style: \"currency\", currency: \"HKD\" }}\n            />\n          </ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate(\"salesOrder.state\")}>\n            {salesOrder.state}\n          </ShowText>\n        </Grid>\n        <Grid item xs={12}>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>{translate(\"product.code\")}</TableCell>\n                <TableCell>{translate(\"product.name\")}</TableCell>\n                <TableCell align=\"right\">\n                  {translate(\"shipping.quantityCheck\")}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {translate(\"shipping.status\")}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {translate(\"invoice.totalPrice\")}\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {products.map((row, i) => {\n                return (\n                  <TableRow key={row.id}>\n                    <TableCell>{row.product.code}</TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <BilingualField source=\"name\" record={row.product} />\n                    </TableCell>\n                    <TableCell align=\"right\">{row.quantity}</TableCell>\n                    <TableCell align=\"right\">\n                      <NumberField\n                        source=\"price\"\n                        record={row}\n                        options={{ style: \"currency\", currency: \"HKD\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <NumberField\n                        source=\"totalPrice\"\n                        record={row}\n                        options={{ style: \"currency\", currency: \"HKD\" }}\n                      />\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Grid>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={6}>\n        <SalesOrderAutocomplete\n          where={{ variables: { where: { state: \"CONFIRMED\" } } }}\n          onChange={handleSelect}\n          defaultValue={formData.salesOrder}\n        />\n      </Grid>\n      {formData.salesOrder && renderSalesOrderDetails()}\n    </Grid>\n  );\n}\n\nSalesOrderSelector.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n};\n\nexport default SalesOrderSelector;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { useTranslate, NumberField } from 'react-admin';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Grid from '@material-ui/core/Grid';\nimport TableRow from '@material-ui/core/TableRow';\nimport ShowText from '../../../components/Shows/ShowText';\nimport BilingualField from '../../../components/BilingualField';\n\nfunction Review({ formData }) {\n  const translate = useTranslate();\n  const { salesOrder } = formData;\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        {translate('invoice.invoice')}\n      </Typography>\n      <Grid container>\n        <Grid item xs={12} sm={4}>\n          <ShowText label={translate('invoice.code')}>{formData.code}</ShowText>\n        </Grid>\n\n        <Grid item xs={12} sm={4}>\n          <ShowText label={translate('invoice.customer')}>\n            <BilingualField source=\"name\" record={salesOrder.shop.customer} />\n          </ShowText>\n        </Grid>\n\n        <Grid item xs={12} sm={4}>\n          <ShowText label=\"Shop\" >\n            <BilingualField source=\"name\" record={salesOrder.shop} />\n          </ShowText>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <ShowText label={translate('invoice.state')}>{formData.state}</ShowText>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <ShowText label={translate('invoice.salesOrderCode')}>{formData.salesOrderCode}</ShowText>\n        </Grid>\n        <Grid item xs={12}>\n          <Table aria-label=\"spanning table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\" colSpan={3}>\n                  Details\n                </TableCell>\n                <TableCell align=\"right\">Price</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Description</TableCell>\n                <TableCell align=\"right\">Qty.</TableCell>\n                <TableCell align=\"right\">Unit</TableCell>\n                <TableCell align=\"right\">Total/(HKD)</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                salesOrder.products && salesOrder.products.map(product => {\n                  return (\n                    <TableRow key={product.id}>\n                      <TableCell>\n                        <BilingualField source=\"name\" record={product.product} />\n                      </TableCell>\n                      <TableCell align=\"right\">{product.quantity}</TableCell>\n                      <TableCell align=\"right\">\n                        <NumberField source=\"price\" record={product} options={{ style: 'currency', currency: 'HKD' }} />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <NumberField source=\"totalPrice\" record={product} options={{ style: 'currency', currency: 'HKD' }} />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })\n              }\n              <TableRow>\n                <TableCell colSpan={3}>Total</TableCell>\n                <TableCell align=\"right\">\n                  <NumberField source=\"totalPrice\" record={formData} options={{ style: 'currency', currency: 'HKD' }} />\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Review;\n;","import React, { useEffect } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useTranslate, usePermissions } from \"react-admin\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport dayjs from \"dayjs\";\n\nfunction BasicForm({ formData, setFormData }) {\n  const translate = useTranslate();\n  const { loaded, permissions } = usePermissions();\n  let minDate;\n  let defaultDay = dayjs();\n  let selectedDay;\n  const week = formData.salesOrder.shop.deliveryDay;\n\n  if (![\"admin\"].includes(permissions)) {\n    minDate = new Date();\n    //check hours\n    if (minDate.getHours() >= 16) {\n      defaultDay = dayjs().add(1, \"day\").set(\"hour\", 9);\n      minDate.setDate(minDate.getDate() + 1);\n    }\n\n    // check customer shippment week\n    const matchCaseWeek = week.filter((day) => {\n      const currentDay = defaultDay.day();\n      return currentDay <= day;\n    });\n\n    // auto force to next week\n    if (matchCaseWeek.length == 0) {\n      const nextWeekDay = week.map((day) => day + 6 + 1);\n      defaultDay = dayjs().day(nextWeekDay[0]);\n    } else {\n      defaultDay = dayjs().day(matchCaseWeek[0]);\n    }\n  }\n  useEffect(() => {\n    setFormData({ ...formData, shipmentDate: defaultDay.toISOString() });\n  }, defaultDay);\n  console.log(formData.shipmentDate);\n\n  return (\n    <form noValidate>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <DatePicker\n            minDate={minDate}\n            format=\"ddd DD MMM YYYY\"\n            views={[\"year\", \"month\", \"date\"]}\n            inputVariant=\"filled\"\n            fullWidth\n            value={formData.shipmentDate ? formData.shipmentDate : defaultDay}\n            label={translate(\"invoice.shipmentDate\")}\n            onChange={(newDate) =>\n              setFormData({ ...formData, shipmentDate: newDate.toISOString() })\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            variant=\"filled\"\n            fullWidth\n            value={formData.code}\n            label={translate(\"invoice.code\")}\n            onChange={(e) => setFormData({ ...formData, code: e.target.value })}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl variant=\"filled\" fullWidth>\n            <InputLabel id=\"form-state\">\n              {translate(\"invoice.state\")}\n            </InputLabel>\n            <Select\n              labelId={\"state\"}\n              label=\"form-state\"\n              value={formData.state || \"APPROVED\"}\n              onChange={(e) =>\n                setFormData({ ...formData, state: e.target.value })\n              }\n            >\n              {[\n                { id: \"DRAFT\", name: translate(\"common.draft\") },\n                { id: \"APPROVED\", name: translate(\"common.approved\") },\n                { id: \"CONFIRMED\", name: translate(\"common.confirmed\") },\n                { id: \"DELETED\", name: translate(\"common.deleted\") },\n              ].map((d) => (\n                <MenuItem key={`POSelect${d.id}`} value={d.id}>\n                  {d.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default BasicForm;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslate, useNotify } from \"react-admin\";\nimport { useHistory } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport SalesOrderSelector from \"./SalesOrderSelector\";\nimport Review from \"./Review\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport BasicForm from \"./BasicForm\";\nimport sequentialNumber from \"../../../utils/sequentialNumber\";\nimport dayjs from \"dayjs\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../../redux/breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(2) * 2)]: {\n      width: 1024,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst GET_LAST_INVOICE = gql`\n  query getLastInvoice {\n    invoices(orderBy: createdAt_DESC, first: 1) {\n      id\n      code\n    }\n  }\n`;\n\nconst ADD_INVOICE = gql`\n  mutation createInvoice($data: InvoiceCreateInput!) {\n    createInvoice(data: $data) {\n      id\n      code\n    }\n  }\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const classes = useStyles();\n  const history = useHistory();\n  const [addInvoice] = useMutation(ADD_INVOICE);\n  const [activeStep, setActiveStep] = useState(0);\n  const initialValues = {\n    code: \"IV001\",\n    salesOrderCode: \"\",\n    salesOrderId: \"\",\n    salesOrder: null,\n    contactPerson: \"\",\n    totalPrice: 0,\n    state: \"CONFIRMED\",\n  };\n  const [formData, setFormData] = useState(initialValues);\n\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/Invoice\", label: \"Invoice\" },\n      { url: \"/Invoice/create\", label: \"Create New\" },\n    ])\n  );\n\n  // getting new invoice number\n  const { data: lastInvoice } = useQuery(GET_LAST_INVOICE);\n  useEffect(() => {\n    if (\n      lastInvoice &&\n      lastInvoice.invoices.length > 0 &&\n      formData.code === \"IV001\"\n    ) {\n      const last = lastInvoice.invoices[0];\n      setFormData({\n        ...formData,\n        code: sequentialNumber.numberAfter(last.code),\n      });\n    }\n  }, [lastInvoice, formData]);\n\n  const steps = [\n    translate(\"invoice.selectSalesOrder\"),\n    translate(\"invoice.invoiceDetails\"),\n    translate(\"invoice.review\"),\n  ];\n  const notify = useNotify();\n  const handleSave = () => {\n    const data = {\n      code: formData.code,\n      salesOrderId: formData.salesOrderId,\n      totalPrice: formData.totalPrice,\n      shipmentDate: formData.shipmentDate,\n      state: formData.state,\n      paymentStatus: \"UNPAID\",\n    };\n    addInvoice({ variables: { data } })\n      .then(() => {\n        history.push(\"/Invoice\");\n      })\n      .catch((error) => {\n        notify(`Error: ${error.message}`, \"warning\");\n      });\n  };\n\n  const handleNext = () => {\n    if (formData.salesOrderId === \"\" || formData.code === \"\") {\n      notify(`Error : Please fill all field.`, \"warning\");\n    } else {\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        <React.Fragment>\n          {activeStep === 0 && (\n            <SalesOrderSelector formData={formData} setFormData={setFormData} />\n          )}\n          {activeStep === 1 && (\n            <BasicForm formData={formData} setFormData={setFormData} />\n          )}\n          {activeStep === 2 && <Review formData={formData} />}\n\n          <div className={classes.buttons}>\n            {activeStep > 0 && (\n              <Button onClick={handleBack} color=\"primary\">\n                {translate(\"common.prev\")}\n              </Button>\n            )}\n            {activeStep < steps.length - 1 && (\n              <Button onClick={handleNext} color=\"primary\">\n                {translate(\"common.next\")}\n              </Button>\n            )}\n            {activeStep === steps.length - 1 && (\n              <Button onClick={handleSave} color=\"primary\">\n                {translate(\"common.confirm\")}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      </Paper>\n    </main>\n  );\n};\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport T2W from \"numbers2words\";\nimport capitalizeFirstLetter from \"./capitalizeFirstLetter\";\nimport dayjs from \"dayjs\";\nconst INVGenerator = (dataArray) => () => {\n  const invoice = dataArray.invoice;\n  console.log(\"invoice\", invoice);\n  var now = dayjs();\n  var translator = new T2W(\"EN_US\");\n  let data = [];\n  let col = [\n    { dataKey: \"count\", header: \"Item\" },\n    { dataKey: \"no\", header: \"Product No\" },\n    { dataKey: \"des\", header: \"Description\" },\n    { dataKey: \"qty\", header: \"Qty\" },\n    { dataKey: \"price\", header: \"Price\" },\n    { dataKey: \"amount\", header: \"Amount\" },\n  ];\n\n  var doc = new jsPDF(\"p\", \"pt\");\n  doc.page = 1;\n  var totalPagesExp = \"{total_pages_count_string}\";\n  var width = doc.internal.pageSize.getWidth();\n  var height = doc.internal.pageSize.getHeight();\n\n  var header = function () {\n    var str = doc.internal.getNumberOfPages().toString();\n    if (typeof doc.putTotalPages === \"function\") {\n      str = str + \" of \" + totalPagesExp;\n    }\n    doc.setFontSize(23);\n    doc.setFontStyle(\"bold\");\n    doc.text(width - 150, 50, \"INVOICE\");\n\n    doc.setFontSize(10);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 100, \"Bill To:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 100, invoice.salesOrder.shop.nameEn);\n    doc.text(100, 115, invoice.salesOrder.shop.deliverAddress);\n    doc.text(100, 130, \"\");\n    doc.text(100, 145, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 165, \"Attn:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 165, invoice.salesOrder.shop.customer.nameEn);\n    doc.setFontStyle(\"bold\");\n    doc.text(50, 180, \"Tel:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(100, 180, invoice.salesOrder.shop.phone ? invoice.salesOrder.shop.phone.toString() : \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(200, 180, \"Fax:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(250, 180, invoice.salesOrder.shop.phone ? invoice.salesOrder.shop.phone.toString() : \"\");\n\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 100, \"Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 100, now.format(\"DD/MMM/YYYY\"));\n\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 115, \"REF. No.:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 115, invoice.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 130, \"Cust. ID:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 130, invoice.salesOrder.shop.customer.code);\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 145, \"Pay term:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 145, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 160, \"Ship Date:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 160, dayjs(invoice.shipmentDate).format(\"DD/MMM/YYYY\"));\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 175, \"Salesman:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 175, \"\");\n    doc.setFontStyle(\"bold\");\n    doc.text(350, 190, \"Page:\");\n    doc.setFontStyle(\"normal\");\n    doc.text(410, 190, str);\n\n    doc.setLineWidth(1.5);\n    doc.setDrawColor(0, 0, 0);\n    doc.line(50, 200, width - 50, 200);\n    doc.line(50, 220, width - 50, 220);\n  };\n\n  var footer = function () {\n    doc.setFontSize(7);\n    doc.text(width - 40, height - 30, \"Page - \" + doc.page);\n    doc.page++;\n  };\n\n  var options = {\n    beforePageContent: header,\n    afterPageContent: footer,\n    theme: \"striped\",\n    columnStyles: {\n      count: { columnWidth: 30 },\n      no: { columnWidth: 70 },\n      des: { columnWidth: 270 },\n      qty: { columnWidth: 30 },\n      price: { columnWidth: 40 },\n      amount: { columnWidth: 50, halign: \"right\" },\n    },\n\n    headStyles: { fillColor: false, textColor: \"black\" },\n    style: { cellWidth: \"auto\" },\n    margin: { top: 200, bottom: 100, horizontal: 50 },\n  };\n\n  invoice.salesOrder.products.map((item, index) => {\n    let b = {\n      count: index + 1,\n      no: item.product.code,\n      des: item.product.nameEn,\n      qty: item.quantity,\n      price: item.price,\n      amount: item.totalPrice,\n    };\n    data.push(b);\n  });\n\n  doc.autoTable(col, data, options);\n  doc.setFontSize(10);\n  doc.setFontStyle(\"normal\");\n  doc.text(412, doc.autoTable.previous.finalY + 12, \"Sub-total :\");\n  doc.text(width - 53 - 5 * invoice.salesOrder.subtotal.toFixed(1).toString().length, doc.autoTable.previous.finalY + 12, invoice.salesOrder.subtotal.toFixed(1).toString());\n  doc.text(376, doc.autoTable.previous.finalY + 27, \"Discount Amount :\");\n  doc.text(width - 47 - 5 * (invoice.salesOrder.discountAmount.toFixed(1).toString().length + 1), doc.autoTable.previous.finalY + 27, invoice.salesOrder.discountAmount.toFixed(1).toString());\n  doc.text(400, doc.autoTable.previous.finalY + 47, \"Grand Total :\");\n  doc.text(width - 53 - 5 * invoice.salesOrder.grandTotal.toFixed(1).toString().length, doc.autoTable.previous.finalY + 47, invoice.salesOrder.grandTotal.toFixed(1).toString());\n\n  if (invoice.salesOrder.grandTotal === parseInt(invoice.salesOrder.grandTotal, 10)) {\n    doc.text(50, doc.autoTable.previous.finalY + 70, \"Say: Hong Kong Dollar \" + capitalizeFirstLetter(translator.toWords(invoice.salesOrder.grandTotal)) + \" ONLY.\");\n  } else {\n    const strings = invoice.salesOrder.grandTotal.toFixed(1).toString().split(\".\");\n    doc.text(50, doc.autoTable.previous.finalY + 70, \"Say: Hong Kong Dollar \" + capitalizeFirstLetter(translator.toWords(parseInt(strings[0]))) + \" And \" + capitalizeFirstLetter(translator.toWords(parseInt(strings[1] * 10))) + \" CENTS ONLY.\");\n  }\n  doc.setFontStyle(\"bold\");\n  doc.text(50, doc.autoTable.previous.finalY + 87, \"Shipterm :\");\n  doc.setFontStyle(\"normal\");\n  doc.text(100, doc.autoTable.previous.finalY + 87, \"Standard Delivery\");\n  doc.setLineWidth(1);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(455, doc.autoTable.previous.finalY, width - 50, doc.autoTable.previous.finalY);\n  doc.line(455, doc.autoTable.previous.finalY + 33, width - 50, doc.autoTable.previous.finalY + 33);\n  doc.line(455, doc.autoTable.previous.finalY + 50, width - 50, doc.autoTable.previous.finalY + 50);\n  doc.line(455, doc.autoTable.previous.finalY + 52, width - 50, doc.autoTable.previous.finalY + 52);\n  doc.setLineWidth(1.5);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(50, doc.autoTable.previous.finalY + 76, width - 50, doc.autoTable.previous.finalY + 76);\n  doc.line(50, doc.autoTable.previous.finalY + 91, width - 50, doc.autoTable.previous.finalY + 91);\n  doc.setFillColor(255, 255, 255);\n  doc.rect(90, doc.autoTable.previous.finalY + 110, 430, 150, \"FD\");\n  doc.setFontStyle(\"bold\");\n  doc.text(280, doc.autoTable.previous.finalY + 128, \"REMARK\");\n  doc.setLineWidth(1);\n  doc.line(100, doc.autoTable.previous.finalY + 134, 510, doc.autoTable.previous.finalY + 134);\n  doc.line(100, doc.autoTable.previous.finalY + 248, 510, doc.autoTable.previous.finalY + 248);\n  doc.text(100, doc.autoTable.previous.finalY + 145, \"Payment Method: Cheque or Bank-In\");\n  doc.text(100, doc.autoTable.previous.finalY + 157, \"Account Name: Petgo Trading Limited\");\n  doc.text(100, doc.autoTable.previous.finalY + 169, \"Account No.: 741-149611-838\");\n  doc.text(100, doc.autoTable.previous.finalY + 181, \"Bank Name: HSBC Hong Kong Bank Code: 004\");\n  doc.text(100, doc.autoTable.previous.finalY + 193, \"SWIFT: HSBCHKHHHKH\");\n  doc.text(100, doc.autoTable.previous.finalY + 205, \"*For Cheques, please write your Invoice No. on the back of the cheque.\");\n  doc.text(100, doc.autoTable.previous.finalY + 217, \"*For Bank-In, please provide the Bank-In Slip to Petgo Trading Limited.\");\n  doc.text(100, doc.autoTable.previous.finalY + 229, \"Cash\");\n  doc.text(100, doc.autoTable.previous.finalY + 241, \"Cash On Delivery.\");\n\n  if (typeof doc.putTotalPages === \"function\") {\n    doc.putTotalPages(totalPagesExp);\n  }\n  doc.save(\"InvoiceGen.pdf\");\n};\n\nexport default INVGenerator;\n","import { useHistory } from \"react-router-dom\";\nimport { DateField, NumberField, Datagrid, ReferenceField, Show, ReferenceArrayField, SimpleShowLayout, TextField, useTranslate, ReferenceManyField } from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport { Edit, Print } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport INVGenerator from \"../../utils/generateINV\";\nimport SCGenerator from \"../../utils/generateSC\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst GET_INVOICE = gql`\n  query invoice($where: InvoiceWhereUniqueInput!) {\n    invoice(where: $where) {\n      id\n      code\n      salesOrder {\n        id\n        code\n        title\n        remark\n        discountAmount\n        grandTotal\n        subtotal\n        state\n        userId\n        shop {\n          nameEn\n          deliverAddress\n          phone\n          customer {\n            id\n            code\n            nameEn\n          }\n        }\n        products {\n          id\n          totalPrice\n          product {\n            nameEn\n            id\n            code\n          }\n          price\n          quantity\n        }\n        createdAt\n        updatedAt\n      }\n      userId\n      state\n      paymentStatus\n      totalPrice\n      title\n      remark\n      shipmentDate\n      createdAt\n      updatedAt\n      paidAt\n    }\n  }\n`;\nexport const InvoiceShow = (props) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const history = useHistory();\n  const toEdit = () => {\n    const { basePath, id } = props;\n    history.push(`${basePath}/${id}/edit`);\n  };\n  const { loading, data } = useQuery(GET_INVOICE, {\n    variables: { where: { id: props.id } },\n  });\n  const label = data && data.invoice.code;\n  const id = data && data.invoice.id;\n  let isPaid = true;\n  if (data) {\n    isPaid = data.invoice.salesOrder.state === \"PAID\";\n  }\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/Invoice\", label: \"Invoice\" },\n      { url: `/Invoice/${id}/show`, label },\n    ])\n  );\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={9}>\n        <Typography variant=\"h6\">\n          Basic Information&nbsp;\n          {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={toEdit}>\n              <Edit />\n              &nbsp;{translate(\"common.edit\")}\n            </Button>\n          ) : null}\n          <Button color=\"primary\" size=\"small\" onClick={INVGenerator(data)} disabled={loading}>\n            <Print />\n            &nbsp;{translate(\"common.print\")}\n          </Button>\n        </Typography>\n        <Show actions={<React.Fragment />} x {...props}>\n          <SimpleShowLayout>\n            <TextField source=\"code\" label=\"Invoice No.\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n          </SimpleShowLayout>\n        </Show>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Total Price</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField source=\"totalPrice\" options={{ style: \"currency\", currency: \"HKD\" }} />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Shipment Date</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <DateField source=\"shipmentDate\" />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Sales Order</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceField label=\"Sales Order\" reference=\"SalesOrder\" source=\"salesOrder.id\" link=\"show\">\n                <TextField source=\"code\" label=\"Sales Order No.\" />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item container xs={12} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Items</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <ReferenceField label=\"Products\" reference=\"SalesOrder\" source=\"salesOrder.id\">\n              <ReferenceArrayField reference=\"SalesOrderItem\" source=\"productsIds\" addLabel={false}>\n                <Datagrid>\n                  <ReferenceField label=\"#\" source=\"product.id\" reference=\"Product\" link=\"show\">\n                    <TextField source=\"code\" label=\"Product No.\" />\n                  </ReferenceField>\n                  <ReferenceField label=\"Product Name\" source=\"product.id\" reference=\"Product\" link=\"show\">\n                    <BilingualField source=\"name\" />\n                  </ReferenceField>\n                  <NumberField source=\"price\" options={{ style: \"currency\", currency: \"HKD\" }} />\n                  <TextField source=\"quantity\" />\n                  <NumberField source=\"totalPrice\" options={{ style: \"currency\", currency: \"HKD\" }} />\n                </Datagrid>\n              </ReferenceArrayField>\n            </ReferenceField>\n          </Show>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  EditButton,\n  DeleteButton,\n  TextField,\n  NumberField,\n  DateField,\n  TextInput,\n  ReferenceField,\n  required,\n  DateInput,\n  SelectInput,\n  FormDataConsumer,\n  FunctionField,\n  useGetOne,\n} from \"react-admin\";\nimport InvoiceCreate from \"./Create\";\nimport { InvoiceShow } from \"./Show\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/Invoice\";\n\nexport { InvoiceCreate, InvoiceShow };\nconst breadcrumbBase = { url: \"/Invoice\", label: \"Invoice\" };\n\nexport const InvoiceEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Invoice No.\" />\n        <DateInput source=\"shipmentDate\" />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                breadcrumbBase,\n                {\n                  url: `/Invoice/${formData.id}`,\n                  label: `Edit: ${formData.code}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nconst StatusButton = ({ record, props, permissions }) => {\n  const { data, loaded } = useGetOne(\"SalesOrder\", record.salesOrder.id);\n  let isPaid = true;\n  if (data) {\n    isPaid = data.state === \"PAID\";\n  }\n  return !isPaid ? (\n    <div>\n      <EditButton basePath={props.basePath} record={record} />\n      <DeleteButton\n        basePath={props.basePath}\n        record={record}\n        resource={props.resource}\n      />\n    </div>\n  ) : null;\n};\n\nexport const InvoiceList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List\n      {...props}\n      filterDefaultValues={{ state_not: \"DELETED\" }}\n      sort={{ field: \"createdAt\", order: \"DESC\" }}\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Invoice No.\" />\n        <DateField source=\"shipmentDate\" />\n        <NumberField\n          source=\"totalPrice\"\n          options={{ style: \"currency\", currency: \"HKD\" }}\n        />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <FunctionField\n          render={(record) => (\n            <StatusButton\n              record={record}\n              props={props}\n              // permissions={permissions}\n            />\n          )}\n        />\n      </Datagrid>\n    </List>\n  );\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslate } from 'react-admin';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nfunction ProductListHeader({ onSort }) {\n  const translate = useTranslate();\n  const [orderBy, setOrderBy] = useState('id');\n  const [desc, setDesc] = useState(false);\n\n  const createOrderBy = (field) => () => {\n    if (field === orderBy) {\n      setDesc(!desc);\n    } else {\n      setOrderBy(field);\n      setDesc(false);\n    }\n    onSort(`${orderBy}_${desc ? 'DESC' : 'ASC'}`);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell />\n        <TableCell>\n          <TableSortLabel\n            active={orderBy === 'code'}\n            direction={desc ? 'desc' : 'asc'}\n            onClick={createOrderBy('code')}\n          >\n            {translate('product.code')}\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>\n          <TableSortLabel\n            active={orderBy === 'nameEn'}\n            direction={desc ? 'desc' : 'asc'}\n            onClick={createOrderBy('nameEn')}\n          >\n            {translate('product.name')}\n          </TableSortLabel>\n        </TableCell>\n        <TableCell align=\"right\">\n          <TableSortLabel\n            active={orderBy === 'quantity'}\n            direction={desc ? 'desc' : 'asc'}\n            onClick={createOrderBy('quantity')}\n          >\n            {translate('inventory.stock')}\n          </TableSortLabel>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n\nProductListHeader.propTypes = {\n  onSort: PropTypes.func.isRequired,\n};\n\nexport default ProductListHeader;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nexport default TablePaginationActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TablePaginationActions from './TablePaginationActions';\n\nfunction ProductListPagination({ totalRows, page, rowsPerPage, setPage, setRowsPerPage }) {\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableFooter>\n      <TableRow>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          colSpan={4}\n          count={totalRows}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          SelectProps={{\n            inputProps: { 'aria-label': 'rows per page' },\n            native: true,\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n          ActionsComponent={TablePaginationActions}\n        />\n      </TableRow>\n    </TableFooter>\n  );\n}\n\nProductListPagination.propTypes = {\n  totalRows: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n  setRowsPerPage: PropTypes.func.isRequired,\n};\n\nexport default ProductListPagination;","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslate } from \"react-admin\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { Search } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GET_PRODUCT_CATEGORIES = gql`\n  query getCategories {\n    productCategories {\n      id\n      nameEn\n      nameChi\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  title: {\n    flex: 1,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n  chips: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nfunction ProductListToolbar({ where, setWhere }) {\n  const translate = useTranslate();\n  const classes = useStyles();\n  const [code, setCode] = useState(\"\");\n  const [search, setSearch] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [timeConstraint, setTimeConstraint] = useState([]);\n  const { data } = useQuery(GET_PRODUCT_CATEGORIES);\n\n  const categories = data ? data.productCategories : [];\n\n  // if where is changed\n  useEffect(() => {\n    if (where.code_starts_with) {\n      setSearch(where.code_starts_with);\n    }\n\n    // TODO: filter categories\n\n    // TODO: filter time constraint\n  }, [where]);\n\n  // if element changed is changed\n  useEffect(() => {\n    const w = {};\n    if (search) {\n      w.code_starts_with = search;\n    }\n\n    // TODO: filter categories\n\n    // TODO: filter time constraint\n\n    setWhere(w);\n  }, [search, selectedCategories, timeConstraint, setWhere]);\n\n  const handleChangeCode = (e) => {\n    setCode(e.target.value);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setSearch(code);\n    setCode(\"\");\n  };\n\n  const handleOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const cancelSearch = () => {\n    setSearch(null);\n  };\n\n  const handleFilter = (field) => () => {\n    if (!timeConstraint.includes(field)) {\n      setTimeConstraint([...timeConstraint, field]);\n    } else {\n      timeConstraint.splice(timeConstraint.indexOf(field), 1);\n      setTimeConstraint([...timeConstraint]);\n    }\n  };\n\n  const handleFilterCat = (id) => () => {\n    if (!selectedCategories.includes(id)) {\n      setSelectedCategories([...selectedCategories, id]);\n    } else {\n      selectedCategories.splice(selectedCategories.indexOf(id), 1);\n      setSelectedCategories([...selectedCategories]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          {translate(\"salesOrder.selectProducts\")}\n        </Typography>\n        <Divider className={classes.divider} orientation=\"vertical\" />\n        <form onSubmit={handleSearch}>\n          <InputBase\n            className={classes.input}\n            value={code}\n            onChange={handleChangeCode}\n            placeholder={`${translate(\"common.search\")} ${translate(\"salesOrder.productCode\")}`}\n            inputProps={{ \"aria-label\": `${translate(\"common.search\")} ${translate(\"salesOrder.productCode\")}` }}\n          />\n          <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n            <Search />\n          </IconButton>\n        </form>\n        {/* <Divider className={classes.divider} orientation=\"vertical\" />\n        <Tooltip title={translate('common.filter')}>\n          <IconButton aria-label=\"filter\" aria-controls=\"category-menu\" aria-haspopup=\"true\" onClick={handleOpen}>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        <Menu id=\"category-menu\" open={Boolean(anchorEl)} keepMounted onClose={handleClose} anchorEl={anchorEl}>\n          {categories.map(category => (\n            <MenuItem key={`menu-${category.id}`} selected={selectedCategories.includes(category.id)} onClick={handleFilterCat(category.id)}>{category.nameEn}</MenuItem>\n          ))}\n          <Divider />\n          <MenuItem selected={timeConstraint.includes('expiredIn6Months')} onClick={handleFilter('expiredIn6Months')}>{translate('product.expiredIn6Months')}</MenuItem>\n        </Menu> */}\n      </Toolbar>\n\n      <div className={classes.chips}>\n        {search && <Chip label={search} onDelete={cancelSearch} />}\n        {timeConstraint.map((tc) => (\n          <Chip key={`product.${tc}`} label={translate(`product.${tc}`)} onDelete={handleFilter(tc)} />\n        ))}\n        {selectedCategories.map((categoryId) => (\n          <Chip key={`product.${categoryId}`} label={categories.find((c) => c.id === categoryId).nameEn} onDelete={handleFilterCat(categoryId)} />\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nProductListToolbar.propTypes = {\n  where: PropTypes.object.isRequired,\n  setWhere: PropTypes.func.isRequired,\n};\n\nexport default ProductListToolbar;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslate } from \"react-admin\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nfunction ProductSelectModal({\n  onSubmit,\n  onCancel,\n  product,\n  open: openProp,\n  customer,\n}) {\n  const translate = useTranslate();\n  const [open, setOpen] = useState(openProp);\n  useEffect(() => {\n    setOpen(openProp);\n  }, [openProp]);\n\n  const [formData, setFormData] = useState({ product });\n\n  let wholeSalePriceList = [\n    formData.wholeSalePrice1,\n    formData.wholeSalePrice2,\n    formData.wholeSalePrice3,\n    formData.wholeSalePrice4,\n    formData.wholeSalePrice5,\n  ];\n  if (product && product.discount && wholeSalePriceList.length > 0) {\n    if (product.discount.includes(\"%\")) {\n      const percent = parseFloat(product.discount) / 100;\n\n      wholeSalePriceList = wholeSalePriceList.map((price) => price * percent);\n    } else if (product.discount.includes(\"HKD\")) {\n      const discountAmount = parseFloat(product.discount.replace(\"HKD\", \"\"));\n      wholeSalePriceList = wholeSalePriceList.map(\n        (price) => price - discountAmount\n      );\n    }\n  }\n\n  useEffect(() => {\n    if (product && customer) {\n      let productWholeSalesPriceList = [\n        product.wholeSalePrice1,\n        product.wholeSalePrice2,\n        product.wholeSalePrice3,\n        product.wholeSalePrice4,\n        product.wholeSalePrice5,\n      ];\n      if (\n        product &&\n        product.discount &&\n        productWholeSalesPriceList.length > 0\n      ) {\n        if (product.discount.includes(\"%\")) {\n          const percent = 1 - parseFloat(product.discount) / 100;\n\n          productWholeSalesPriceList = productWholeSalesPriceList.map(\n            (price) => price * percent\n          );\n        } else if (product.discount.includes(\"HKD\")) {\n          const discountAmount = parseFloat(\n            product.discount.replace(\"HKD\", \"\")\n          );\n          productWholeSalesPriceList = productWholeSalesPriceList.map(\n            (price) => price - discountAmount\n          );\n        }\n      }\n\n      setFormData({\n        ...product,\n        quantity: parseInt(product.minOrderQuantity, 10),\n        price: parseFloat(\n          productWholeSalesPriceList[customer.wholesalePlan - 1]\n        ),\n      });\n    }\n  }, [product]);\n\n  const [selectBtn, setSelectBtn] = useState(customer.wholesalePlan);\n\n  const handleClose = () => {\n    onCancel();\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setFormData({ ...formData, price: parseFloat(formData.price).toFixed(2) });\n    onSubmit(formData);\n    handleClose();\n  };\n\n  const handleWholeSalePrice = (price, index) => () => {\n    setSelectBtn(index + 1);\n    setFormData({ ...formData, price: price });\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        {translate(\"salesOrder.editSalesOrder\")}\n      </DialogTitle>\n      <DialogContent>\n        <form noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              {product && product.code}\n            </Grid>\n            <Grid item xs={12}>\n              {product && product.nameChi}\n            </Grid>\n            <Grid item xs={12}>\n              {product && product.nameEn}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                error={product && formData.quantity > product.quantity}\n                helperText={\n                  product && formData.quantity > product.quantity\n                    ? \"Over Order\"\n                    : \"\"\n                }\n                id=\"quantity\"\n                label={translate(\"product.quantity\")}\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant={\n                  product && formData.quantity > product.quantity\n                    ? \"outlined\"\n                    : \"filled\"\n                }\n                value={formData.quantity}\n                onChange={(e) =>\n                  setFormData({\n                    ...formData,\n                    quantity: parseInt(e.currentTarget.value, 10),\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"price\"\n                label={translate(\"product.price\")}\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"filled\"\n                value={formData.price}\n                onChange={(e) =>\n                  setFormData({ ...formData, price: e.currentTarget.value })\n                }\n              />\n              <ButtonGroup>\n                {wholeSalePriceList.map((price, index) => (\n                  <Button\n                    onClick={handleWholeSalePrice(price, index)}\n                    color={selectBtn == index + 1 ? \"secondary\" : undefined}\n                    variant=\"contained\"\n                  >\n                    {translate(\"product.wholeSalePrice\")}\n                    {index + 1}\n                  </Button>\n                ))}\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          {translate(\"common.cancel\")}\n        </Button>\n        <Button\n          onClick={handleSave}\n          color=\"primary\"\n          disabled={\n            product && formData.quantity && formData.quantity > product.quantity\n          }\n        >\n          {translate(\"common.save\")}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nProductSelectModal.propTypes = {\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n  product: PropTypes.object,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default ProductSelectModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Add, Remove } from \"@material-ui/icons\";\nimport ProductListHeader from \"./ProductListHeader\";\nimport ProductListPagination from \"./ProductListPagination\";\nimport ProductListToolbar from \"./ProductListToolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ProductSelectModal from \"./ProductSelectModal\";\n\nconst GET_PRODUCTS = gql`\n  query getProducts(\n    $where: ProductWhereInput\n    $orderBy: ProductOrderByInput\n    $first: Int\n    $skip: Int\n  ) {\n    productsConnection(\n      where: $where\n      orderBy: $orderBy\n      skip: $skip\n      first: $first\n    ) {\n      edges {\n        node {\n          id\n          code\n          nameChi\n          nameEn\n          minOrderQuantity\n          minStockLevel\n          quantity\n          discount\n          cost\n          wholeSalePrice1\n          wholeSalePrice2\n          wholeSalePrice3\n          wholeSalePrice4\n          wholeSalePrice5\n        }\n      }\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  toolbar: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {},\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  image: {\n    width: 60,\n    height: 60,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n}));\n\nfunction ProductSelector({ selected, onSelected, customer }) {\n  const classes = useStyles();\n  const [where, setWhere] = useState({});\n  const [page, setPage] = useState(0);\n  const [orderBy, setOrderBy] = useState(\"id_ASC\");\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const { loading, error, data } = useQuery(GET_PRODUCTS, {\n    variables: {\n      where,\n      orderBy,\n      first: rowsPerPage,\n      skip: page * rowsPerPage,\n    },\n  });\n  if (error) {\n    return <div>Error</div>;\n  }\n  if (!data && loading) {\n    return <div>loading...</div>;\n  }\n  const rows = data.productsConnection.edges.map((e) => e.node);\n  const totalRows = data.productsConnection.aggregate.count;\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, totalRows - page * rowsPerPage);\n  const selectedIds = selected.map((s) => s.id);\n\n  const handleSelected = (product, selected) => {\n    onSelected(product, selected);\n  };\n\n  const createToggleProduct = (product) => () => {\n    const selected = !selectedIds.includes(product.id);\n    if (!selected) {\n      handleSelected(product, selected);\n    } else {\n      setSelectedProduct(product);\n    }\n  };\n\n  const handleProductAdd = (product) => {\n    handleSelected(product, true);\n    setSelectedProduct(null);\n  };\n\n  const handleClose = () => {\n    setSelectedProduct(null);\n  };\n\n  return (\n    <React.Fragment>\n      <ProductListToolbar where={where} setWhere={setWhere} />\n\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <ProductListHeader onSort={setOrderBy} />\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>\n                <IconButton onClick={createToggleProduct(row)}>\n                  {selectedIds.includes(row.id) ? <Remove /> : <Add />}\n                </IconButton>\n              </TableCell>\n              <TableCell>{row.code}</TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {row.nameChi}\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                      {row.nameEn}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </TableCell>\n              <TableCell align=\"right\">{parseInt(row.quantity, 10)}</TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <ProductListPagination\n          totalRows={totalRows}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          setPage={setPage}\n          setRowsPerPage={setRowsPerPage}\n        />\n      </Table>\n      <ProductSelectModal\n        product={selectedProduct}\n        open={!!selectedProduct}\n        onSubmit={handleProductAdd}\n        onCancel={handleClose}\n        customer={customer}\n      />\n    </React.Fragment>\n  );\n}\n\nProductSelector.propTypes = {\n  selected: PropTypes.array.isRequired,\n  onSelected: PropTypes.func.isRequired,\n};\n\nexport default ProductSelector;\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_CUSTOMER = gql`\n  query customer($where: CustomerWhereUniqueInput!) {\n    customer(where: $where) {\n      code\n      id\n      nameEn\n      nameChi\n      shops {\n        id\n        code\n        nameChi\n        nameEn\n      }\n    }\n  }\n`;\n\nexport default function CustomerShopAutocomplete({\n  onChange,\n  value: initialValue,\n  customerId,\n}) {\n  const translate = useTranslate();\n  console.log(\"customerId\", customerId);\n  const [customerID, setCustomerID] = useState();\n  const { loading: fetching, data } = useQuery(GET_CUSTOMER, {\n    variables: { where: { id: customerId } },\n  });\n  console.log(data && data);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const [options, setOptions] = useState([]);\n  const loading = fetching || (open && options.length === 0);\n  useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      setCustomerID(data.id);\n      // setOptions(data.customer.shops.filter((obj) => !!obj).map((obj) => ({ id: obj.id, name: obj.nameChi })));\n      setOptions(\n        data.customer.shops\n          .filter((obj) => !!obj)\n          .map((obj) => ({ id: obj.id, name: obj.code }))\n      );\n    }\n  }, [loading, data, customerID]);\n\n  const [value, setValue] = useState(initialValue);\n  useEffect(() => {\n    if (initialValue) {\n      // setValue({ id: initialValue.id, name: initialValue.nameChi });\n      setValue({ id: initialValue.id, name: initialValue.code });\n    }\n  }, [initialValue]);\n\n  const handleChange = (evt, value) => {\n    setValue(value);\n    value && onChange(data.customer.shops.find((o) => o.id === value.id));\n  };\n\n  return (\n    <Autocomplete\n      id=\"customer-shop-autocomplete\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionSelected={(option, v) => {\n        return option && option.id === v;\n      }}\n      getOptionLabel={(option) => {\n        return option && option.name;\n      }}\n      options={options}\n      loading={loading}\n      value={value}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"CustomerShop\"\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useTranslate, ReferenceInput, SelectInput } from \"react-admin\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CustomerAutocomplete from \"../../../components/Inputs/CustomerAutocomplete\";\nimport CustomerShopAutocomplete from \"../../../components/Inputs/CustomerShopAutocomplete\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_CUSTOMER = gql`\n  query customer($where: CustomerWhereUniqueInput!) {\n    customer(where: $where) {\n      code\n      id\n      nameEn\n      nameChi\n      shops {\n        id\n        code\n        nameChi\n        nameEn\n      }\n    }\n  }\n`;\n\nfunction BasicForm({ formData, setFormData }) {\n  const translate = useTranslate();\n  const [customerShops, setCustomerShops] = useState();\n\n  const { loading, data } = useQuery(GET_CUSTOMER, {\n    variables: { where: { id: formData.customer && formData.customer.id } },\n  });\n\n  useEffect(() => {\n    if (data) {\n      setCustomerShops(data.customer.shops);\n      console.log(data);\n    }\n  });\n\n  return (\n    <form noValidate>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <CustomerAutocomplete\n            variant=\"filled\"\n            fullWidth\n            value={formData.customer}\n            label={translate(\"salesOrder.code\")}\n            onChange={(newValue) => {\n              setFormData({ ...formData, customer: newValue });\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Autocomplete\n            id=\"customer-shops\"\n            options={customerShops}\n            getOptionLabel={(option) => option.nameEn}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"CustomerShop\"\n                fullWidth\n                variant=\"filled\"\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n            onChange={(event, value) => {\n              console.log(value);\n              setFormData({ ...formData, customerShop: value });\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            variant=\"filled\"\n            fullWidth\n            value={formData.code}\n            label={translate(\"salesOrder.code\")}\n            onChange={(e) => setFormData({ ...formData, code: e.target.value })}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl variant=\"filled\" fullWidth>\n            <InputLabel id=\"form-state\">\n              {translate(\"salesOrder.state\")}\n            </InputLabel>\n            <Select\n              labelId={\"state\"}\n              label=\"form-state\"\n              value={formData.state || \"RECEIVED\"}\n              onChange={(e) =>\n                setFormData({ ...formData, state: e.target.value })\n              }\n              disabled={true}\n            >\n              {[\n                { id: \"RECEIVED\", name: translate(\"common.received\") },\n                // { id: 'CONFIRMED', name: translate('common.confirmed') },\n                // { id: 'PACKED', name: translate('common.packed') },\n                // { id: 'SHIPPED', name: translate('common.shipped') },\n                // { id: 'DELIVERED', name: translate('common.delivered') },\n                // { id: 'PAID', name: translate('common.paid') },\n                // { id: 'DELETED', name: translate('common.deleted') },\n              ].map((d) => (\n                <MenuItem key={`POSelect${d.id}`} value={d.id}>\n                  {d.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default BasicForm;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport { NumberField, useTranslate } from \"react-admin\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport BilingualField from \"../../../components/BilingualField\";\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    fontWeight: \"bold\",\n    textAlign: \"right\",\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nfunction Review({ formData }) {\n  const translate = useTranslate();\n  const classes = useStyles();\n  console.log(\"formdata: \", formData);\n\n  const grandTotal = formData.products\n    .reduce((results, product) => results + product.price * product.quantity, 0)\n    .toFixed(2);\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        {translate(\"salesOrder.salesOrderDetails\")}\n      </Typography>\n      <Grid container>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"salesOrder.code\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.code}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"salesOrder.customer\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.customer.nameChi}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"salesOrder.expectedDeliveryAt\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>\n            {dayjs(formData.expectedDeliveryAt).format(\"YYYY-MM-DD\") +\n              \"(YYYY-MM-DD)\"}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            CustomerShop\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.customerShop.nameEn}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"salesOrder.state\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.state}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Table aria-label=\"spanning table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\" colSpan={4}>\n                  Details\n                </TableCell>\n                <TableCell align=\"right\">Price</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell align=\"right\">Product no.</TableCell>\n                <TableCell>Description</TableCell>\n                <TableCell align=\"right\">Qty.</TableCell>\n                <TableCell align=\"right\">Unit</TableCell>\n                <TableCell align=\"right\">Total/(HK$)</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {formData.products &&\n                formData.products.map((product) => {\n                  const subTotal = (product.quantity * product.price).toFixed(\n                    2\n                  );\n                  return (\n                    <TableRow key={product.id}>\n                      <TableCell align=\"center\">{product.code}</TableCell>\n                      <TableCell>\n                        <BilingualField source=\"name\" record={product} />\n                      </TableCell>\n                      <TableCell align=\"right\">{product.quantity}</TableCell>\n                      <TableCell align=\"right\">\n                        <NumberField\n                          source=\"price\"\n                          record={product}\n                          options={{ style: \"currency\", currency: \"HKD\" }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <NumberField\n                          source=\"subTotal\"\n                          record={{ subTotal }}\n                          options={{ style: \"currency\", currency: \"HKD\" }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              <TableRow>\n                <TableCell colSpan={4}>Total</TableCell>\n                <TableCell align=\"right\">\n                  <NumberField\n                    source=\"grandTotal\"\n                    record={{ grandTotal }}\n                    options={{ style: \"currency\", currency: \"HKD\" }}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Review;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslate, useNotify } from \"react-admin\";\nimport { useHistory } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport ProductSelector from \"./ProductSelector\";\nimport Button from \"@material-ui/core/Button\";\nimport BasicForm from \"./BasicForm\";\nimport Review from \"./Review\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport sequentialNumber from \"../../../utils/sequentialNumber\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../../redux/breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(2) * 2)]: {\n      width: 1024,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst ADD_SALES_ORDER = gql`\n  mutation createSalesOrder($data: SalesOrderCreateInput!) {\n    createSalesOrder(data: $data) {\n      id\n      code\n    }\n  }\n`;\n\nconst GET_LAST_SALES_ORDER = gql`\n  query getLastSalesOrder {\n    salesOrders(orderBy: createdAt_DESC, first: 1) {\n      id\n      code\n    }\n  }\n`;\n\nconst GET_FIRST_CUSTOMER = gql`\n  query getFirstCustomer {\n    customers(first: 1) {\n      code\n      id\n      nameEn\n      nameChi\n      wholesalePlan\n    }\n  }\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const classes = useStyles();\n  const history = useHistory();\n  const notify = useNotify();\n  const [addPO] = useMutation(ADD_SALES_ORDER);\n  const [activeStep, setActiveStep] = useState(0);\n  const initialValues = {\n    code: \"\",\n    customer: null,\n    products: [],\n    state: \"RECEIVED\",\n    customerShop: null,\n  };\n  const [formData, setFormData] = useState(initialValues);\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/SalesOrder\", label: \"Sales Order\" },\n      { url: \"/SalesOrder/create\", label: \"Create New\" },\n    ])\n  );\n\n  // getting new PO number\n  const { loading: loadingPO, data: lastPO } = useQuery(GET_LAST_SALES_ORDER);\n  useEffect(() => {\n    if (lastPO && lastPO.salesOrders.length > 0 && formData.code === \"\") {\n      const last = lastPO.salesOrders[0];\n      setFormData({\n        ...formData,\n        code: sequentialNumber.numberAfter(last.code),\n      });\n    }\n  }, [lastPO, formData]);\n\n  // getting default customer\n  const { loading: loadingCustomer, data: firstCustomer } = useQuery(\n    GET_FIRST_CUSTOMER\n  );\n  useEffect(() => {\n    if (\n      firstCustomer &&\n      firstCustomer.customers.length > 0 &&\n      !formData.customer\n    ) {\n      const customer = firstCustomer.customers[0];\n      setFormData({ ...formData, customer });\n    }\n  }, [firstCustomer, formData]);\n\n  if (loadingPO || loadingCustomer) return \"<div>Loading...</div>\";\n\n  const steps = [\n    translate(\"salesOrder.salesOrderDetails\"),\n    translate(\"salesOrder.selectProducts\"),\n    translate(\"salesOrder.review\"),\n  ];\n\n  const calculateTotalPrice = () => {\n    return formData.products.reduce((r, p) => {\n      return r + parseFloat(p.price) * p.quantity;\n    }, 0);\n  };\n  const calculateSubTotalPrice = () => {\n    return formData.products.reduce((r, p) => {\n      if (p.discount) {\n        if (p.discount.includes(\"%\")) {\n          const percent = 1 - parseFloat(p.discount) / 100;\n          return r + (parseFloat(p.price) / percent) * p.quantity;\n        } else if (p.discount.includes(\"HKD\")) {\n          const discountAmount = parseFloat(p.discount.replace(\"HKD\", \"\"));\n          return r + (parseFloat(p.price) + discountAmount) * p.quantity;\n        }\n      } else {\n        return r + parseFloat(p.price) * p.quantity;\n      }\n    }, 0);\n  };\n\n  const handleSave = () => {\n    const grandTotal = calculateTotalPrice();\n    const subtotal = calculateSubTotalPrice();\n    const data = {\n      code: formData.code,\n      grandTotal,\n      subtotal,\n      discountAmount: subtotal - grandTotal,\n      state: formData.state,\n      shopId: formData.customerShop.id,\n      products: {\n        create: formData.products.map((p) => ({\n          productId: p.id,\n          quantity: parseInt(p.quantity, 10),\n          price: parseFloat(p.price),\n          totalPrice: parseFloat(p.quantity) * parseFloat(p.price),\n        })),\n      },\n    };\n\n    addPO({ variables: { data } })\n      .then(() => {\n        history.push(\"/SalesOrder\");\n      })\n      .catch((error) => {\n        notify(`Error: ${error.message}`, \"warning\");\n      });\n  };\n\n  const handleProductSelected = (product, selected) => {\n    const currentIds = formData.products.map((p) => p.id);\n    if (selected) {\n      if (!currentIds.includes(product.id)) {\n        setFormData({\n          ...formData,\n          products: [...formData.products, product],\n        });\n      }\n    } else {\n      if (currentIds.includes(product.id)) {\n        formData.products.splice(currentIds.indexOf(product.id), 1);\n        setFormData({\n          ...formData,\n          products: formData.products,\n        });\n      }\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n          {translate(\"salesOrder.createSalesOrder\")}\n          <Badge\n            style={{ float: \"right\" }}\n            badgeContent={formData.products.length}\n            color=\"primary\"\n          >\n            <ShoppingCart />\n          </Badge>\n        </Typography>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        <React.Fragment>\n          {activeStep === 0 && (\n            <BasicForm formData={formData} setFormData={setFormData} />\n          )}\n          {activeStep === 1 && (\n            <ProductSelector\n              selected={formData.products}\n              onSelected={handleProductSelected}\n              customer={formData.customer}\n            />\n          )}\n          {activeStep === 2 && <Review formData={formData} />}\n\n          <div className={classes.buttons}>\n            {activeStep > 0 && (\n              <Button onClick={handleBack} color=\"primary\">\n                {translate(\"common.prev\")}\n              </Button>\n            )}\n            {activeStep < 2 && (\n              <Button onClick={handleNext} color=\"primary\">\n                {translate(\"common.next\")}\n              </Button>\n            )}\n            {activeStep === 2 && (\n              <Button onClick={handleSave} color=\"primary\">\n                {translate(\"common.confirm\")}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      </Paper>\n    </main>\n  );\n};\n","import { useHistory } from \"react-router-dom\";\nimport {\n  DateField,\n  NumberField,\n  EditButton,\n  Datagrid,\n  ReferenceField,\n  ReferenceArrayField,\n  Show,\n  SimpleShowLayout,\n  TextField,\n  useTranslate,\n  ShowController,\n  ShowView,\n} from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport { Add, Edit, Print } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport SCGenerator from \"../../utils/generateSC\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst GET_SC = gql`\n  query salesOrder($where: SalesOrderWhereUniqueInput!) {\n    salesOrder(where: $where) {\n      id\n      code\n      subtotal\n      grandTotal\n      discountAmount\n      state\n      shippingDate\n      shop {\n        phone\n        nameEn\n        deliverAddress\n        customer {\n          code\n          billingAddress\n          mobile\n          nameEn\n          paymentMethod\n          wholesalePlan\n        }\n      }\n      products {\n        id\n        totalPrice\n        product {\n          nameEn\n          id\n          code\n        }\n        price\n        quantity\n      }\n    }\n  }\n`;\n\nexport const SalesOrderShow = ({ permissions, ...props }) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const history = useHistory();\n  console.log(\"SalesOrder Show\", props);\n  const toEdit = () => {\n    const { id } = props;\n    history.push(`/SalesOrder/${id}/edit`);\n  };\n  const { loading, data } = useQuery(GET_SC, {\n    variables: { where: { id: props.id } },\n  });\n  const onEditItem = (po) => (e) => {\n    console.log(po);\n    console.log(e);\n  };\n\n  const toCreateItem = () => {\n    const { id } = props;\n    history.push(\"/SalesOrderItem/create\", {\n      record: { salesOrder: { id }, customer: data.salesOrder.shop.customer },\n    });\n  };\n\n  // const isPaid =\n  //   (data && data.salesOrder.state !== \"PAID\") || permissions === \"admin\";\n  let isPaid = true;\n  isPaid = data && data.salesOrder.state === \"PAID\";\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={9}>\n        <Typography variant=\"h6\">\n          {translate(\"common.information\")}&nbsp;\n          {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={toEdit}>\n              <Edit />\n              &nbsp;{translate(\"common.edit\")}\n            </Button>\n          ) : null}\n          {!isPaid ? (\n            <Button\n              color=\"primary\"\n              size=\"small\"\n              onClick={SCGenerator(data)}\n              disabled={loading}\n            >\n              <Print />\n              &nbsp;{translate(\"common.print\")}\n            </Button>\n          ) : null}\n        </Typography>\n        <ShowController title=\"Sales Order Details\" {...props}>\n          {(controllerProps) => {\n            const label = controllerProps.record\n              ? controllerProps.record.code\n              : \"\";\n            const id = controllerProps.record ? controllerProps.record.id : \"\";\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/SalesOrder\", label: \"Sales Order\" },\n                { url: `/SalesOrder/${id}/show`, label: `Details: ${label}` },\n              ])\n            );\n            return (\n              <ShowView {...controllerProps}>\n                <SimpleShowLayout>\n                  <ReferenceField\n                    label=\"Customer\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                  >\n                    <ReferenceField\n                      label=\"Customer\"\n                      source=\"customer.id\"\n                      reference=\"Customer\"\n                      link={(shop, referece) =>\n                        `/Customer/${shop.customer.id}/show`\n                      }\n                    >\n                      <BilingualField source=\"name\" />\n                    </ReferenceField>\n                  </ReferenceField>\n                  <ReferenceField\n                    label=\"Wholesale plan\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    link={false}\n                  >\n                    <ReferenceField\n                      label=\"Customer\"\n                      source=\"customer.id\"\n                      reference=\"Customer\"\n                      link={false}\n                    >\n                      <TextField source=\"wholesalePlan\" />\n                    </ReferenceField>\n                  </ReferenceField>\n                  <ReferenceField\n                    label=\"Shop\"\n                    source=\"shop.id\"\n                    reference=\"CustomerShop\"\n                    link=\"show\"\n                  >\n                    <TextField source=\"code\" />\n                  </ReferenceField>\n                  <TextField source=\"code\" label=\"Sales Order No.\" />\n                  <TextField\n                    source=\"shippingDate\"\n                    label=\"Sales Order Shipping Date\"\n                  />\n                  <DateField source=\"createdAt\" />\n                  <DateField source=\"updatedAt\" />\n                </SimpleShowLayout>\n              </ShowView>\n            );\n          }}\n        </ShowController>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Status</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <TextField\n                source=\"state\"\n                addLabel={false}\n                label={translate(\"common.status\")}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Subtotal Price</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"subtotal\"\n                addLabel={false}\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Discount Amount</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"discountAmount\"\n                addLabel={false}\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Grand Total Price</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"grandTotal\"\n                addLabel={false}\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Invoice</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceField\n                label=\"Invoice No.\"\n                reference=\"Invoice\"\n                source=\"invoice.id\"\n                link=\"show\"\n              >\n                <TextField source=\"code\" label=\"Invoice No.\" />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">\n          {translate(\"salesOrder.products\")}&nbsp;\n          {/* {!isPaid ? (\n            <Button color=\"primary\" size=\"small\" onClick={toCreateItem}>\n              <Add />\n              &nbsp;{translate(\"common.create\")}\n            </Button>\n          ) : null} */}\n        </Typography>\n        <Show actions={<React.Fragment />} {...props}>\n          <ReferenceArrayField\n            reference=\"SalesOrderItem\"\n            source=\"productsIds\"\n            addLabel={false}\n          >\n            <Datagrid {...props}>\n              <ReferenceField\n                label=\"#\"\n                source=\"product.id\"\n                reference=\"Product\"\n                link=\"show\"\n              >\n                <TextField source=\"code\" label=\"Product No.\" />\n              </ReferenceField>\n              <ReferenceField\n                label=\"Product Name\"\n                source=\"product.id\"\n                reference=\"Product\"\n                link=\"show\"\n              >\n                <BilingualField source=\"name\" />\n              </ReferenceField>\n              <NumberField\n                source=\"price\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <TextField source=\"quantity\" />\n              <NumberField\n                source=\"totalPrice\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              {/* {!isPaid ? (\n                <EditButton />\n              ) : null} */}\n            </Datagrid>\n          </ReferenceArrayField>\n        </Show>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Edit,\n  ReferenceInput,\n  required,\n  SelectInput,\n  SimpleForm,\n  TextInput,\n  useTranslate,\n  SaveButton,\n  Toolbar,\n  useUpdate,\n  useNotify,\n  FormDataConsumer,\n} from \"react-admin\";\nimport { useFormState } from \"react-final-form\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/SalesOrder\";\n\nconst MySaveButton = (props) => {\n  const { record } = props;\n  const [edit] = useUpdate(\"SalesOrder\", record.id);\n  const history = useHistory();\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n\n  const notify = useNotify();\n\n  const formState = useFormState();\n  const handleClick = useCallback(() => {\n    if (!formState.valid) {\n      return;\n    }\n    const { customer, ...formValues } = formState.values;\n    const onSuccess = ({ data: newRecord }) => {\n      notify(\"ra.notification.updated\", \"info\", { smart_count: 1 }, true);\n      redirect();\n    };\n\n    // if (customer.id === record.customer.id) {\n    //   edit(\n    //     {\n    //       payload: {\n    //         data: formState.values,\n    //         previousData: record,\n    //       },\n    //     },\n    //     { undoable: true, onSuccess }\n    //   );\n    // } else {\n    //   edit(\n    //     {\n    //       payload: {\n    //         data: { ...formValues, customerId: customer.id },\n    //         previousData: record,\n    //       },\n    //     },\n    //     { undoable: true, onSuccess }\n    //   );\n    // }\n    edit(\n      {\n        payload: {\n          data: { ...formValues },\n          previousData: record,\n        },\n      },\n      { undoable: true, onSuccess }\n    );\n  }, [formState.valid, formState.values, record, notify, redirect, edit]);\n\n  return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n};\n\nconst MyToolbar = (props) => (\n  <Toolbar {...props}>\n    <MySaveButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n  </Toolbar>\n);\n\nexport const SalesOrderEdit = (props) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const optionRenderer = (customer) => `${customer.code} ${customer.nameChi}`;\n  return (\n    <Edit {...props}>\n      <SimpleForm toolbar={<MyToolbar />} redirect={redirect}>\n        {/* <ReferenceInput label=\"Customer\" source=\"customer.id\" reference=\"Customer\">\n          <SelectInput optionText={optionRenderer} />\n        </ReferenceInput> */}\n        <TextInput\n          source=\"code\"\n          validate={required()}\n          label=\"Sales Order No.\"\n        />\n        <SelectInput\n          source=\"state\"\n          choices={[\n            { id: \"RECEIVED\", name: translate(\"common.received\") },\n            { id: \"CONFIRMED\", name: translate(\"common.confirmed\") },\n            { id: \"PACKED\", name: translate(\"common.packed\") },\n            { id: \"SHIPPED\", name: translate(\"common.shipped\") },\n            { id: \"DELIVERED\", name: translate(\"common.delivered\") },\n            { id: \"PAID\", name: translate(\"common.paid\") },\n            { id: \"DELETED\", name: translate(\"common.deleted\") },\n          ]}\n        />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/SalesOrder\", label: \"Sales Order\" },\n                {\n                  url: `/SalesOrder/${formData.id}`,\n                  label: `Edit: ${formData.code}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  DeleteButton,\n  EditButton,\n  FunctionField,\n  TextField,\n  DateField,\n  NumberField,\n  ReferenceField,\n} from \"react-admin\";\nimport SalesOrderCreate from \"./Create\";\nimport { SalesOrderShow } from \"./Show\";\nimport { SalesOrderEdit } from \"./Edit\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport PropTypes from \"prop-types\";\n\nexport { SalesOrderCreate, SalesOrderShow, SalesOrderEdit };\n\nconst StatusEditButton = ({ record, props, permissions }) =>\n  record.state !== \"PAID\" ? (\n    <EditButton basePath={props.basePath} record={record} />\n  ) : null;\nconst StatusDeleteButton = ({ record, props, permissions }) =>\n  record.state !== \"PAID\" ? (\n    <DeleteButton\n      basePath={props.basePath}\n      record={record}\n      resource={props.resource}\n    />\n  ) : null;\n// const StatusEditButton = ({ record, props, permissions }) => (record.state !== \"PAID\" || permissions === \"admin\" ? <EditButton basePath={props.basePath} record={record} /> : null);\n// const StatusDeleteButton = ({ record, props, permissions }) => (record.state !== \"PAID\" || permissions === \"admin\" ? <DeleteButton basePath={props.basePath} record={record} resource={props.resource} /> : null);\nexport const SalesOrderList = ({ permissions, ...props }) => {\n  console.log(props);\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([{ url: \"/SalesOrder\", label: \"Sales Order\" }]));\n  var state;\n  return (\n    <List\n      {...props}\n      filterDefaultValues={{ state_not: \"DELETED\" }}\n      sort={{ field: \"createdAt\", order: \"DESC\" }}\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Sales Order No.\" />\n        <ReferenceField\n          label=\"Customer\"\n          source=\"shop.id\"\n          reference=\"CustomerShop\"\n        >\n          <ReferenceField\n            label=\"Customer\"\n            source=\"customer.id\"\n            reference=\"Customer\"\n            link={(shop, referece) => `/Customer/${shop.customer.id}/show`}\n          >\n            <BilingualField source=\"name\" />\n          </ReferenceField>\n        </ReferenceField>\n        <ReferenceField\n          label=\"Shop\"\n          source=\"shop.id\"\n          reference=\"CustomerShop\"\n          link=\"show\"\n        >\n          <BilingualField source=\"name\" />\n        </ReferenceField>\n        <NumberField\n          label=\"Grand total price\"\n          source=\"grandTotal\"\n          options={{ style: \"currency\", currency: \"HKD\" }}\n        />\n        <TextField source=\"state\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <FunctionField\n          render={(record) => (\n            <StatusEditButton\n              record={record}\n              props={props}\n              permissions={permissions}\n            />\n          )}\n        />\n        <FunctionField\n          render={(record) => (\n            <StatusDeleteButton\n              record={record}\n              props={props}\n              permissions={permissions}\n            />\n          )}\n        />\n      </Datagrid>\n    </List>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslate } from \"react-admin\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_SUPPLIER = gql`\n  query suppliers($where: SupplierWhereInput) {\n    suppliers(where: $where) {\n      id\n      name\n      creditLine\n    }\n  }\n`;\n\nexport default function SupplierAutocomplete({\n  onChange,\n  value: initialValue,\n}) {\n  const translate = useTranslate();\n  const { loading: fetching, data } = useQuery(GET_SUPPLIER, {\n    variables: { state: \"APPROVED\" },\n  });\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const [options, setOptions] = useState([]);\n  const loading = fetching || (open && options.length === 0);\n  useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    if (data) {\n      setOptions(\n        data.suppliers.map((obj) => ({\n          id: obj.id,\n          name: obj.name,\n          creditLine: obj.creditLine,\n        }))\n      );\n    }\n  }, [loading, data]);\n\n  const [value, setValue] = useState(initialValue);\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const handleChange = (evt, value) => {\n    console.log(\"value: \", value);\n    setValue(value);\n    onChange(value);\n  };\n\n  return (\n    <Autocomplete\n      id=\"purchase-order-autocomplete\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={handleChange}\n      getOptionSelected={(option, v) => {\n        return option.id === v;\n      }}\n      getOptionLabel={(option) => {\n        return option.name;\n      }}\n      options={options}\n      loading={loading}\n      value={value}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={translate(\"supplier.supplier\")}\n          fullWidth\n          variant=\"filled\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n","export const PO_FREEZE_STATE = ['SHIPPED', 'ARRIVED', 'RECEIVED', 'DELETED'];\nexport const PO_CONFIRM_STATE = ['APPROVED', 'SENT', 'ACKED', 'CONFIRMED'];","import React from \"react\";\nimport SupplierAutocomplete from \"../../../components/Inputs/SupplierAutocomplete\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useTranslate } from \"react-admin\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { PO_FREEZE_STATE } from \"../constants\";\n\nfunction BasicForm({ formData, setFormData, permissions }) {\n  const translate = useTranslate();\n  return (\n    <form noValidate>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <SupplierAutocomplete\n            variant=\"filled\"\n            fullWidth\n            value={formData.supplier}\n            label={translate(\"purchaseOrder.code\")}\n            onChange={(newValue) =>\n              setFormData({ ...formData, supplier: newValue })\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            variant=\"filled\"\n            fullWidth\n            value={formData.code}\n            label={translate(\"purchaseOrder.code\")}\n            onChange={(e) => setFormData({ ...formData, code: e.target.value })}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <DatePicker\n            inputVariant=\"filled\"\n            fullWidth\n            value={formData.expectedDeliveryAt}\n            label={translate(\"purchaseOrder.expectedDeliveryAt\")}\n            onChange={(newDate) =>\n              setFormData({ ...formData, expectedDeliveryAt: newDate.toDate() })\n            }\n            format=\"YYYY/MM/DD\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl variant=\"filled\" fullWidth>\n            <InputLabel id=\"form-state\">\n              {translate(\"purchaseOrder.state\")}\n            </InputLabel>\n            <Select\n              disabled={PO_FREEZE_STATE.includes(formData.state)}\n              labelId={\"state\"}\n              label=\"form-state\"\n              value={formData.state || \"APPROVED\"}\n              onChange={(e) =>\n                setFormData({ ...formData, state: e.target.value })\n              }\n            >\n              {[\n                { id: \"DRAFT\", name: translate(\"common.draft\") },\n                { id: \"PENDING\", name: translate(\"common.pending\") },\n              ].map((d) => (\n                <MenuItem key={`POSelect${d.id}`} value={d.id}>\n                  {d.name}\n                </MenuItem>\n              ))}\n              {permissions === \"admin\" && (\n                <MenuItem key=\"POSelectAPPROVED\" value=\"APPROVED\">\n                  {\" \"}\n                  {translate(\"common.approved\")}\n                </MenuItem>\n              )}\n              {/* <MenuItem key=\"POSelectAPPROVED\" value=\"APPROVED\"> */}\n              {/* {\" \"} */}\n              {/* {translate(\"common.approved\")} */}\n              {/* </MenuItem> */}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default BasicForm;\n","import React, { useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport { NumberField, useTranslate } from \"react-admin\";\nimport {\n  TableContainer,\n  Paper,\n  TablePagination,\n  TableBody,\n  TableCell,\n  TableHead,\n  Table,\n  Grid,\n  TableRow,\n} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport BilingualField from \"../../../components/BilingualField\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_SUPPLIER_PO = gql`\n  query getPo($where: PurchaseOrderWhereInput!) {\n    purchaseOrders(where: $where) {\n      totalPrice\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    fontWeight: \"bold\",\n    textAlign: \"right\",\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nfunction Review({ formData, setFormData }) {\n  let end = dayjs().add(1, \"month\").format('YYYY-MM-DD').toString();\n  let start = dayjs().format('YYYY-MM-DD').toString();\n\n  const { loading: loadingPO, data: supplierPO } = useQuery(GET_SUPPLIER_PO, {\n    variables: {\n      where: {\n        createdAt_gt: `${start.substring(0, 7)}`,\n        createdAt_lt: `${end.substring(0, 7)}`,\n        supplierId: formData.supplier.id,\n      },\n    },\n  });\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [page, setPage] = React.useState(0);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const translate = useTranslate();\n  const classes = useStyles();\n  let supplierLine = 0;\n\n  const grandTotal = formData.products.reduce(\n    (results, product) => results + product.price * product.quantity,\n    0\n  );\n  useEffect(() => {\n    if (loadingPO) {\n      console.log('loadingPO')\n    }\n    if (supplierPO) {\n      console.log('supplierPO:', supplierPO)\n      const supplierCreditLine = parseInt(formData.supplier.creditLine);\n      supplierLine = supplierPO.purchaseOrders.reduce(\n        (acc, { totalPrice }) => acc - totalPrice,\n        supplierCreditLine\n      );\n      supplierLine -= grandTotal;\n      console.log('supplierLine', supplierLine)\n      setFormData({ ...formData, canCredit: supplierLine >= 0, supplierLine });\n    }\n    if (!supplierPO) {\n      console.log('error loading supplierPO', supplierPO)\n    }\n  }, [supplierPO, loadingPO]);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        {translate(\"purchaseOrder.purchaseOrderDetails\")}\n      </Typography>\n      <Grid container>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"purchaseOrder.code\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.code}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"purchaseOrder.supplier\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.supplier.name}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            line\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.supplier.creditLine}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"purchaseOrder.expectedDeliveryAt\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>\n            {dayjs(formData.expectedDeliveryAt).format(\"YYYY-MM-DD\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom className={classes.label}>\n            {translate(\"purchaseOrder.state\")}\n          </Typography>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Typography gutterBottom>{formData.state}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"spanning table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={3}>\n                    Details\n                  </TableCell>\n                  <TableCell align=\"right\">Price</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Desc</TableCell>\n                  <TableCell align=\"right\">Price</TableCell>\n                  <TableCell align=\"right\">Qty.</TableCell>\n                  <TableCell align=\"right\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {formData.products &&\n                  formData.products\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((product) => {\n                      return (\n                        <TableRow key={product.id}>\n                          <TableCell>\n                            <BilingualField source=\"name\" record={product} />\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <NumberField\n                              source=\"price\"\n                              record={product}\n                              options={{ style: \"currency\", currency: \"HKD\" }}\n                            />\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {product.quantity}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <NumberField\n                              source=\"totalPrice\"\n                              record={product}\n                              options={{ style: \"currency\", currency: \"HKD\" }}\n                            />\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                <TableRow>\n                  <TableCell colSpan={3}>Total</TableCell>\n                  <TableCell align=\"right\">\n                    <NumberField\n                      source=\"grandTotal\"\n                      record={{ grandTotal }}\n                      options={{ style: \"currency\", currency: \"HKD\" }}\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={3}>Supplier Credit Line</TableCell>\n                  <TableCell align=\"right\">\n                    <div>\n                      <NumberField\n                        source=\"supplierLine\"\n                        record={{ ...formData }}\n                        options={{ style: \"currency\", currency: \"HKD\" }}\n                      />\n                      {formData.canCredit ? null : (\n                        <h1 style={{ color: \"red\" }}> Over Credit </h1>\n                      )}\n                    </div>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={formData.products.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Review;\n","import React from \"react\";\nimport { NumberField, useNotify } from \"react-admin\";\nimport CSVReader from \"react-csv-reader\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport csvTemplate from \"./template.csv\";\nimport { makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TablePagination } from \"@material-ui/core\";\nimport BilingualField from \"../../../components/BilingualField\";\n\nconst GET_PRODUCTS = gql`\n  query {\n    products {\n      id\n      code\n      nameChi\n      nameEn\n      minOrderQuantity\n      quantity\n      minStockLevel\n      cost\n      wholeSalePrice1\n      wholeSalePrice2\n      wholeSalePrice3\n      wholeSalePrice4\n      wholeSalePrice5\n    }\n  }\n`;\n\nconst ProductImport = ({ formData, setFormData }) => {\n  const notify = useNotify();\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n  });\n  const { data } = useQuery(GET_PRODUCTS);\n  const importSuccess = async (arr) => {\n    try {\n      arr.shift();\n      const backendData = data.products.reduce((results, row) => {\n        results[row.code] = row;\n        return results;\n      }, {});\n      const products = arr\n        .filter((row) => {\n          const code = row[1] && row[1] !== \"\" && row[1].replace(/-/g, \"\");\n          return row[0] !== \"\" && row[1] !== \"\" && backendData[code];\n        })\n        .map((row) => {\n          const code = row[1].replace(/-/g, \"\");\n          let quantity;\n          if (row[3].includes(\"/\") === true) {\n            quantity = parseInt(row[0]) * parseInt(row[3].split(\"/\"[0]));\n          } else {\n            quantity = row[0];\n          }\n          const price = parseFloat(backendData[code].cost);\n          return {\n            ...backendData[code],\n            quantity,\n            price,\n            totalPrice: quantity * price,\n          };\n        });\n      notify(`Imported ${products.length} Products`);\n      setFormData({\n        ...formData,\n        products,\n      });\n    } catch (error) {\n      notify(`Error: ${error}.`, \"warning\");\n    }\n  };\n  const classes = useStyles();\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [page, setPage] = React.useState(0);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  return (\n    <React.Fragment>\n      <CSVReader onFileLoaded={(data) => importSuccess(data)} label=\"Select .csv file  \" />\n      <a href={csvTemplate} target=\"_blank\">\n        Template\n      </a>\n      {formData.products && formData.products.length > 0 && (\n        <Paper>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"right\">Product no.</TableCell>\n                  <TableCell align=\"right\">Name</TableCell>\n                  <TableCell align=\"right\">Cost</TableCell>\n                  <TableCell align=\"right\">Quantity</TableCell>\n                  <TableCell align=\"right\">Subtotal</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {formData.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                  <TableRow key={row.item}>\n                    <TableCell align=\"right\">{row.code}</TableCell>\n                    <TableCell align=\"right\">\n                      <BilingualField source=\"name\" record={row} />\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <NumberField source=\"price\" record={row} options={{ style: \"currency\", currency: \"HKD\" }} />\n                    </TableCell>\n                    <TableCell align=\"right\">{row.quantity}</TableCell>\n                    <TableCell align=\"right\">\n                      <NumberField source=\"totalPrice\" record={row} options={{ style: \"currency\", currency: \"HKD\" }} />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination rowsPerPageOptions={[5, 10, 25]} component=\"div\" count={formData.products.length} rowsPerPage={rowsPerPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage} />\n        </Paper>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ProductImport;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslate } from \"react-admin\";\nimport { useHistory } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport dayjs from \"dayjs\";\n// import ProductSelector from './ProductSelector';\nimport Button from \"@material-ui/core/Button\";\nimport BasicForm from \"./BasicForm\";\nimport Review from \"./Review\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport sequentialNumber from \"../../../utils/sequentialNumber\";\nimport ProductImport from \"./ProductImport\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../../redux/breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(2) * 2)]: {\n      width: 1024,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(1024 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst ADD_PURCHASE_ORDER = gql`\n  mutation createPurchaseOrder($data: PurchaseOrderCreateInput!) {\n    createPurchaseOrder(data: $data) {\n      id\n      code\n    }\n  }\n`;\n\nconst GET_LAST_PURCHASE_ORDER = gql`\n  query getLastPurchaseOrder {\n    purchaseOrders(orderBy: code_DESC, first: 1) {\n      id\n      code\n    }\n  }\n`;\n\nconst GET_FIRST_SUPPLIER = gql`\n  query getFirstSupplier {\n    suppliers(first: 1) {\n      id\n      name\n      creditLine\n    }\n  }\n`;\n\nexport default ({ permissions, ...props }) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const classes = useStyles();\n  const history = useHistory();\n  const [addPO] = useMutation(ADD_PURCHASE_ORDER);\n  const [activeStep, setActiveStep] = useState(0);\n  const initialValues = {\n    code: \"\",\n    supplier: null,\n    expectedDeliveryAt: dayjs().add(4, \"month\").toDate(),\n    products: [],\n    state: \"PENDING\",\n  };\n  const [formData, setFormData] = useState(initialValues);\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/PurchaseOrder\", label: \"Purchase Order\" },\n      { url: \"/PurchaseOrder/create\", label: \"Create New\" },\n    ])\n  );\n  let isNextBtnDisable;\n\n  // getting new PO number\n  const { loading: loadingPO, data: lastPO } = useQuery(\n    GET_LAST_PURCHASE_ORDER\n  );\n  useEffect(() => {\n    if (lastPO && lastPO.purchaseOrders.length > 0 && formData.code === \"\") {\n      const last = lastPO.purchaseOrders[0];\n      setFormData({\n        ...formData,\n        code: sequentialNumber.numberAfter(last.code),\n      });\n    }\n  }, [lastPO, formData]);\n\n  // getting default supplier\n  const { loading: loadingSupplier, data: firstSupplier } = useQuery(\n    GET_FIRST_SUPPLIER\n  );\n  useEffect(() => {\n    if (\n      firstSupplier &&\n      firstSupplier.suppliers.length > 0 &&\n      !formData.supplier\n    ) {\n      const supplier = firstSupplier.suppliers[0];\n      setFormData({ ...formData, supplier });\n    }\n  }, [firstSupplier, formData]);\n\n  if (loadingPO || loadingSupplier) return \"<div>Loading...</div>\";\n\n  const steps = [\n    translate(\"purchaseOrder.selectProducts\"),\n    translate(\"purchaseOrder.purchaseOrderDetails\"),\n    translate(\"purchaseOrder.review\"),\n  ];\n  const calculateTotalPrice = () => {\n    return formData.products.reduce((r, p) => {\n      return r + parseFloat(p.quantity) * parseFloat(p.price);\n    }, 0);\n  };\n\n  const handleSave = () => {\n    const data = {\n      code: formData.code,\n      supplierId: formData.supplier.id,\n      expectedDeliveryAt: dayjs(formData.expectedDeliveryAt).toISOString(),\n      totalPrice: calculateTotalPrice(),\n      state: formData.state,\n      products: {\n        create: formData.products.map((p) => ({\n          productId: p.id,\n          quantity: parseInt(p.quantity, 10),\n          price: parseFloat(p.price),\n          totalPrice: parseFloat(p.quantity) * parseFloat(p.price),\n        })),\n      },\n    };\n    addPO({ variables: { data } }).then(() => {\n      history.push(\"/PurchaseOrder\");\n    });\n  };\n\n  // const handleProductSelected = (product, selected) => {\n  //   const currentIds = formData.products.map(p => p.id);\n  //   if (selected) {\n  //     if (!currentIds.includes(product.id)) {\n  //       setFormData({\n  //         ...formData,\n  //         products: [...formData.products, product],\n  //       });\n  //     }\n  //   } else {\n  //     if (currentIds.includes(product.id)) {\n  //       formData.products.splice(currentIds.indexOf(product.id), 1);\n  //       setFormData({\n  //         ...formData,\n  //         products: formData.products,\n  //       });\n  //     }\n  //   }\n  // };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  if (activeStep == 0 && formData.products.length == 0) {\n    isNextBtnDisable = true;\n  } else {\n    isNextBtnDisable = false;\n  }\n\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n          {translate(\"purchaseOrder.createPurchaseOrder\")}\n          <Badge\n            style={{ float: \"right\" }}\n            badgeContent={formData.products.length}\n            color=\"primary\"\n          >\n            <ShoppingCart />\n          </Badge>\n        </Typography>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        <React.Fragment>\n          {activeStep === 0 && (\n            <ProductImport formData={formData} setFormData={setFormData} />\n          )}\n          {activeStep === 1 && (\n            <BasicForm\n              permissions={permissions}\n              formData={formData}\n              setFormData={setFormData}\n            />\n          )}\n          {activeStep === 2 && (\n            <Review formData={formData} setFormData={setFormData} />\n          )}\n\n          <div className={classes.buttons}>\n            {activeStep > 0 && (\n              <Button onClick={handleBack} color=\"primary\">\n                {translate(\"common.prev\")}\n              </Button>\n            )}\n            {activeStep < 2 && (\n              <Button\n                onClick={handleNext}\n                color=\"primary\"\n                disabled={isNextBtnDisable}\n              >\n                {translate(\"common.next\")}\n              </Button>\n            )}\n            {activeStep === 2 && (\n              <Button\n                onClick={handleSave}\n                color=\"primary\"\n                disabled={formData.canCredit != true}\n              >\n                {translate(\"common.save\")}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      </Paper>\n    </main>\n  );\n};\n","import { useHistory } from \"react-router-dom\";\nimport {\n  DateField,\n  NumberField,\n  FunctionField,\n  Datagrid,\n  ReferenceField,\n  Show,\n  SimpleShowLayout,\n  TextField,\n  useTranslate,\n  ShowController,\n  ShowView,\n  List,\n} from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport { Add, Edit } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport { useState } from \"react\";\n\n// const ProductShowActions = ({ basePath, data, resource }) => {\n//   const translate = useTranslate();\n//   const print = (...props) => {\n//     console.log('Print Props', props);\n//   };\n//   return (\n//     <TopToolbar>\n//       <EditButton basePath={basePath} record={data} />\n//       <Button color=\"primary\" size=\"small\" onClick={print}>\n//         <Print />&nbsp;\n//         {translate('common.print')}\n//       </Button>\n//     </TopToolbar>\n//   );\n// };\n\nexport const PurchaseOrderShow = (props) => {\n  const [state, setState] = useState(\"ARRIVED\");\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const history = useHistory();\n  const toEdit = () => {\n    const { id } = props;\n    history.push(`/PurchaseOrder/${id}/edit`);\n  };\n  const toEditItem = (record) => () => {\n    console.log(\"record\", record);\n    // history.push(`/PurchaseOrderItem/${record.id}`);\n  };\n  const toCreateItem = () => {\n    const { id } = props;\n    history.push(\"/PurchaseOrderItem/create\", {\n      record: { purchaseOrder: { id } },\n    });\n  };\n  const onFetchState = (record) => {\n    console.log(\"record: \", record);\n    setState(record.state);\n    return record.state;\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={9}>\n        <Typography variant=\"h6\">\n          {translate(\"common.information\")}&nbsp;\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            onClick={toEdit}\n            disabled={state && state === \"ARRIVED\"}\n          >\n            <Edit />\n            &nbsp;{translate(\"common.edit\")}\n          </Button>\n        </Typography>\n        <ShowController\n          title=\"Purchase Order Details\"\n          actions={<React.Fragment />}\n          {...props}\n        >\n          {(controllerProps) => {\n            const label = controllerProps.record\n              ? controllerProps.record.code\n              : \"\";\n            const id = controllerProps.record ? controllerProps.record.id : \"\";\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/PurchaseOrder\", label: \"Purchase Order\" },\n                {\n                  url: `/PurchaseOrder/${id}/show`,\n                  label: `Details: ${label}`,\n                },\n              ])\n            );\n            return (\n              <ShowView {...controllerProps}>\n                <SimpleShowLayout>\n                  <ReferenceField\n                    label=\"Supplier\"\n                    source=\"supplier.id\"\n                    reference=\"Supplier\"\n                    link={false}\n                  >\n                    <TextField source=\"name\" />\n                  </ReferenceField>\n                  <TextField source=\"code\" label=\"Supplier No.\" />\n                  <DateField source=\"createdAt\" />\n                  <DateField source=\"updatedAt\" />\n                </SimpleShowLayout>\n              </ShowView>\n            );\n          }}\n        </ShowController>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Status</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              {/* <TextField\n                source=\"state\"\n                addLabel={false}\n                label={translate(\"common.status\")}\n              /> */}\n              <FunctionField\n                addLabel={false}\n                render={(record) => onFetchState(record)}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Cost</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"totalPrice\"\n                addLabel={false}\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Expected Delivery Date</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <DateField addLabel={false} source=\"expectedDeliveryAt\" />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">\n          {translate(\"purchaseOrder.products\")}&nbsp;\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            onClick={toCreateItem}\n            disabled={state && state === \"ARRIVED\"}\n          >\n            <Add />\n            &nbsp;{translate(\"common.create\")}\n          </Button>\n        </Typography>\n        <ShowController\n          title=\"Products\"\n          actions={<React.Fragment />}\n          {...props}\n        >\n          {(controllerProps) => {\n            if (!controllerProps.record) {\n              return null;\n            }\n            const id = controllerProps.record ? controllerProps.record.id : \"\";\n            return (\n              <List\n                resource=\"PurchaseOrderItem\"\n                hasCreate={false}\n                hasEdit={false}\n                hasShow={false}\n                hasList={true}\n                exporter={false}\n                basePath=\"/PurchaseOrderItem\"\n                filter={{ purchaseOrder: { id } }}\n              >\n                <Datagrid>\n                  <ReferenceField\n                    label=\"#\"\n                    source=\"product.id\"\n                    reference=\"Product\"\n                  >\n                    <TextField source=\"code\" label=\"Product No.\" />\n                  </ReferenceField>\n                  <ReferenceField\n                    label=\"Product Name\"\n                    source=\"product.id\"\n                    reference=\"Product\"\n                  >\n                    <BilingualField source=\"name\" />\n                  </ReferenceField>\n                  <NumberField\n                    source=\"price\"\n                    options={{ style: \"currency\", currency: \"HKD\" }}\n                  />\n                  <TextField source=\"quantity\" />\n                  <NumberField\n                    source=\"totalPrice\"\n                    options={{ style: \"currency\", currency: \"HKD\" }}\n                  />\n                  <FunctionField\n                    render={(record) => (\n                      <Button\n                        color=\"primary\"\n                        size=\"small\"\n                        disabled={state && state == \"ARRIVED\"}\n                        onClick={toEditItem(record)}\n                      >\n                        <Edit />\n                        &nbsp;{translate(\"common.edit\")}\n                      </Button>\n                    )}\n                  />\n                </Datagrid>\n              </List>\n            );\n          }}\n        </ShowController>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  DeleteButton,\n  TextField,\n  DateField,\n  NumberField,\n  useTranslate,\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  DateInput,\n  SelectInput,\n  FormDataConsumer,\n} from \"react-admin\";\nimport PurchaseOrderCreate from \"./Create\";\nimport { PurchaseOrderShow } from \"./Show\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/PurchaseOrder\";\n\nexport { PurchaseOrderCreate, PurchaseOrderShow };\n\nexport const PurchaseOrderEdit = (props) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\">\n        <TextInput\n          source=\"code\"\n          validate={required()}\n          label=\"Purchase Order No.\"\n        />\n        <DateInput source=\"expectedDeliveryAt\" />\n        <SelectInput\n          source=\"state\"\n          label=\"Status\"\n          choices={[\n            { id: \"DRAFT\", name: translate(\"common.draft\") },\n            { id: \"PENDING\", name: translate(\"common.pending\") },\n            { id: \"CONFIRMED\", name: translate(\"common.confirmed\") },\n            // { id: 'APPROVED', name: translate('common.approved') },\n            // { id: 'SENT', name: translate('common.sent') },\n            // { id: 'ACKED', name: translate('common.acked') },\n            // { id: 'SHIPPED', name: translate('common.shipped') },\n            // { id: 'ARRIVED', name: translate('common.arrived') },\n            // { id: 'RECEIVED', name: translate('common.received') },\n            // { id: 'DELETED', name: translate('common.deleted') },\n          ]}\n        />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/PurchaseOrder\", label: \"Purchase Order\" },\n                {\n                  url: `/PurchaseOrder/${formData.id}`,\n                  label: `Edit: ${formData.code}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const PurchaseOrderList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(\n    setBreadcrumbs([{ url: \"/PurchaseOrder\", label: \"Purchase Order\" }])\n  );\n  return (\n    <List\n      {...props}\n      filterDefaultValues={{ state_not: \"DELETED\" }}\n      sort={{ field: \"createdAt\", order: \"DESC\" }}\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Purchase Order No.\" />\n        <NumberField\n          source=\"totalPrice\"\n          options={{ style: \"currency\", currency: \"HKD\" }}\n        />\n        <DateField source=\"expectedDeliveryAt\" />\n        <TextField source=\"state\" label=\"Status\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { NumberField, useTranslate } from 'react-admin';\nimport PurchaseOrderAutocomplete from '../../../components/Inputs/PurchaseOrderAutocomplete';\nimport ShowText from '../../../components/Shows/ShowText';\nimport dayjs from 'dayjs';\n\nfunction PurchaseOrderSelector({ formData, setFormData }) {\n  const translate = useTranslate();\n\n  const handleSelect = (purchaseOrder) => {\n    purchaseOrder.products.forEach((p) => {\n      p.exactQuantity = 0;\n      p.totalPrice = 0;\n    });\n\n    setFormData({\n      ...formData,\n      purchaseOrder,\n    });\n  };\n\n  const renderPurchaseOrderDetails = () => {\n    const { purchaseOrder } = formData;\n    const expectedDeliveryAt = dayjs(purchaseOrder.expectedDeliveryAt);\n    return (\n      <React.Fragment>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate('purchaseOrder.supplier')}>{purchaseOrder.supplier.name}</ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate('purchaseOrder.expectedDeliveryAt')}>{expectedDeliveryAt.format('YYYY-MM-DD')} </ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate('purchaseOrder.state')}>{purchaseOrder.state}</ShowText>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <ShowText label={translate('purchaseOrder.totalPrice')}>\n            <NumberField source=\"totalPrice\" record={purchaseOrder} options={{ style: 'currency', currency: 'HKD' }} />\n          </ShowText>\n        </Grid>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={6}>\n        <PurchaseOrderAutocomplete\n          onChange={handleSelect}\n          defaultValue={formData.purchaseOrder}\n        />\n      </Grid>\n      {formData.purchaseOrder && renderPurchaseOrderDetails()}\n    </Grid>\n  );\n}\n\nPurchaseOrderSelector.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n};\n\nexport default PurchaseOrderSelector;","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport { KeyboardArrowDown, KeyboardArrowUp, Remove } from '@material-ui/icons';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOffOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport { NumberField, ReferenceField, TextField, DateField } from 'react-admin';\nimport BilingualField from '../../../components/BilingualField';\nimport Button from '@material-ui/core/Button';\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nexport default ({ row, onRowClick, onRemoveChecked }) => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  const { product, checked, quantity, id } = row;\n  const totalExactQuantity = checked ? checked.reduce((sum, r) => {\n    sum += parseInt(r.exactQuantity, 10);\n    return sum;\n  }, 0) : 0;\n  const handleRowClick = () => {\n    onRowClick && onRowClick(row);\n  }\n  const handleRemoveChecked = (index) => () => {\n    onRemoveChecked && onRemoveChecked(index, row);\n  }\n  return (\n    <React.Fragment>\n      <TableRow hover className={classes.root} onClick={() => setOpen(!open)}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell><TextField source=\"code\" record={product} /></TableCell>\n        <TableCell component=\"th\">\n          <BilingualField source=\"name\" record={product} />\n        </TableCell>\n        <TableCell align=\"right\">{quantity}</TableCell>\n        <TableCell align=\"right\">{totalExactQuantity}</TableCell>\n        <TableCell align=\"right\">\n          <IconButton onClick={handleRowClick}>\n            {quantity === totalExactQuantity ? <CheckCircleIcon color=\"secondary\" /> : <HighlightOffIcon color=\"primary\" />}\n          </IconButton>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Details\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Warehouse</TableCell>\n                    <TableCell>Expiry Date</TableCell>\n                    <TableCell>Quantity</TableCell>\n                    <TableCell>Labels</TableCell>\n                    <TableCell align=\"right\" />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {checked && checked.map((detail, i) => {\n                    return (\n                      <TableRow key={`checked-${id}-${i}`}>\n                        <TableCell>\n                          <ReferenceField source=\"warehouseId\" record={detail} reference=\"Warehouse\" basePath=\"/Warehouse\">\n                            <TextField source=\"name\" />\n                          </ReferenceField>\n                        </TableCell>\n                        <TableCell>\n                          <DateField source=\"expiryDate\" record={detail} />\n                        </TableCell>\n                        <TableCell>\n                          <NumberField source=\"exactQuantity\" record={detail} />\n                        </TableCell>\n                        <TableCell align=\"right\">{detail.labelFrom} - {detail.labelTo}</TableCell>\n                        <TableCell>\n                          <Button variant=\"outlined\" size=\"small\" onClick={handleRemoveChecked(i)} color=\"secondary\">\n                            <Remove />\n                            <Typography variant=\"body1\">Remove</Typography>\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    )\n                  })}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}","import { Box, Paper, TableContainer, TablePagination } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport QuantityCheckRow from './QuantityCheckRow';\nimport React from 'react';\nimport { useTranslate } from 'react-admin';\n\nexport default ({ products, filterItemId, onRowClick, onRemoveChecked }) => {\n  const translate = useTranslate();\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n  const [page, setPage] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const records = filterItemId ? [products.find(p => p.id === filterItemId)] : products;\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>{translate('product.code')}</TableCell>\n              <TableCell>{translate('product.name')}</TableCell>\n              <TableCell align=\"right\">{translate('product.quantity')}</TableCell>\n              <TableCell align=\"right\">{translate('shipping.quantityCheck')}</TableCell>\n              <TableCell align=\"right\">{translate('shipping.status')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {records.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <QuantityCheckRow row={row} key={row.id} onRowClick={onRowClick} onRemoveChecked={onRemoveChecked} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination rowsPerPageOptions={[5, 10, 25]} component=\"div\" count={products.length} rowsPerPage={rowsPerPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage} />\n    </React.Fragment>\n  )\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { useTranslate } from 'react-admin';\nimport QuantityCheckTable from './QuantityCheckTable';\n\nfunction Review({ formData }) {\n  const translate = useTranslate();\n  const { products } = formData.purchaseOrder;\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        {translate('menu.item.shipping')}\n      </Typography>\n      <QuantityCheckTable products={products} />\n    </React.Fragment>\n  );\n}\n\nexport default Review;\n","function uniqueLabelCheck({ input, backendData }) {\n  console.log(\"backend Data: \", backendData);\n  console.log(\"input: \", input);\n  const dataBool = [];\n  backendData.forEach(({ labelFrom, labelTo }, index) => {\n    dataBool[index] = { labelFrom: false, labelTo: false };\n\n    if (input.labelFrom > labelTo) {\n      dataBool[index].labelFrom = true;\n    }\n    if (input.labelTo > labelTo) {\n      dataBool[index].labelTo = true;\n    }\n    console.log({ labelFrom, labelTo });\n    console.log(dataBool[index]);\n  });\n  const res = dataBool.find(\n    ({ labelFrom, labelTo }) => labelFrom === true && labelTo === true\n  );\n  console.log(\"res: --\", res);\n  return res == undefined;\n}\n\nexport default uniqueLabelCheck;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  NumberInput,\n  useNotify,\n  ReferenceInput,\n  SelectInput,\n  DateInput,\n  TextInput,\n  AutocompleteInput,\n  FormDataConsumer,\n  required,\n} from \"react-admin\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { Add } from \"@material-ui/icons\";\nimport { Form } from \"react-final-form\";\nimport Typography from \"@material-ui/core/Typography\";\nimport sequentialNumber from \"../../../utils/sequentialNumber\";\nimport QuantityCheckTable from \"./QuantityCheckTable\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport uniqueLabelCheck from \"../../../utils/uniqueLabelCheck\";\n\nconst QUERY_SHIPPING_LABEL = gql`\n  query queryShippingItems {\n    shippingItems {\n      labelFrom\n      labelTo\n    }\n  }\n`;\n\nexport default ({ formData, setFormData }) => {\n  const notify = useNotify();\n  const { defaultLabel, setDefaultLabel } = useState(\"\");\n  const { purchaseOrder } = formData;\n  const { products } = purchaseOrder;\n  const { loading, data } = useQuery(QUERY_SHIPPING_LABEL);\n  // const [labelList, setLabelList] = useState([]);\n  const [labelList, setLabelList] = useState([]);\n  // console.log(\"labelList--outside: \", labelList);\n\n  useEffect(() => {\n    console.log(\"call useUffect: \", data);\n    if (data) {\n      setLabelList(data.shippingItems);\n      console.log(\"fetching data.....\", data.shippingItems);\n      console.log(\"inside\", labelList);\n    }\n  }, [data]);\n\n  const options = products.map((item) => ({\n    id: item.id,\n    name: item.product.code + \" - \" + item.product.nameChi,\n  }));\n\n  // const onSubmit = useCallback(\n  //   (values, form, labelList) => {\n  //     console.log(\"data.shippingItems: \", labelList);\n  //     const item = products.find((item) => item.id === values.itemId);\n  //     if (!item) {\n  //       notify(\"Please select product first\", \"error\");\n  //       return;\n  //     }\n  //     if (!item.checked) {\n  //       item.checked = [];\n  //     }\n  //     const labelTo = values.labelFrom\n  //       ? sequentialNumber.numberAfter(\n  //           values.labelFrom,\n  //           parseInt(values.exactQuantity, 10) - 1\n  //         )\n  //       : \"\";\n  //     console.log(\"start checking:.....\");\n  //     console.log(\"data: \", data && data.shippingItems);\n  //     // check with backend here\n  //     const checking = uniqueLabelCheck({\n  //       input: {\n  //         labelFrom: values.labelFrom,\n  //         labelTo,\n  //       },\n  //       backendData: data && data.shippingItems,\n  //     });\n\n  //     console.log(\"checking\", checking);\n\n  //     item.checked.push({ ...values, labelTo });\n  //     setFormData({\n  //       ...formData,\n  //       purchaseOrder: {\n  //         ...purchaseOrder,\n  //         products,\n  //       },\n  //     });\n  //     setTimeout(() =>\n  //       form.reset({\n  //         warehouseId: values.warehouseId,\n  //         expiryDate: values.expiryDate,\n  //         labelFrom: values.labelFrom\n  //           ? sequentialNumber.numberAfter(labelTo)\n  //           : \"\",\n  //       })\n  //     );\n  //   },\n  //   [setFormData, formData]\n  // );\n\n  const onSubmit = (values, form) => {\n    const item = products.find((item) => item.id === values.itemId);\n    if (!item) {\n      notify(\"Please select product first\", \"error\");\n      return;\n    }\n    if (!item.checked) {\n      item.checked = [];\n    }\n    const labelTo = values.labelFrom\n      ? sequentialNumber.numberAfter(\n          values.labelFrom,\n          parseInt(values.exactQuantity, 10) - 1\n        )\n      : \"\";\n    // check with backend here\n    const checking = uniqueLabelCheck({\n      input: {\n        labelFrom: values.labelFrom,\n        labelTo,\n      },\n      backendData: labelList,\n    });\n\n    console.log(\"checking\", checking);\n\n    item.checked.push({ ...values, labelTo });\n    setFormData({\n      ...formData,\n      purchaseOrder: {\n        ...purchaseOrder,\n        products,\n      },\n    });\n    setTimeout(() =>\n      form.reset({\n        warehouseId: values.warehouseId,\n        expiryDate: values.expiryDate,\n        labelFrom: values.labelFrom\n          ? sequentialNumber.numberAfter(labelTo)\n          : \"\",\n      })\n    );\n  };\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      render={({ handleSubmit, values, form, submitting, pristine }) => {\n        const { quantity, labelFrom } = values;\n        if (quantity && labelFrom) {\n          console.log(quantity, labelFrom);\n        }\n        const handleRowClick = (row) => {\n          form.change(\"itemId\", row.id);\n        };\n\n        const handleRemoveChecked = (i, row) => {\n          const item = products.find((p) => p.id === row.id);\n          item.checked.splice(i, 1);\n          setFormData({\n            ...formData,\n            purchaseOrder: {\n              ...purchaseOrder,\n              products,\n            },\n          });\n        };\n\n        return (\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n              <Grid item style={{ flexGrow: 1 }}>\n                <AutocompleteInput\n                  source=\"itemId\"\n                  fullWidth\n                  choices={options}\n                  validate={required()}\n                />\n              </Grid>\n              <Grid item>\n                <ReferenceInput\n                  label=\"Warehouse\"\n                  source=\"warehouseId\"\n                  reference=\"Warehouse\"\n                  filterToQuery={() => ({ type: \"NORMAL\" })}\n                >\n                  <SelectInput optionText=\"name\" validate={required()} />\n                </ReferenceInput>\n              </Grid>\n              <Grid item>\n                <DateInput source=\"expiryDate\" validate={required()} />\n              </Grid>\n              <Grid item>\n                <NumberInput\n                  source=\"exactQuantity\"\n                  label=\"Quantity\"\n                  validate={required()}\n                />\n              </Grid>\n              <Grid item>\n                <TextInput source=\"labelFrom\" defaultValue={defaultLabel} />\n              </Grid>\n              <Grid item>\n                <FormDataConsumer>\n                  {({ formData, ...rest }) => {\n                    const { exactQuantity, labelFrom } = formData;\n                    if (exactQuantity && labelFrom) {\n                      return (\n                        <Typography variant=\"body1\">\n                          {sequentialNumber.numberAfter(\n                            labelFrom,\n                            parseInt(exactQuantity - 1, 10)\n                          )}\n                        </Typography>\n                      );\n                    }\n                  }}\n                </FormDataConsumer>\n              </Grid>\n              <Grid item>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  disabled={submitting}\n                >\n                  <Add />\n                  Add Record\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={form.reset}\n                  disabled={submitting || pristine}\n                >\n                  Reset\n                </Button>\n              </Grid>\n            </Grid>\n            <FormDataConsumer>\n              {({ formData, ...rest }) => {\n                return (\n                  <QuantityCheckTable\n                    products={products}\n                    filterItemId={formData.itemId}\n                    onRowClick={handleRowClick}\n                    onRemoveChecked={handleRemoveChecked}\n                  />\n                );\n              }}\n            </FormDataConsumer>\n          </form>\n        );\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '@material-ui/core';\nimport QuantityCheckForm from './QuantityCheckForm';\n\nfunction QuantityCheck({ formData, setFormData, setCheckSuccess }) {\n  return (\n    <Box p={1}>\n      <QuantityCheckForm setFormData={setFormData} formData={formData} />\n    </Box>\n  );\n}\n\nQuantityCheck.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n};\n\nexport default QuantityCheck;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslate, useNotify } from \"react-admin\";\nimport { useHistory } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PurchaseOrderSelector from \"./PurchaseOrderSelector\";\nimport Review from \"./Review\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport QuantityCheck from \"./QuantityCheck\";\nimport dayjs from \"dayjs\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../../redux/breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst ADD_SHIPPING = gql`\n  mutation createShipping($data: ShippingCreateInput!) {\n    createShipping(data: $data) {\n      id\n      code\n    }\n  }\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const classes = useStyles();\n  const history = useHistory();\n  const notify = useNotify();\n  const [addShipping] = useMutation(ADD_SHIPPING);\n  const [activeStep, setActiveStep] = useState(0);\n  const [checkSuccess, setCheckSuccess] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const initialValues = {\n    purchaseOrder: null,\n    checkedProducts: {},\n    totalPrice: 0,\n  };\n  const [formData, setFormData] = useState(initialValues);\n  dispatch(\n    setBreadcrumbs([\n      { url: \"/Shipping\", label: \"Shipping\" },\n      { url: `/Shipping/create`, label: \"Create New\" },\n    ])\n  );\n\n  const steps = [\n    translate(\"shipping.selectPurchaseOrder\"),\n    translate(\"shipping.quantityCheck\"),\n    translate(\"shipping.review\"),\n  ];\n\n  const handleSave = () => {\n    const { purchaseOrder, totalPrice } = formData;\n\n    addShipping({\n      variables: {\n        data: {\n          code: `SP-${purchaseOrder.code}`,\n          purchaseOrderId: purchaseOrder.id,\n          deliveryAt: dayjs().toISOString(),\n          totalPrice,\n          products: {\n            create: purchaseOrder.products.reduce((arr, p) => {\n              const { checked } = p;\n              if (!checked || checked.length === 0) {\n                return arr;\n              }\n              const expectedQuantity = parseInt(p.quantity, 10) || 0;\n              const fields = checked.map((c) => ({\n                productId: p.product.id,\n                warehouseId: c.warehouseId,\n                labelFrom: c.labelFrom,\n                labelTo: c.labelTo,\n                expiryDate: c.expiryDate === \"-\" ? null : c.expiryDate,\n                expectedQuantity,\n                quantity: parseInt(c.exactQuantity, 10) || 0,\n                price: p.price,\n                totalPrice: expectedQuantity * p.price,\n              }));\n\n              return [...arr, ...fields];\n            }, []),\n          },\n        },\n      },\n    })\n      .then(() => {\n        history.push(\"/Shipping\");\n      })\n      .catch((error) => {\n        notify(`Error: ${error.message}`, \"warning\");\n      });\n  };\n\n  const checkQuantity = () => {\n    const { products } = formData.purchaseOrder;\n    for (let item of products) {\n      const expectedQuantity = parseInt(item.quantity, 10) || 0;\n      const quantity = item.checked\n        ? item.checked.reduce((sum, c) => {\n            sum += parseInt(c.exactQuantity, 10);\n            return sum;\n          }, 0)\n        : 0;\n      if (expectedQuantity !== quantity) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const handleNext = () => {\n    if (activeStep === 1 && !checkQuantity()) {\n      handleClickOpen();\n    } else {\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (option) => () => {\n    if (option) {\n      setOpen(false);\n      setActiveStep(activeStep + 1);\n    } else {\n      setOpen(false);\n    }\n  };\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Warning!!\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Some product's quantity not match! Continue?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose(false)} color=\"primary\">\n              No\n            </Button>\n            <Button onClick={handleClose(true)} color=\"primary\" autoFocus>\n              Yes\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <React.Fragment>\n          {activeStep === 0 && (\n            <PurchaseOrderSelector\n              formData={formData}\n              setFormData={setFormData}\n            />\n          )}\n          {activeStep === 1 && (\n            <QuantityCheck\n              setCheckSuccess={setCheckSuccess}\n              formData={formData}\n              setFormData={setFormData}\n            />\n          )}\n          {activeStep === 2 && <Review formData={formData} />}\n\n          <div className={classes.buttons}>\n            {activeStep > 0 && (\n              <Button onClick={handleBack} color=\"primary\">\n                {translate(\"common.prev\")}\n              </Button>\n            )}\n            {activeStep < 2 && (\n              <Button onClick={handleNext} color=\"primary\">\n                {translate(\"common.next\")}\n              </Button>\n            )}\n            {activeStep === 2 && (\n              <Button onClick={handleSave} color=\"primary\">\n                {translate(\"common.confirm\")}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      </Paper>\n    </main>\n  );\n};\n","import { DateField, NumberField, Datagrid, ReferenceField, ReferenceArrayField, Show, SimpleShowLayout, SingleFieldList, TextField, TopToolbar, useTranslate, Tab, ReferenceManyField, ShowController, ShowView } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BilingualField from '../../components/BilingualField';\nimport { useDispatch } from 'react-redux';\nimport { setBreadcrumbs } from '../../redux/breadcrumbs';\n\nexport const ShippingShow = props => {\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={9}>\n        <Typography variant=\"h6\">\n          Shipping no.&nbsp;\n        </Typography>\n        <ShowController title=\"Purchase Order Details\" actions={<React.Fragment />} {...props}>\n          {controllerProps => {\n            const label = controllerProps.record ? controllerProps.record.code : '';\n            const id = controllerProps.record ? controllerProps.record.id : '';\n            dispatch(setBreadcrumbs([{ url: '/Shipping', label: 'Shipping' }, { url: `/Shipping/${id}/show`, label: `Details: ${label}` }]));\n            return (\n              <ShowView {...controllerProps}>\n                <SimpleShowLayout>\n                  <TextField source=\"code\" label=\"Shipping No.\" />\n                  <DateField source=\"createdAt\" />\n                  <DateField source=\"updatedAt\" />\n                </SimpleShowLayout>\n              </ShowView>\n            );\n          }}\n        </ShowController>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Total Price</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField source=\"totalPrice\" options={{ style: 'currency', currency: 'HKD' }} />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Delivery Date</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <DateField source=\"deliveryAt\" />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Purchase Order</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceField label=\"Purchase Order\" reference=\"PurchaseOrder\" source=\"purchaseOrder.id\" link=\"show\">\n                <TextField source=\"code\" label=\"Purchase Order No.\" />\n              </ReferenceField>\n              <ReferenceField label=\"Purchase Order\" reference=\"PurchaseOrder\" source=\"purchaseOrder.id\" link=\"show\">\n                <NumberField source=\"totalPrice\" options={{ style: 'currency', currency: 'HKD' }} />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item container xs={12} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Items</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceArrayField label=\"Items\" reference=\"ShippingItem\" source=\"productsIds\">\n                <Datagrid>\n                  <ReferenceField label=\"#\" source=\"product.id\" reference=\"Product\">\n                    <TextField source=\"code\" label=\"Product No.\" />\n                  </ReferenceField>\n                  <ReferenceField label=\"Product Name\" source=\"product.id\" reference=\"Product\">\n                    <BilingualField source=\"name\" />\n                  </ReferenceField>\n                  <TextField source=\"labelFrom\" />\n                  <TextField source=\"labelTo\" />\n                  <DateField source=\"expiryDate\" />\n                  <NumberField source=\"price\" options={{ style: 'currency', currency: 'HKD' }} />\n                  <TextField source=\"quantity\" />\n                  <NumberField source=\"totalPrice\" options={{ style: 'currency', currency: 'HKD' }} />\n                </Datagrid>\n              </ReferenceArrayField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}","import React from \"react\";\nimport { List, Datagrid, EditButton, DeleteButton, TextField, DateField, Edit, SimpleForm, TextInput, required, DateInput, SelectInput, FormDataConsumer } from \"react-admin\";\nimport ShippingCreate from \"./Create\";\nimport { ShippingShow } from \"./Show\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\n// const redirect = () => '/Shipping';\n\nexport { ShippingCreate, ShippingShow };\n\nexport const ShippingEdit = (props) => {\n  const dispatch = useDispatch();\n  console.log(\"Edit props\", props);\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\">\n        <TextInput source=\"code\" validate={required()} label=\"Shipping No.\" />\n        <DateInput source=\"expectedDeliveryAt\" />\n        <SelectInput\n          source=\"state\"\n          choices={[\n            { id: \"DRAFT\", name: \"DRAFT\" },\n            { id: \"APPROVED\", name: \"APPROVED\" },\n            { id: \"CONFIRMED\", name: \"CONFIRMED\" },\n          ]}\n        />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/Shipping\", label: \"Shipping\" },\n                { url: `/Shipping/${formData.id}`, label: `Edit: ${formData.code}` },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const ShippingList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([{ url: \"/Shipping\", label: \"Shipping\" }]));\n  return (\n    <List {...props} filterDefaultValues={{ state_not: \"DELETE\" }} sort={{ field: \"createdAt\", order: \"DESC\" }}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Shipping No.\" />\n        <DateField source=\"deliveryAt\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import { useHistory } from \"react-router-dom\";\nimport {\n  ChipField,\n  DateField,\n  NumberField,\n  EditButton,\n  Datagrid,\n  ReferenceField,\n  ReferenceArrayField,\n  Show,\n  SimpleShowLayout,\n  SingleFieldList,\n  TextField,\n  TopToolbar,\n  useTranslate,\n  ShowController,\n  ShowView,\n} from \"react-admin\";\nimport Button from \"@material-ui/core/Button\";\nimport { Edit, Print } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\n// const ProductShowActions = ({ basePath, data, resource }) => {\n//   const translate = useTranslate();\n//   const print = (...props) => {\n//     console.log('Print Props', props);\n//   };\n//   return (\n//     <TopToolbar>\n//       <EditButton basePath={basePath} record={data} />\n//       <Button color=\"primary\" size=\"small\" onClick={print}>\n//         <Print />&nbsp;\n//         {translate('common.print')}\n//       </Button>\n//     </TopToolbar>\n//   );\n// };\n\nexport const ProductShow = (props) => {\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const history = useHistory();\n\n  const toEdit = () => {\n    const { basePath, id } = props;\n    history.push(`${basePath}/${id}/edit`);\n  };\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Typography variant=\"h6\">\n          Basic Information&nbsp;\n          <Button color=\"primary\" size=\"small\" onClick={toEdit}>\n            <Edit />\n            &nbsp;{translate(\"common.edit\")}\n          </Button>\n        </Typography>\n        <ShowController\n          title=\"Product Details\"\n          actions={<React.Fragment />}\n          {...props}\n        >\n          {(controllerProps) => {\n            const label = controllerProps.record\n              ? controllerProps.record.code\n              : \"\";\n            const id = controllerProps.record ? controllerProps.record.id : \"\";\n            dispatch(\n              setBreadcrumbs([\n                { url: \"/Product\", label: \"Product\" },\n                { url: `/Product/${id}/show`, label: `Details: ${label}` },\n              ])\n            );\n            return (\n              <ShowView {...controllerProps}>\n                <SimpleShowLayout>\n                  <TextField source=\"code\" label=\"Product No.\" />\n                  <TextField source=\"nameEn\" />\n                  <TextField source=\"nameChi\" />\n                  <TextField source=\"discount\" />\n                  <TextField source=\"shortDescription\" />\n                  <TextField source=\"longDescription\" />\n                  {/*<ImageField source=\"images\" src=\"src\" title=\"title\" />*/}\n                  <TextField source=\"sku\" />\n                  <TextField source=\"upc\" />\n                  <TextField source=\"minOrderQuantity\" />\n                  <TextField source=\"minStockLevel\" />\n                  <DateField source=\"onlineDate\" />\n                  <DateField source=\"offlineDate\" />\n                  <ReferenceArrayField\n                    label=\"Categories\"\n                    reference=\"ProductCategory\"\n                    source=\"categoriesIds\"\n                  >\n                    <SingleFieldList>\n                      <ChipField source=\"nameChi\" />\n                    </SingleFieldList>\n                  </ReferenceArrayField>\n                </SimpleShowLayout>\n              </ShowView>\n            );\n          }}\n        </ShowController>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Cost</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"cost\"\n                addLabel={false}\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Wholesales Prices</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"wholeSalePrice1\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"wholeSalePrice2\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"wholeSalePrice3\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"wholeSalePrice4\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"wholeSalePrice5\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Retails Prices</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <NumberField\n                source=\"retailPrice1\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"retailPrice2\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"retailPrice3\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"retailPrice4\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n              <NumberField\n                source=\"retailPrice5\"\n                options={{ style: \"currency\", currency: \"HKD\" }}\n              />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n      <Grid item container xs={3} direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Total Stock</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <TextField source=\"quantity\" addLabel={false} />\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Warehouse Summary</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceArrayField\n                reference=\"WarehouseSummary\"\n                source=\"warehouseSummariesIds\"\n              >\n                <Datagrid>\n                  <ReferenceField\n                    label=\"Warehouse\"\n                    source=\"warehouse.id\"\n                    reference=\"Warehouse\"\n                  >\n                    <TextField source=\"name\" />\n                  </ReferenceField>\n                  <TextField source=\"quantity\" />\n                </Datagrid>\n              </ReferenceArrayField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Expiry Date Summary</Typography>\n          <Show actions={<React.Fragment />} {...props}>\n            <SimpleShowLayout>\n              <ReferenceArrayField\n                reference=\"ExpiryDateSummary\"\n                source=\"expiryDateSummariesIds\"\n              >\n                <Datagrid>\n                  <DateField source=\"expiryDate\" />\n                  <TextField source=\"quantity\" />\n                </Datagrid>\n              </ReferenceArrayField>\n            </SimpleShowLayout>\n          </Show>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  EditButton,\n  DeleteButton,\n  TextField,\n  ImageField,\n  SingleFieldList,\n  ChipField,\n  TextInput,\n  NumberInput,\n  ImageInput,\n  DateInput,\n  ReferenceArrayField,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  required,\n  SelectInput,\n  FormDataConsumer,\n} from \"react-admin\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { ProductShow } from \"./Show\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/Product\";\n\nexport { ProductShow };\n\nconst breadcrumbBase = { url: \"/Product\", label: \"Product\" };\n\nexport const ProductCreate = (props) => {\n  const dispatch = useDispatch();\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/Product/create\", label: \"Create New\" },\n    ])\n  );\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Product No.\" />\n        <TextInput source=\"brandEn\" validate={required()} fullWidth />\n        <TextInput source=\"brandChi\" validate={required()} fullWidth />\n        <TextInput source=\"nameEn\" validate={required()} fullWidth />\n        <TextInput source=\"nameChi\" validate={required()} fullWidth />\n        <NumberInput source=\"package\" validate={required()} />\n        <TextInput source=\"discount\" />\n        <TextInput source=\"weight\" validate={required()} />\n        <TextInput source=\"shortDescription\" />\n        <TextInput source=\"longDescription\" />\n        <ImageInput source=\"images\" accept=\"image/*\" multiple>\n          <ImageField source=\"src\" title=\"title\" />\n        </ImageInput>\n        <TextInput source=\"sku\" />\n        <TextInput source=\"upc\" validate={required()} />\n        <NumberInput source=\"cost\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice1\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice2\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice3\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice4\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice5\" validate={required()} />\n        <NumberInput source=\"retailPrice1\" validate={required()} />\n        <NumberInput source=\"retailPrice2\" validate={required()} />\n        <NumberInput source=\"retailPrice3\" validate={required()} />\n        <NumberInput source=\"retailPrice4\" validate={required()} />\n        <NumberInput source=\"retailPrice5\" validate={required()} />\n        <NumberInput source=\"minOrderQuantity\" defaultValue={10} />\n        <NumberInput source=\"minStockLevel\" defaultValue={0} />\n        <DateInput source=\"onlineDate\" />\n        <DateInput source=\"offlineDate\" />\n        {/* <ReferenceArrayInput\n          label=\"Category\"\n          source=\"categoriesIds\"\n          reference=\"ProductCategory\"\n        >\n          <SelectArrayInput optionText=\"nameEn\" />\n        </ReferenceArrayInput> */}\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const ProductEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Product No.\" />\n        <TextInput source=\"brandEn\" validate={required()} fullWidth />\n        <TextInput source=\"brandChi\" validate={required()} fullWidth />\n        <TextInput source=\"nameEn\" validate={required()} fullWidth />\n        <TextInput source=\"nameChi\" validate={required()} fullWidth />\n        <NumberInput source=\"package\" validate={required()} />\n        <TextInput source=\"discount\" />\n        <TextInput source=\"weight\" validate={required()} />\n        <TextInput source=\"shortDescription\" />\n        <TextInput source=\"longDescription\" />\n        <ImageInput source=\"images\" accept=\"image/*\" multiple>\n          <ImageField source=\"src\" title=\"title\" />\n        </ImageInput>\n        <TextInput source=\"sku\" />\n        <TextInput source=\"upc\" />\n        <NumberInput source=\"cost\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice1\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice2\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice3\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice4\" validate={required()} />\n        <NumberInput source=\"wholeSalePrice5\" validate={required()} />\n        <NumberInput source=\"minOrderQuantity\" />\n        <NumberInput source=\"minStockLevel\" />\n        <DateInput source=\"onlineDate\" />\n        <DateInput source=\"offlineDate\" />\n        <ReferenceArrayInput\n          label=\"Category\"\n          source=\"categoriesIds\"\n          reference=\"ProductCategory\"\n        >\n          <SelectArrayInput optionText=\"nameEn\" />\n        </ReferenceArrayInput>\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                breadcrumbBase,\n                {\n                  url: `/Product/${formData.id}`,\n                  label: `Edit: ${formData.code}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const ProductList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Product No.\" />\n        <BilingualField source=\"name\" />\n        <ReferenceArrayField\n          label=\"Categories\"\n          reference=\"ProductCategory\"\n          source=\"categoriesIds\"\n        >\n          <SingleFieldList>\n            <ChipField source=\"nameChi\" />\n          </SingleFieldList>\n        </ReferenceArrayField>\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  ShowController,\n  ShowView,\n  SimpleShowLayout,\n  EditButton,\n  DeleteButton,\n  FunctionField,\n  TextField,\n  ReferenceField,\n  EmailField,\n  UrlField,\n  DateField,\n  SelectField,\n  ReferenceInput,\n  TextInput,\n  SelectInput,\n  FormDataConsumer,\n  required,\n  email,\n  CheckboxGroupInput,\n  ReferenceArrayField,\n  SingleFieldList,\n  ChipField,\n  ArrayField,\n} from \"react-admin\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport BilingualField from \"../../components/BilingualField\";\n\nconst redirect = () => \"/Customer\";\nconst breadcrumbBase = { url: \"/Customer\", label: \"Customer\" };\n\nexport const CustomerCreate = (props) => {\n  const dispatch = useDispatch();\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/Customer/create\", label: \"Create New\" },\n    ])\n  );\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Customer No.\" />\n        <TextInput source=\"nameEn\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"mobile\" validate={required()} />\n        <TextInput source=\"email\" validate={required()} />\n        <TextInput source=\"district\" />\n        <TextInput source=\"billingAddress\" />\n        <TextInput source=\"salesman\" />\n        <TextInput source=\"website\" />\n        <TextInput source=\"remark\" multiline />\n        <ReferenceInput\n          label=\"Group\"\n          source=\"group.id\"\n          reference=\"CustomerGroup\"\n        >\n          <SelectInput optionText=\"name\" validate={required()} />\n        </ReferenceInput>\n\n        <SelectInput\n          source=\"wholesalePlan\"\n          validate={required()}\n          choices={[\n            { id: 1, name: \"Plan 1\" },\n            { id: 2, name: \"Plan 2\" },\n            { id: 3, name: \"Plan 3\" },\n            { id: 4, name: \"Plan 4\" },\n            { id: 5, name: \"Plan 5\" },\n          ]}\n        />\n        <SelectInput\n          source=\"paymentMethod\"\n          validate={required()}\n          choices={[\n            { id: \"credit\", name: \"Credit\" },\n            { id: \"debit\", name: \"Debit\" },\n            { id: \"c.o.d\", name: \"C.O.D\" },\n          ]}\n        />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const CustomerEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Customer No.\" />\n        <TextInput source=\"nameEn\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"mobile\" />\n        <TextInput source=\"email\" validate={email()} />\n        <TextInput source=\"district\" />\n        <TextInput source=\"billingAddress\" />\n        <TextInput source=\"salesman\" />\n        <TextInput source=\"website\" />\n        <TextInput source=\"remark\" multiline />\n        <ReferenceInput\n          label=\"Group\"\n          source=\"group.id\"\n          reference=\"CustomerGroup\"\n        >\n          <SelectInput optionText=\"name\" validate={required()} />\n        </ReferenceInput>\n        <SelectInput\n          source=\"wholesalePlan\"\n          validate={required()}\n          choices={[\n            { id: 1, name: \"Plan 1\" },\n            { id: 2, name: \"Plan 2\" },\n            { id: 3, name: \"Plan 3\" },\n            { id: 4, name: \"Plan 4\" },\n            { id: 5, name: \"Plan 5\" },\n          ]}\n        />\n        <SelectInput\n          source=\"paymentMethod\"\n          validate={required()}\n          choices={[\n            { id: \"CREDIT\", name: \"Credit\" },\n            { id: \"DEBIT\", name: \"Debit\" },\n            { id: \"COD\", name: \"C.O.D\" },\n          ]}\n        />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              setBreadcrumbs([\n                breadcrumbBase,\n                {\n                  url: `/Customer/${formData.id}`,\n                  label: `Edit: ${formData.nameEn}`,\n                },\n              ])\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\nfunction getWeekDay(dayNum) {\n  switch (dayNum) {\n    case 0:\n      return \"Sunday\";\n    case 1:\n      return \"Monday\";\n    case 2:\n      return \"Tuesday\";\n    case 3:\n      return \"Wednesday\";\n    case 4:\n      return \"Thursday\";\n    case 5:\n      return \"Friday\";\n    case 6:\n      return \"Saturday\";\n    default:\n      break;\n  }\n}\n\nexport const CustomerShow = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        console.log(\"controllerProps: \", controllerProps);\n        const label = controllerProps.record\n          ? controllerProps.record.nameEn\n          : \"\";\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(\n          setBreadcrumbs([\n            breadcrumbBase,\n            { url: `/Customer/${id}/show`, label: `Details: ${label}` },\n          ])\n        );\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <TextField source=\"code\" />\n              <TextField source=\"nameEn\" />\n              <TextField source=\"nameChi\" />\n              <TextField source=\"wholesalePlan\" />\n              <TextField source=\"mobile\" />\n              <EmailField source=\"email\" />\n              <TextField source=\"district\" />\n              <TextField source=\"billingAddress\" />\n              <TextField source=\"salesman\" />\n              <TextField source=\"website\" />\n              <TextField source=\"remark\" />\n              <ReferenceField\n                label=\"Group\"\n                source=\"group.id\"\n                reference=\"CustomerGroup\"\n              >\n                <TextField source=\"name\" />\n              </ReferenceField>\n              <TextField source=\"paymentMethod\" />\n              <ReferenceArrayField\n                label=\"Shops\"\n                reference=\"CustomerShop\"\n                source=\"shopsIds\"\n              >\n                <SingleFieldList>\n                  <ReferenceField\n                    source=\"id\"\n                    reference=\"CustomerShop\"\n                    link={(shop, referece) => `/CustomerShop/${shop.id}/show`}\n                  >\n                    <TextField source=\"nameChi\" />\n                  </ReferenceField>\n                </SingleFieldList>\n              </ReferenceArrayField>\n\n              <ReferenceArrayField\n                label=\"Customer Coupons\"\n                reference=\"CustomerCoupon\"\n                source=\"couponsIds\"\n                filter={{ state_not_in: \"EMPTY\" }}\n              >\n                <Datagrid>\n                  <TextField source=\"code\" />\n                  <TextField source=\"name\" />\n                  <TextField source=\"discount\" />\n                  <TextField source=\"state\" />\n                  <TextField source=\"quantity\" />\n                  <TextField source=\"type\" />\n                </Datagrid>\n              </ReferenceArrayField>\n              <DateField source=\"createdAt\" />\n              <DateField source=\"updatedAt\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const CustomerList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props} sort={{ field: \"createdAt\", order: \"DESC\" }}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" />\n        <BilingualField source=\"name\" />\n        <ReferenceField\n          label=\"Group\"\n          source=\"group.id\"\n          reference=\"CustomerGroup\"\n          link=\"show\"\n        >\n          <TextField source=\"name\" />\n        </ReferenceField>\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  ShowController,\n  ShowView,\n  SimpleShowLayout,\n  EditButton,\n  DeleteButton,\n  TextField,\n  ReferenceField,\n  ReferenceInput,\n  TextInput,\n  SelectInput,\n  ChipField,\n  usePermissions,\n  PasswordInput,\n} from \"react-admin\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/User\";\nconst breadcrumbBase = { url: \"/User\", label: \"User\" };\n\nexport const UserCreate = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n  const group = JSON.parse(localStorage.getItem(\"group\"));\n\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/User/create\", label: \"Create New\" },\n    ])\n  );\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" />\n        <PasswordInput source=\"password\" />\n        <ReferenceInput\n          label=\"Company Group\"\n          source=\"group.id\"\n          reference=\"UserGroup\"\n          filter={permissions === \"superadmin\" ? {} : { id: group.id }}\n        >\n          <SelectInput source=\"name\" />\n        </ReferenceInput>\n        <SelectInput\n          source=\"permission\"\n          choices={\n            permissions === \"superadmin\"\n              ? [\n                  { id: \"ADMIN\", name: \"ADMIN\" },\n                  { id: \"ACCOUNT\", name: \"ACCOUNT\" },\n                  { id: \"SALES\", name: \"SALES\" },\n                  { id: \"INVENTORY\", name: \"INVENTORY\" },\n                  { id: \"SUPERADMIN\", name: \"SUPERADMIN\" },\n                ]\n              : [\n                  { id: \"ADMIN\", name: \"ADMIN\" },\n                  { id: \"ACCOUNT\", name: \"ACCOUNT\" },\n                  { id: \"SALES\", name: \"SALES\" },\n                  { id: \"INVENTORY\", name: \"INVENTORY\" },\n                ]\n          }\n        />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const UserEdit = (props) => {\n  const dispatch = useDispatch();\n  const group = JSON.parse(localStorage.getItem(\"group\"));\n  const { loaded, permissions } = usePermissions();\n  dispatch(\n    setBreadcrumbs([breadcrumbBase, { url: \"/User/edit\", label: \"User Edit\" }])\n  );\n\n  return (\n    <Edit {...props}>\n      {permissions === \"admin\" || permissions === \"superadmin\" ? (\n        <SimpleForm variant=\"standard\" redirect={redirect}>\n          <TextInput source=\"name\" />\n          {permissions === \"superadmin\" ? (\n            <PasswordInput source=\"password\" />\n          ) : null}\n          <ReferenceInput\n            label=\"Company Group\"\n            source=\"group.id\"\n            reference=\"UserGroup\"\n            filter={permissions === \"superadmin\" ? {} : { id: group.id }}\n          >\n            <SelectInput source=\"name\" />\n          </ReferenceInput>\n\n          <SelectInput\n            source=\"permission\"\n            choices={\n              permissions === \"superadmin\"\n                ? [\n                    { id: \"ADMIN\", name: \"ADMIN\" },\n                    { id: \"ACCOUNT\", name: \"ACCOUNT\" },\n                    { id: \"SALES\", name: \"SALES\" },\n                    { id: \"INVENTORY\", name: \"INVENTORY\" },\n                    { id: \"SUPERADMIN\", name: \"SUPERADMIN\" },\n                  ]\n                : [\n                    { id: \"ADMIN\", name: \"ADMIN\" },\n                    { id: \"ACCOUNT\", name: \"ACCOUNT\" },\n                    { id: \"SALES\", name: \"SALES\" },\n                    { id: \"INVENTORY\", name: \"INVENTORY\" },\n                  ]\n            }\n          />\n        </SimpleForm>\n      ) : (\n        <h1>No Permission</h1>\n      )}\n    </Edit>\n  );\n};\n\nexport const UserShow = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(\n          setBreadcrumbs([\n            breadcrumbBase,\n            { url: `/User/${id}/show`, label: `Details` },\n          ])\n        );\n        return (\n          <ShowView\n            {...props}\n            {...controllerProps}\n            hasEdit={permissions === \"superadmin\" || permissions === \"admin\"}\n          >\n            <SimpleShowLayout>\n              <TextField source=\"name\" />\n              <TextField source=\"permission\" />\n              {permissions === \"superadmin\" ? (\n                <TextField source=\"password\" />\n              ) : null}\n              <ReferenceField\n                label=\"company Group\"\n                source=\"group.id\"\n                reference=\"UserGroup\"\n                link=\"show\"\n              >\n                <TextField source=\"name\" />\n              </ReferenceField>\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const UserList = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n  const group = JSON.parse(localStorage.getItem(\"group\"));\n  console.log(\"group\", group);\n  console.log(\"permissions\", permissions);\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n\n  return (\n    <List\n      {...props}\n      hasCreate={permissions === \"admin\" || permissions === \"superadmin\"}\n      sort={{ field: \"createdAt\", order: \"DESC\" }}\n      filterDefaultValues={\n        permissions === \"superadmin\"\n          ? {}\n          : {\n              permission_not: \"SUPERADMIN\",\n              group: { id: group.id },\n            }\n      }\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"name\" />\n        <ReferenceField\n          label=\"company group\"\n          source=\"group.id\"\n          reference=\"UserGroup\"\n          link=\"show\"\n        >\n          <ChipField source=\"name\" />\n        </ReferenceField>\n        {/* <TextField source=\"group\" /> */}\n        <TextField source=\"permission\" />\n        {permissions === \"admin\" || permissions === \"superadmin\" ? (\n          <EditButton />\n        ) : null}\n        {permissions === \"superadmin\" ? <DeleteButton /> : null}\n      </Datagrid>\n    </List>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  ShowController,\n  ShowView,\n  SimpleShowLayout,\n  EditButton,\n  DeleteButton,\n  FunctionField,\n  TextField,\n  ReferenceField,\n  EmailField,\n  UrlField,\n  DateField,\n  SelectField,\n  ReferenceInput,\n  TextInput,\n  SelectInput,\n  FormDataConsumer,\n  required,\n  email,\n  CheckboxGroupInput,\n  ReferenceArrayField,\n  SingleFieldList,\n  ChipField,\n  usePermissions,\n  Loading,\n  PasswordInput,\n} from \"react-admin\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\n\nconst redirect = () => \"/UserGroup\";\nconst breadcrumbBase = { url: \"/UserGroup\", label: \"UserGroup\" };\n\nexport const UserGroupCreate = (props) => {\n  const dispatch = useDispatch();\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/UserGroup/create\", label: \"Create New\" },\n    ])\n  );\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const UserGroupEdit = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n  dispatch(\n    setBreadcrumbs([\n      breadcrumbBase,\n      { url: \"/UserGroup/edit\", label: \"UserGroup Edit\" },\n    ])\n  );\n\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport const UserGroupShow = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(\n          setBreadcrumbs([\n            breadcrumbBase,\n            { url: `/UserGroup/${id}/show`, label: `Details` },\n          ])\n        );\n        return (\n          <ShowView\n            {...props}\n            {...controllerProps}\n            hasEdit={permissions === \"admin\" || permissions === \"superadmin\"}\n          >\n            <SimpleShowLayout>\n              <TextField source=\"name\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const UserGroupList = (props) => {\n  const dispatch = useDispatch();\n  const { loaded, permissions } = usePermissions();\n  const group = JSON.parse(localStorage.getItem(\"group\"));\n  console.log(\"group\", group.id);\n  console.log(\"permissions\", permissions);\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n\n  return (\n    <List\n      {...props}\n      hasCreate={permissions === \"superadmin\"}\n      sort={{ field: \"name\", order: \"DESC\" }}\n      filterDefaultValues={\n        permissions === \"superadmin\" ? null : { id: group.id }\n      }\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"name\" />\n        {permissions === \"admin\" || permissions === \"superadmin\" ? (\n          <EditButton />\n        ) : null}\n        {permissions === \"superadmin\" ? <DeleteButton /> : null}\n      </Datagrid>\n    </List>\n  );\n};\n","import React from 'react';\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  SimpleShowLayout,\n\n\n  EditButton,\n  DeleteButton,\n\n  TextField,\n\n  TextInput,\n\n  required, FormDataConsumer, ShowController, ShowView,\n} from 'react-admin';\nimport { useDispatch } from 'react-redux';\nimport { setBreadcrumbs } from '../../redux/breadcrumbs';\n\nconst redirect = () => '/CustomerGroup';\nconst breadcrumbBase = { url: '/CustomerGroup', label: 'CustomerGroup' };\n\nexport const CustomerGroupCreate = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([\n    breadcrumbBase,\n    { url: '/CustomerGroup/create', label: 'Create New' },\n  ]));\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport const CustomerGroupEdit = props => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"name\" validate={required()} />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerGroup/${formData.id}`, label: `Edit: ${formData.name}` }]));\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport const CustomerGroupShow = props => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {controllerProps => {\n        const label = controllerProps.record ? controllerProps.record.name : '';\n        const id = controllerProps.record ? controllerProps.record.id : '';\n        dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerGroup/${id}/show`, label: `Details: ${label}` }]));\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <TextField source=\"name\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const CustomerGroupList = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"name\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from \"react\";\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  SimpleShowLayout,\n  EditButton,\n  DeleteButton,\n  TextField,\n  TextInput,\n  required,\n  FormDataConsumer,\n  ShowController,\n  ShowView,\n  ReferenceField,\n  FunctionField,\n  CheckboxGroupInput,\n  SelectInput,\n  ReferenceInput,\n  DateField,\n} from \"react-admin\";\nimport { useDispatch } from \"react-redux\";\nimport { setBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport BilingualField from \"../../components/BilingualField\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst redirect = () => \"/CustomerShop\";\nconst breadcrumbBase = { url: \"/CustomerShop\", label: \"CustomerShop\" };\nconst optionRenderer = (customer) => `${customer.code} ${customer.nameChi}`;\n\nconst GET_CUSTOMER = gql`\n  query customers($where: CustomerWhereInput) {\n    customers(where: $where) {\n      id\n    }\n  }\n`;\nexport const CustomerShopCreate = (props) => {\n  const { loading: fetching, data } = useQuery(GET_CUSTOMER, {});\n  console.log(\"data\", data && data);\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase, { url: \"/CustomerShop/create\", label: \"Create New\" }]));\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <ReferenceInput label=\"Customer\" source=\"customer.id\" reference=\"Customer\" perPage={data && data.customers.length}>\n          <SelectInput optionText={optionRenderer} validate={required()} />\n        </ReferenceInput>\n        <TextInput label=\"Shop No.\" source=\"code\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"nameEn\" />\n        <TextInput source=\"phone\" />\n        <TextInput source=\"deliverAddress\" validate={required()} />\n        <CheckboxGroupInput\n          source=\"deliveryDay\"\n          choices={[\n            { id: 0, name: \"Sunday\" },\n            { id: 1, name: \"Monday\" },\n            { id: 2, name: \"Tuesday\" },\n            { id: 3, name: \"Wednesday\" },\n            { id: 4, name: \"Thursday\" },\n            { id: 5, name: \"Friday\" },\n            { id: 6, name: \"Saturday\" },\n          ]}\n        />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport const CustomerShopEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" >\n        <TextInput source=\"nameChi\" />\n        <TextInput source=\"nameEn\" />\n        <TextInput source=\"phone\" />\n        <TextInput source=\"deliveryAddress\" />\n        <CheckboxGroupInput\n          source=\"deliveryDay\"\n          choices={[\n            { id: 0, name: \"Sunday\" },\n            { id: 1, name: \"Monday\" },\n            { id: 2, name: \"Tuesday\" },\n            { id: 3, name: \"Wednesday\" },\n            { id: 4, name: \"Thursday\" },\n            { id: 5, name: \"Friday\" },\n            { id: 6, name: \"Saturday\" },\n          ]}\n        />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerShop/${formData.id}`, label: `Edit: ${formData.name}` }]));\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nfunction getWeekDay(dayNum) {\n  switch (dayNum) {\n    case 0:\n      return \"Sunday\";\n    case 1:\n      return \"Monday\";\n    case 2:\n      return \"Tuesday\";\n    case 3:\n      return \"Wednesday\";\n    case 4:\n      return \"Thursday\";\n    case 5:\n      return \"Friday\";\n    case 6:\n      return \"Saturday\";\n    default:\n      break;\n  }\n}\n\nexport const CustomerShopShow = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => {\n        const id = controllerProps.record ? controllerProps.record.id : \"\";\n        dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerShop/${id}/show`, label: `Details` }]));\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <ReferenceField label=\"Customer\" source=\"customer.id\" reference=\"Customer\" link={(customer, referece) => `/Customer/${customer.customer.id}/show`}>\n                <BilingualField source=\"name\" />\n              </ReferenceField>\n              <TextField label=\"Shop No.\" source=\"code\" />\n              <TextField source=\"nameChi\" />\n              <TextField source=\"nameEn\" />\n              <TextField source=\"phone\" />\n              <TextField source=\"deliverAddress\" />\n              <FunctionField label=\"Delivery Day\" source=\"deliveryDay\" render={(shop) => shop.deliveryDay.map((day, index) => `${getWeekDay(day)}${index === shop.deliveryDay.length - 1 ? \".\" : \",\"}`)} />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n};\n\nexport const CustomerShopList = (props) => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props} title=\"Customer Shop\">\n      <Datagrid rowClick=\"show\">\n        <TextField label=\"Shop No.\" source=\"code\" />\n        <TextField source=\"nameChi\" />\n        <TextField source=\"deliverAddress\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React from 'react';\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  List,\n  Datagrid,\n  Show,\n  SimpleShowLayout,\n\n\n  EditButton,\n  DeleteButton,\n\n  TextField,\n\n  TextInput,\n\n  required, FormDataConsumer, ShowController, ShowView,\n} from 'react-admin';\nimport { useDispatch } from 'react-redux';\nimport { setBreadcrumbs } from '../../redux/breadcrumbs';\n\nconst redirect = () => '/ProductCategory';\nconst breadcrumbBase = { url: '/ProductCategory', label: 'Product Category' };\n\nexport const ProductCategoryCreate = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([\n    breadcrumbBase,\n    { url: '/ProductCategory/create', label: 'Create New' },\n  ]));\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"nameEn\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"detail\" multiline />\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport const ProductCategoryEdit = props => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"nameEn\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"detail\" multiline />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(setBreadcrumbs([breadcrumbBase, { url: `/ProductCategory/${formData.id}`, label: `Edit: ${formData.nameEn}` }]));\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport const ProductCategoryShow = props => {\n  const dispatch = useDispatch();\n  return (\n    <ShowController {...props}>\n      {controllerProps => {\n        const label = controllerProps.record ? controllerProps.record.nameEn : '';\n        const id = controllerProps.record ? controllerProps.record.id : '';\n        dispatch(setBreadcrumbs([breadcrumbBase, { url: `/CustomerGroup/${id}/show`, label: `Details: ${label}` }]));\n        return (\n          <ShowView {...props} {...controllerProps}>\n            <SimpleShowLayout>\n              <TextField source=\"nameEn\" />\n              <TextField source=\"nameChi\" />\n            </SimpleShowLayout>\n          </ShowView>\n        );\n      }}\n    </ShowController>\n  );\n}\n\nexport const ProductCategoryList = props => {\n  const dispatch = useDispatch();\n  dispatch(setBreadcrumbs([breadcrumbBase]));\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"nameEn\" />\n        <TextField source=\"nameChi\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n}\n","export default {\n  softwareName: \"Ambrossoft Supplier Management System\",\n  menu: {\n    item: {\n      home: \"Dashboard\",\n      replenish: \"Replenish\",\n      sale: \"Sale\",\n      settings: \"Settings\",\n      reports: \"Reports\",\n      supplier: \"Supplier\",\n      purchaseOrder: \"Purchase Order\",\n      shipment: \"Shipment\",\n      deliveryNote: \"Delivery Note\",\n      warehouse: \"Warehouse\",\n      inventory: \"Inventory\",\n      salesOrder: \"Sales Order\",\n      invoice: \"Invoice\",\n      customer: \"Customer\",\n      customerGroup: \"Customer Group\",\n      customerShop: \"Customer Shop\",\n      user: \"User\",\n      userGroup: \"UserGroup\",\n      product: \"Product\",\n      productCategory: \"Product Category\",\n      salesShipping: \"Sales Shipping\",\n      receivePayment: \"Receive Payment\",\n      monthly: \"Monthly\",\n      quarterly: \"Quarterly\",\n      annual: \"Annual\",\n      warehousing: \"Warehousing\",\n      labelling: \"Labelling\",\n      shipping: \"Shipping\",\n      packing: \"Packing\",\n      stockCheck: \"Stock Check\",\n      stockTransfer: \"Stock Transfer\",\n      stockDispose: \"Stock Dispose\",\n      noNeedThisProduct: \"You don't need this item\",\n    },\n  },\n  dashboard: {\n    supplier: \"Supplier\",\n    purchaseOrder: \"Purchase Order\",\n    shipment: \"Shipment\",\n    delivery: \"Delivery\",\n    warehouse: \"Warehouse\",\n    inventory: \"Inventory\",\n    salesOrder: \"Sales Order\",\n    invoice: \"Invoice\",\n    customer: \"Customer\",\n    customerGroup: \"Customer Group\",\n    product: \"Product\",\n    productCategory: \"Product Category\",\n    salesShipping: \"Sales Shipping\",\n    receivePayment: \"Receive Payment\",\n  },\n  product: {\n    code: \"Product No.\",\n    product: \"Product\",\n    cost: \"Cost\",\n    price: \"Price\",\n    quantity: \"Quantity\",\n    expiryDate: \"Expiry Date\",\n    label: \"Label\",\n    name: \"Name\",\n    warehouse: \"Warehouse\",\n    wholeSalePrice: \"Whole Sale Price\",\n    minOrderQuantity: \"Min. Order Qty.\",\n    expiredIn6Months: \"Expired In 6 Months\",\n  },\n  supplier: {\n    supplier: \"Supplier\",\n    replenish: \"Replenish Now!\",\n  },\n  purchaseOrder: {\n    selectProducts: \"Select Products\",\n    purchaseOrder: \"Purchase Order\",\n    code: \"Purchase Order No.\",\n    createPurchaseOrder: \"Create Purchase Order\",\n    editPurchaseOrder: \"Edit Purchase Order\",\n    title: \"Purchase Order\",\n    drafts: \"Drafts\",\n    waitingShipment: \"Waiting Shipment\",\n    completed: \"Completed\",\n    basicInfo: \"Basic Info\",\n    products: \"Products\",\n    productCode: \"Product Code\",\n    productName: \"Product Name\",\n    expectedDeliveryAt: \"Expected Delivery Date\",\n    supplier: \"Supplier\",\n    state: \"Status\",\n    review: \"Review\",\n    purchaseOrderDetails: \"Purchase Order Details\",\n    totalPrice: \"Total Price\",\n  },\n  salesOrder: {\n    selectProducts: \"Select Products\",\n    salesOrder: \"Sales Order\",\n    code: \"Sales Order No.\",\n    contactPerson: \"Contact Person\",\n    createSalesOrder: \"Create Sales Order\",\n    editSalesOrder: \"Edit Sales Order\",\n    title: \"Sales Order\",\n    drafts: \"Drafts\",\n    waitingShipment: \"Waiting Shipment\",\n    completed: \"Completed\",\n    basicInfo: \"Basic Info\",\n    products: \"Products\",\n    productCode: \"Product Code\",\n    productName: \"Product Name\",\n    expectedDeliveryAt: \"Delivery Date\",\n    supplier: \"Supplier\",\n    state: \"Status\",\n    review: \"Review\",\n    salesOrderDetails: \"Sales Order Details\",\n    customer: \"Customer\",\n    totalPrice: \"Total Price\",\n  },\n  shipping: {\n    warehousing: \"Warehousing\",\n    productList: \"Product List\",\n    shipment: \"Shipment\",\n    shippingDelivery: \"Shipping Delivery\",\n    warehouse: \"Warehouse\",\n    needToUpdatePO: \"Quantity not match?\",\n    clickHere: \"Update Purchase Order\",\n    products: \"Products\",\n    labelling: \"Labelling\",\n    unlabelledItem: \"Unlabelled Item\",\n    labelFrom: \"Label From\",\n    labelTo: \"Label To\",\n    selectPurchaseOrder: \"Select Purchase Order\",\n    quantityCheck: \"Quantity Check\",\n    review: \"Review\",\n    selectWarehouse: \"Select Warehouse\",\n    status: \"Status\",\n    allTheFollowing: \"Update items?\",\n    changeAll: \"This and following items\",\n    changeThisOnly: \"This item only\",\n  },\n  shipment: {\n    waitingShipment: \"Waiting Shipment\",\n    completed: \"Completed\",\n  },\n  invoice: {\n    newOrders: \"New Orders\",\n    completed: \"Completed Orders\",\n    selectSalesOrder: \"Select Sales Order\",\n    shippingDetails: \"Shipping Details\",\n    review: \"Review\",\n    shipmentDate: \"Shipment Date\",\n    state: \"Status\",\n    code: \"Invoice No.\",\n    totalPrice: \"Total Price\",\n    contactPerson: \"Contact Person\",\n    salesOrder: \"Sales Order\",\n    invoice: \"Invoice\",\n    invoiceDetails: \"Invoice Details\",\n    customer: \"Customer\",\n  },\n  inventory: {\n    inventory: \"Inventory\",\n    stockTransfer: \"Stock Transfer\",\n    stockDispose: \"Stock Dispose\",\n    stock: \"Stock\",\n    warehouse: \"Warehouse\",\n    trash: \"Trash\",\n    productItem: \"Product Item\",\n    brand: \"Brand\",\n    countryOfOrigin: \"Country of origin\",\n    listView: \"List View\",\n    heatMapView: \"Heat Map View\",\n  },\n  delivery: {\n    newOrders: \"New Orders\",\n    completed: \"Completed Orders\",\n  },\n  deliveryNote: {\n    selectInvoice: \"Select Invoice\",\n    quantity: \"Quantity\",\n    quantityCheck: \"Quantity Check\",\n    quantityNeed: \"Quantity Needed\",\n    packingBox: \"Packing Box\",\n    deliveryDate: \"Delivery Date\",\n    products: \"Products\",\n    review: \"Review\",\n    labelNo: \"Label #\",\n  },\n  receivePayment: {\n    newOrders: \"New Orders\",\n    completed: \"Completed Orders\",\n    selectInvoice: \"Select Invoice\",\n    quantity: \"Quantity\",\n    quantityCheck: \"Quantity Check\",\n    packingBox: \"Packing Box\",\n    review: \"Review\",\n    labelNo: \"Label #\",\n  },\n  customer: {\n    customer: \"Customer\",\n    salesSummary: \"Sales Summary\",\n    mobile: \"Mobile\",\n    tel: \"Tel.\",\n    shippingAddress: \"Shipping Address\",\n    billingAddress: \"Billing Address\",\n  },\n  readMore: \"Read More\",\n  resources: {\n    PurchaseOrder: {\n      fields: {\n        products: \"Products\",\n      },\n    },\n  },\n  common: {\n    addNew: \"Add New\",\n    create: \"Add New\",\n    list: \"List\",\n    approved: \"Approved\",\n    new: \"New\",\n    date: \"Date\",\n    draft: \"Draft\",\n    edit: \"Edit\",\n    confirm: \"Confirm\",\n    confirmed: \"Confirmed\",\n    deleted: \"Deleted\",\n    status: \"Status\",\n    save: \"Save\",\n    cancel: \"Cancel\",\n    assign: \"Assign\",\n    from: \"From\",\n    to: \"To\",\n    transfer: \"Transfer\",\n    search: \"Search\",\n    filter: \"Filter\",\n    groupBy: \"Group By\",\n    next: \"Next\",\n    prev: \"Prev\",\n    information: \"Information\",\n    pending: \"Pending\",\n    sent: \"Sent\",\n    acked: \"Acked\",\n    shipped: \"Shipped\",\n    arrived: \"Arrived\",\n    received: \"Received\",\n    packed: \"Packed\",\n    delivered: \"Delivered\",\n    paid: \"Paid\",\n    print: \"Print\",\n    salesman: \"Salesman\",\n    delete: \"Delete\",\n  },\n  pageNotFound: \"Page Not Found!\",\n};\n","import polyglotI18nProvider from 'ra-i18n-polyglot';\nimport englishMessages from 'ra-language-english';\nimport chineseTraditionalMessages from 'ra-language-chinese-traditional';\nimport en from './i18n/en';\n\nexport const i18nProvider = polyglotI18nProvider(locale => {\n  if (locale === 'en') {\n    // initial call, must return synchronously\n    return { ...englishMessages, ...en };\n  }\n  if (locale === 'zh-TW') {\n    return import('./i18n/zh-TW.js').then(messages => ({ ...chineseTraditionalMessages, ...messages.default }));\n  }\n}, 'en');\n","import React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  SaveButton,\n  Toolbar,\n  useCreate,\n  useNotify,\n  Create,\n  SimpleForm,\n  AutocompleteInput,\n  NumberInput,\n  ReferenceInput,\n  SelectInput,\n  Edit,\n  FormDataConsumer,\n} from \"react-admin\";\nimport { useFormState } from \"react-final-form\";\nimport { useDispatch } from \"react-redux\";\nimport { addBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport { Grid, Container } from \"@material-ui/core\";\n\nconst SaveItemButton = (props) => {\n  const [create] = useCreate(\"PurchaseOrderItem\");\n  const history = useHistory();\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n\n  const notify = useNotify();\n\n  const formState = useFormState();\n  const handleClick = useCallback(() => {\n    if (!formState.valid) {\n      return;\n    }\n    const { product, ...formValues } = formState.values;\n    create(\n      {\n        payload: { data: { ...formValues, productId: product.id } },\n      },\n      {\n        onSuccess: ({ data: newRecord }) => {\n          notify(\"ra.notification.created\", \"info\", {\n            smart_count: 1,\n          });\n          redirect();\n        },\n      }\n    );\n  }, [formState.valid, formState.values, create, notify, redirect]);\n\n  return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n};\n\nconst PurchaseOrderItemCreateToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveItemButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n  </Toolbar>\n);\n\nexport function PurchaseOrderItemCreate(props) {\n  const [selectedProduct, setSelectedProduct] = useState();\n  const dispatch = useDispatch();\n  dispatch(\n    addBreadcrumbs({\n      url: \"/PurchaseOrderItem/create\",\n      label: \"Add New Purchase Order Item\",\n    })\n  );\n\n  const searchProduct = (searchText) => ({\n    code_contains: searchText,\n  });\n\n  const inputText = (record) => () => {\n    setSelectedProduct(record);\n    return `${record.code} ${record.nameChi}`;\n  };\n\n  const OptionRenderer = (choice) =>\n    `${choice.record.code} ${choice.record.nameChi}`;\n\n  const renderInput = () => {\n    return (\n      <FormDataConsumer>\n        {({ formData, ...rest }) => {\n          return (\n            <Grid container direction=\"column\" style={{ width: 280 }}>\n              <NumberInput source=\"quantity\" initialsValue={0} />\n              <NumberInput source=\"price\" initialValue={formData.price} />\n            </Grid>\n          );\n        }}\n      </FormDataConsumer>\n    );\n  };\n\n  return (\n    <Create {...props}>\n      <SimpleForm\n        toolbar={<PurchaseOrderItemCreateToolbar />}\n        variant=\"standard\"\n      >\n        <ReferenceInput\n          label=\"Purchase Order\"\n          source=\"purchaseOrder.id\"\n          reference=\"PurchaseOrder\"\n        >\n          <SelectInput disabled optionText=\"code\" label=\"Purchase Order No.\" />\n        </ReferenceInput>\n        <ReferenceInput\n          filterToQuery={searchProduct}\n          label=\"Product\"\n          source=\"product.id\"\n          reference=\"Product\"\n        >\n          <AutocompleteInput\n            optionText={<OptionRenderer />}\n            label=\"Purchase Order No.\"\n            inputText={inputText}\n            matchSuggestion={(filterValue, suggestion) => true}\n            options={{ style: { width: 500 } }}\n          />\n        </ReferenceInput>\n        {selectedProduct && renderInput()}\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport const PurchaseOrderItemEdit = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n  return (\n    <Edit actions={<React.Fragment />} {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <ReferenceInput\n          label=\"Purchase Order\"\n          source=\"purchaseOrder.id\"\n          reference=\"PurchaseOrder\"\n        >\n          <SelectInput disabled optionText=\"code\" label=\"Purchase Order No.\" />\n        </ReferenceInput>\n        <ReferenceInput label=\"Product\" source=\"product.id\" reference=\"Product\">\n          <SelectInput disabled optionText=\"code\" label=\"Purchase Order No.\" />\n        </ReferenceInput>\n\n        <NumberInput source=\"quantity\" initialValue=\"quantity\" />\n\n        <NumberInput source=\"price\" initialValue=\"cost\" />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              addBreadcrumbs({\n                url: `/PurchaseOrderItem/${formData.id}`,\n                label: `Edit`,\n              })\n            );\n            return null;\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  Show,\n  TabbedShowLayout,\n  Tab,\n\n\n  EditButton,\n  DeleteButton,\n  ReferenceManyField,\n  TextField,\n  DateField,\n  useTranslate, Create, SimpleForm, TextInput, required, ImageInput, ImageField, NumberInput, DateInput, ReferenceInput, SelectInput, Edit,\n} from 'react-admin';\nimport { useDispatch } from 'react-redux';\nimport { addBreadcrumbs } from '../../redux/breadcrumbs';\n\nconst redirect = () => '/Shipping';\n\nexport const ShippingItemCreate = props => {\n  const dispatch = useDispatch();\n  dispatch(addBreadcrumbs({url: '/ShippingItem/create', label: 'Add New Shipping Item'}));\n  return (\n    <Create {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <TextInput source=\"code\" validate={required()} label=\"Shipping No.\" />\n        <TextInput source=\"nameEn\" validate={required()} />\n        <TextInput source=\"nameChi\" validate={required()} />\n        <TextInput source=\"shortDescription\" />\n        <TextInput source=\"longDescription\" />\n        <ImageInput source=\"images\" accept=\"image/*\" multiple>\n          <ImageField source=\"src\" title=\"title\" />\n        </ImageInput>\n        <TextInput source=\"sku\" />\n        <TextInput source=\"upc\" />\n        <NumberInput source=\"minOrderQuantity\" defaultValue={10} />\n        <NumberInput source=\"minStockLevel\" defaultValue={0} />\n        <DateInput source=\"onlineDate\" />\n        <DateInput source=\"offlineDate\" />\n        <ReferenceInput label=\"Category\" source=\"category.id\" reference=\"ShippingItemCategory\">\n          <SelectInput optionText=\"nameEn\" validate={required()} />\n        </ReferenceInput>\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport const ShippingItemEdit = props => {\n  const dispatch = useDispatch();\n  dispatch(addBreadcrumbs({url: `/PurchaseOrderItem/${props.id}`, label: 'Edit Shipping Item'}));\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" redirect={redirect}>\n        <NumberInput source=\"quantity\" />\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport const ShippingItemShow = props => {\n  const translate = useTranslate();\n  const dispatch = useDispatch();\n  dispatch(addBreadcrumbs({url: `/PurchaseOrderItem/${props.id}/show`, label: 'Shipping Item'}));\n  return (\n    <Show {...props}>\n      <TabbedShowLayout>\n        <Tab label={translate('common.information')}>\n          <TextField source=\"code\" label=\"Shipping No.\" />\n          <TextField source=\"totalPrice\" />\n          <DateField source=\"expectedDeliveryAt\" />\n          <TextField source=\"state\" />\n          <DateField source=\"createdAt\" />\n          <DateField source=\"updatedAt\" />\n        </Tab>\n        <Tab label={translate('purchaseOrder.products')} path=\"products\">\n          <ReferenceManyField reference=\"ShippingItem\" target=\"shipping\" addLabel={false}>\n            <Datagrid>\n              <TextField source=\"price\" />\n              <TextField source=\"quantity\" />\n              <TextField source=\"totalPrice\" />\n              <EditButton />\n            </Datagrid>\n          </ReferenceManyField>\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  );\n};\n\nexport const ShippingItemList = props => {\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"code\" label=\"Shipping No.\" />\n        <TextField source=\"totalPrice\" />\n        <DateField source=\"expectedDeliveryAt\" />\n        <TextField source=\"state\" />\n        <DateField source=\"createdAt\" />\n        <DateField source=\"updatedAt\" />\n\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport {\n  SaveButton,\n  Toolbar,\n  useCreate,\n  useNotify,\n  Create,\n  SimpleForm,\n  AutocompleteInput,\n  NumberInput,\n  ReferenceInput,\n  SelectInput,\n  Edit,\n  FormDataConsumer,\n  ReferenceFieldController,\n  TextInput,\n  required,\n  useTranslate,\n} from \"react-admin\";\nimport { useFormState } from \"react-final-form\";\nimport { useDispatch } from \"react-redux\";\nimport { addBreadcrumbs } from \"../../redux/breadcrumbs\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField, Grid } from \"@material-ui/core\";\n\nconst SaveItemButton = (props) => {\n  const [create] = useCreate(\"SalesOrderItem\");\n  const history = useHistory();\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n\n  const notify = useNotify();\n\n  const formState = useFormState();\n  console.log(\"formState\", formState);\n  const handleClick = useCallback(() => {\n    if (!formState.valid) {\n      return;\n    }\n    const { product, ...formValues } = formState.values;\n    const quantity = parseInt(formValues.quantity, 10);\n    const price = parseFloat(formValues.price);\n\n    delete formValues.customer;\n    console.log(\"product: \", product);\n    create(\n      {\n        payload: {\n          data: {\n            ...formValues,\n            productId: product.id,\n            discount: product.discount,\n            totalPrice: quantity * price,\n          },\n        },\n      },\n      {\n        onSuccess: ({ data: newRecord }) => {\n          notify(\"ra.notification.created\", \"info\", {\n            smart_count: 1,\n          });\n          redirect();\n        },\n      }\n    );\n  }, [formState.valid, formState.values, create, notify, redirect]);\n\n  return <SaveButton {...props} handleSubmitWithRedirect={handleClick} />;\n};\n\nconst SalesOrderItemCreateToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveItemButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n  </Toolbar>\n);\n\nconst OptionRenderer = (choice) => (\n  <span>\n    {choice.record.code} {choice.record.nameChi}\n  </span>\n);\n\nexport function SalesOrderItemCreate(props) {\n  const location = useLocation();\n  const customerPlan = location.state.record.customer.wholesalePlan;\n  const translate = useTranslate();\n  const [selectedProduct, setSelectProduct] = useState();\n  const [selectBtn, setSelectBtn] = useState(customerPlan);\n  let wholeSalePriceList = !selectedProduct\n    ? []\n    : [\n        selectedProduct.wholeSalePrice1,\n        selectedProduct.wholeSalePrice2,\n        selectedProduct.wholeSalePrice3,\n        selectedProduct.wholeSalePrice4,\n        selectedProduct.wholeSalePrice5,\n      ];\n  if (\n    selectedProduct &&\n    selectedProduct.discount &&\n    wholeSalePriceList.length > 0\n  ) {\n    if (selectedProduct.discount.includes(\"%\")) {\n      const percent = 1 - parseFloat(selectedProduct.discount) / 100;\n      console.log(percent);\n      wholeSalePriceList = wholeSalePriceList.map((price) => price * percent);\n      console.log(\"wholeSalePriceList:\", wholeSalePriceList);\n    } else if (selectedProduct.discount.includes(\"HKD\")) {\n      const discountAmount = parseFloat(\n        selectedProduct.discount.replace(\"HKD\", \"\")\n      );\n      wholeSalePriceList = wholeSalePriceList.map(\n        (price) => price - discountAmount\n      );\n    }\n  }\n  let price;\n\n  const dispatch = useDispatch();\n  dispatch(\n    addBreadcrumbs({\n      url: \"/SalesOrderItem/create\",\n      label: \"Add New Sales Order Item\",\n    })\n  );\n  const searchProduct = (searchText) => ({\n    code_contains: searchText,\n  });\n\n  const renderBtnGroup = (formData) => {\n    return (\n      <ButtonGroup>\n        {wholeSalePriceList.map((price, index) => (\n          <Button\n            onClick={() => {\n              setSelectBtn(index + 1);\n              formData.price = price;\n              console.log(price);\n            }}\n            color={selectBtn == index + 1 ? \"secondary\" : undefined}\n            variant=\"contained\"\n          >\n            {translate(\"product.wholeSalePrice\")}\n            {index + 1}\n          </Button>\n        ))}\n      </ButtonGroup>\n    );\n  };\n\n  const inputText = (record) => () => {\n    setSelectProduct(record);\n    console.log(\"product\", selectedProduct);\n    return record.code;\n  };\n\n  return (\n    <Create {...props}>\n      <SimpleForm toolbar={<SalesOrderItemCreateToolbar />} variant=\"standard\">\n        <ReferenceInput\n          label=\"Sales Order\"\n          source=\"salesOrder.id\"\n          reference=\"SalesOrder\"\n        >\n          <SelectInput disabled optionText=\"code\" label=\"Sales Order No.\" />\n        </ReferenceInput>\n        <ReferenceInput\n          filterToQuery={searchProduct}\n          label=\"Product\"\n          source=\"product.id\"\n          reference=\"Product\"\n        >\n          <AutocompleteInput\n            optionText={<OptionRenderer />}\n            label=\"Sales Order No.\"\n            inputText={inputText}\n            matchSuggestion={(filterValue, suggestion) => true}\n          />\n        </ReferenceInput>\n\n        <NumberInput source=\"quantity\" />\n        {/* <NumberInput source=\"price\" /> */}\n        <FormDataConsumer>\n          {({ formData }) => {\n            formData.price = wholeSalePriceList[selectBtn - 1];\n            console.log(\"formproduct: \", formData.product);\n            if (selectedProduct) {\n              formData.product.discount = selectedProduct.discount;\n            }\n\n            return (\n              <Grid direction=\"column\" container spacing={3}>\n                <Grid item xs={6}>\n                  {selectedProduct && (\n                    <TextField\n                      label=\"price\"\n                      type=\"number\"\n                      defaultValue={wholeSalePriceList[selectBtn - 1]}\n                      onChange={(e) => {\n                        const { value } = e.target;\n                        formData.price = value;\n                      }}\n                      value={formData.price}\n                    />\n                  )}\n                </Grid>\n                <Grid item xs={6}>\n                  {selectedProduct && renderBtnGroup(formData)}\n                </Grid>\n              </Grid>\n            );\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Create>\n  );\n}\n\n// ########################## Edit Item ##########################################\n\nconst UPDATE_SALES_ORDER_ITEM = gql`\n  mutation updateSalesOrderItem(\n    $data: SalesOrderItemUpdateInput!\n    $where: SalesOrderItemWhereUniqueInput!\n  ) {\n    updateSalesOrderItem(data: $data, where: $where) {\n      id\n    }\n  }\n`;\n\nconst calculateDiscount = (formData) => {\n  // if (formData.discount) {\n  //   if (formData.discount.includes(\"%\")) {\n  //     const percent = 1 - parseFloat(formData.discount) / 100;\n  //     return parseFloat(formData.price) * percent;\n  //   } else if (formData.discount.includes(\"HKD\")) {\n  //     const discountAmount = parseFloat(formData.discount.replace(\"HKD\", \"\"));\n  //     return parseFloat(formData.price) - discountAmount;\n  //   }\n  // } else {\n  //   return parseFloat(formData.price);\n  // }\n  return parseFloat(formData.wholeSalePrice) - parseFloat(formData.price);\n};\n\nconst SaveEditButton = (props) => {\n  const history = useHistory();\n  const [update] = useMutation(UPDATE_SALES_ORDER_ITEM);\n\n  const redirect = () => {\n    return history.go(-1);\n  };\n\n  const notify = useNotify();\n\n  const formState = useFormState();\n  const { wholeSalePrice, salesOrder, price, quantity, id } = formState.values;\n\n  const handleClick = () => {\n    console.log(\"formState: \", formState.values);\n    update({\n      variables: {\n        data: {\n          price,\n          quantity,\n          discount: `HKD${wholeSalePrice - price}`,\n          subPrice: wholeSalePrice,\n        },\n        where: { id },\n      },\n    }).then((value) => {\n      notify(\"Edit Success\");\n      redirect();\n    });\n  };\n\n  return (\n    <SaveButton\n      {...props}\n      handleSubmitWithRedirect={handleClick}\n      disabled={!wholeSalePrice}\n    />\n  );\n};\n\nconst SalesOrderItemEditToolBar = (props) => (\n  <Toolbar {...props}>\n    <SaveEditButton label=\"common.save\" submitOnEnter={false} variant=\"text\" />\n  </Toolbar>\n);\n\nexport const SalesOrderItemEdit = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Edit {...props}>\n      <SimpleForm variant=\"standard\" toolbar={<SalesOrderItemEditToolBar />}>\n        <ReferenceInput\n          label=\"Sales Order\"\n          source=\"salesOrder.id\"\n          reference=\"SalesOrder\"\n        >\n          <SelectInput disabled optionText=\"code\" label=\"Sales Order No.\" />\n        </ReferenceInput>\n        <ReferenceInput label=\"Product\" source=\"product.id\" reference=\"Product\">\n          <SelectInput disabled optionText=\"code\" label=\"Sales Order No.\" />\n        </ReferenceInput>\n        <NumberInput source=\"quantity\" />\n        <NumberInput source=\"wholeSalePrice\" validate={required()} />\n        <NumberInput source=\"price\" inputText={NumberInput} />\n        <FormDataConsumer>\n          {({ formData }) => {\n            dispatch(\n              addBreadcrumbs({\n                url: `/SalesOrderItem/${formData.id}`,\n                label: `Edit`,\n              })\n            );\n            return (\n              <h2>\n                Discount Amount(HKD): {formData.wholeSalePrice - formData.price}\n              </h2>\n            );\n          }}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloProvider as ClientProvider } from \"@apollo/client\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DayjsUtils from \"@date-io/dayjs\";\nimport { Admin, Resource, Loading } from \"react-admin\";\nimport DashboardPage from \"./containers/DashboardPage\";\nimport NotFoundPage from \"./containers/NotFoundPage/Loadable\";\nimport Layout from \"./containers/Layout\";\nimport routes from \"./routes\";\nimport { apolloClient, getDataProvider } from \"./dataProvider\";\nimport authProvider from \"./dataProvider/authProvider\";\nimport {\n  WarehouseList,\n  WarehouseShow,\n  WarehouseCreate,\n  WarehouseEdit,\n} from \"./resources/Warehouse\";\nimport {\n  SupplierList,\n  SupplierCreate,\n  SupplierEdit,\n  SupplierShow,\n} from \"./resources/Supplier\";\nimport {\n  ReceivePaymentList,\n  ReceivePaymentCreate,\n  ReceivePaymentEdit,\n  ReceivePaymentShow,\n} from \"./resources/ReceivePayment\";\nimport {\n  DeliveryNoteList,\n  DeliveryNoteCreate,\n  DeliveryNoteEdit,\n  DeliveryNoteShow,\n} from \"./resources/DeliveryNote\";\nimport { DeliveryItemEdit } from \"./resources/DeliveryItem\";\nimport { DeliveryItemCreate } from \"./resources/DeliveryItem/Create\";\n\nimport {\n  InvoiceList,\n  InvoiceCreate,\n  InvoiceEdit,\n  InvoiceShow,\n} from \"./resources/Invoice\";\nimport {\n  SalesOrderList,\n  SalesOrderCreate,\n  SalesOrderEdit,\n  SalesOrderShow,\n} from \"./resources/SalesOrder\";\nimport {\n  PurchaseOrderList,\n  PurchaseOrderCreate,\n  PurchaseOrderEdit,\n  PurchaseOrderShow,\n} from \"./resources/PurchaseOrder\";\nimport {\n  ShippingList,\n  ShippingCreate,\n  ShippingEdit,\n  ShippingShow,\n} from \"./resources/Shipping\";\nimport {\n  ProductList,\n  ProductCreate,\n  ProductEdit,\n  ProductShow,\n} from \"./resources/Product\";\nimport {\n  CustomerList,\n  CustomerCreate,\n  CustomerEdit,\n  CustomerShow,\n} from \"./resources/Customer\";\nimport { UserList, UserCreate, UserEdit, UserShow } from \"./resources/User\";\nimport {\n  UserGroupList,\n  UserGroupCreate,\n  UserGroupEdit,\n  UserGroupShow,\n} from \"./resources/UserGroup\";\nimport {\n  CustomerGroupList,\n  CustomerGroupCreate,\n  CustomerGroupEdit,\n  CustomerGroupShow,\n} from \"./resources/CustomerGroup\";\nimport {\n  CustomerShopCreate,\n  CustomerShopEdit,\n  CustomerShopList,\n  CustomerShopShow,\n} from \"./resources/CustomerShop\";\nimport {\n  ProductCategoryCreate,\n  ProductCategoryEdit,\n  ProductCategoryList,\n  ProductCategoryShow,\n} from \"./resources/ProductCategory\";\nimport { i18nProvider } from \"./i18nProvider\";\nimport {\n  PurchaseOrderItemEdit,\n  PurchaseOrderItemCreate,\n} from \"./resources/PurchaseOrderItem\";\nimport { ShippingItemEdit } from \"./resources/ShippingItem\";\nimport {\n  SalesOrderItemCreate,\n  SalesOrderItemEdit,\n} from \"./resources/SalesOrderItem\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport breadcrumbReducer from \"./redux/breadcrumbs\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#f16112\",\n    },\n  },\n  sidebar: {\n    width: \"100%\", // The default value is 240\n    closedWidth: \"100%\", // The default value is 55\n  },\n});\nconst history = createHistory();\n\nconst App = () => {\n  const [dataProvider, setDataProvider] = useState();\n\n  useEffect(() => {\n    if (!dataProvider) {\n      getDataProvider()\n        .then((dp) => {\n          setDataProvider(() => dp);\n        })\n        .catch((e) => {\n          console.error(e);\n        });\n    }\n  }, [dataProvider, setDataProvider]);\n\n  if (!dataProvider) {\n    return <Loading />;\n  }\n\n  return (\n    <ClientProvider client={apolloClient}>\n      <ApolloProvider client={apolloClient}>\n        <MuiPickersUtilsProvider utils={DayjsUtils}>\n          <Admin\n            theme={theme}\n            i18nProvider={i18nProvider}\n            authProvider={authProvider}\n            title=\"Supplier Management System\"\n            dashboard={DashboardPage}\n            catchAll={NotFoundPage}\n            layout={Layout}\n            customRoutes={routes}\n            dataProvider={dataProvider}\n            history={history}\n            customReducers={{ breadcrumb: breadcrumbReducer }}\n          >\n            <Resource\n              name=\"Warehouse\"\n              list={WarehouseList}\n              edit={WarehouseEdit}\n              create={WarehouseCreate}\n              show={WarehouseShow}\n            />\n            <Resource\n              name=\"Supplier\"\n              list={SupplierList}\n              edit={SupplierEdit}\n              create={SupplierCreate}\n              show={SupplierShow}\n            />\n            <Resource\n              name=\"ReceivePayment\"\n              list={ReceivePaymentList}\n              create={ReceivePaymentCreate}\n              show={ReceivePaymentShow}\n            />\n            <Resource\n              name=\"DeliveryNote\"\n              list={DeliveryNoteList}\n              edit={DeliveryNoteEdit}\n              create={DeliveryNoteCreate}\n              show={DeliveryNoteShow}\n            />\n            <Resource\n              name=\"DeliveryItem\"\n              edit={DeliveryItemEdit}\n              create={DeliveryItemCreate}\n            />\n            <Resource name=\"InventoryItem\" />\n            <Resource name=\"ExpiryDateSummary\" />\n            <Resource name=\"WarehouseSummary\" />\n            <Resource\n              name=\"Invoice\"\n              list={InvoiceList}\n              edit={InvoiceEdit}\n              create={InvoiceCreate}\n              show={InvoiceShow}\n            />\n            <Resource\n              name=\"SalesOrder\"\n              list={SalesOrderList}\n              edit={SalesOrderEdit}\n              create={SalesOrderCreate}\n              show={SalesOrderShow}\n            />\n            <Resource\n              name=\"SalesOrderItem\"\n              edit={SalesOrderItemEdit}\n              create={SalesOrderItemCreate}\n            />\n            <Resource\n              name=\"PurchaseOrder\"\n              list={PurchaseOrderList}\n              edit={PurchaseOrderEdit}\n              create={PurchaseOrderCreate}\n              show={PurchaseOrderShow}\n            />\n            <Resource\n              name=\"PurchaseOrderItem\"\n              edit={PurchaseOrderItemEdit}\n              create={PurchaseOrderItemCreate}\n            />\n            <Resource\n              name=\"Shipping\"\n              list={ShippingList}\n              edit={ShippingEdit}\n              create={ShippingCreate}\n              show={ShippingShow}\n            />\n            <Resource name=\"ShippingItem\" edit={ShippingItemEdit} />\n            <Resource\n              name=\"Product\"\n              list={ProductList}\n              edit={ProductEdit}\n              create={ProductCreate}\n              show={ProductShow}\n            />\n            <Resource\n              name=\"ProductCategory\"\n              list={ProductCategoryList}\n              edit={ProductCategoryEdit}\n              create={ProductCategoryCreate}\n              show={ProductCategoryShow}\n            />\n            <Resource\n              name=\"Customer\"\n              list={CustomerList}\n              edit={CustomerEdit}\n              create={CustomerCreate}\n              show={CustomerShow}\n            />\n            <Resource\n              name=\"CustomerGroup\"\n              list={CustomerGroupList}\n              edit={CustomerGroupEdit}\n              create={CustomerGroupCreate}\n              show={CustomerGroupShow}\n            />\n            <Resource\n              name=\"CustomerShop\"\n              list={CustomerShopList}\n              edit={CustomerShopEdit}\n              create={CustomerShopCreate}\n              show={CustomerShopShow}\n            />\n            <Resource\n              name=\"User\"\n              list={UserList}\n              edit={UserEdit}\n              create={UserCreate}\n              show={UserShow}\n            />\n            <Resource\n              name=\"UserGroup\"\n              list={UserGroupList}\n              edit={UserGroupEdit}\n              create={UserGroupCreate}\n              show={UserGroupShow}\n            />\n            <Resource name=\"CustomerCoupon\" />\n          </Admin>\n        </MuiPickersUtilsProvider>\n      </ApolloProvider>\n    </ClientProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*\n * HomePage\n *\n * This is the first thing users see of our App, at the '/' route\n *\n */\n\nimport React, { useState } from \"react\";\nimport { usePermissions, Loading } from \"react-admin\";\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ProfitChart from \"./boards/ProfitChart\";\nimport ProfitNumSum from \"./boards/ProfitNumSum\";\nimport PurchasingForecast from \"./boards/PurchasingForecast\";\nimport SalesOrderChart from \"./boards/SalesOrderChart\";\nimport SalesOrderNumSum from \"./boards/SalesOrderNumSum\";\nimport SalesOrderRecent from \"./boards/SalesOrderRecent\";\nimport PurchaseOrderRecent from \"./boards/PurchaseOrderRecent\";\nimport DeliveryNoteWaiting from \"./boards/DeliveryNoteWaiting\";\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {\n      /*Ignore*/\n    }\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      })\n    );\n  }\n}\n\nconst originalLayouts = getFromLS(\"layouts\") || {};\nexport default function DashboardPage() {\n  const { loaded, permissions } = usePermissions();\n  const [layouts, setLayouts] = useState(originalLayouts);\n  const onLayoutChange = (layout, layouts) => {\n    saveToLS(\"layouts\", layouts);\n    setLayouts(layouts);\n  };\n  if (!loaded) return <Loading />;\n\n  const renderProfitChart = () => {\n    if ([\"admin\", \"account\"].includes(permissions)) {\n      return (\n        <div key=\"profitChart\" data-grid={{ w: 8, h: 10, x: 0, y: 0, minW: 4, minH: 10 }}>\n          <ProfitChart />\n        </div>\n      );\n    }\n  };\n\n  const renderProfitNumSum = () => {\n    if ([\"admin\", \"account\"].includes(permissions)) {\n      return (\n        <div key=\"profitNumSum\" data-grid={{ w: 4, h: 10, x: 8, y: 0, minW: 2, minH: 10 }}>\n          <ProfitNumSum />\n        </div>\n      );\n    }\n  };\n\n  const renderPurchasingForecast = () => {\n    if ([\"admin\"].includes(permissions)) {\n      return (\n        <div key=\"purchasingForecast\" data-grid={{ w: 12, h: 10, x: 0, y: 10, minW: 4, minH: 10 }}>\n          <PurchasingForecast />\n        </div>\n      );\n    }\n  };\n\n  const renderSalesOrderChart = () => {\n    if ([\"admin\", \"account\", \"sales\"].includes(permissions)) {\n      return (\n        <div key=\"salesOrderChart\" data-grid={{ w: 8, h: 10, x: 0, y: 0, minW: 4, minH: 10 }}>\n          <SalesOrderChart />\n        </div>\n      );\n    }\n  };\n\n  const renderSalesOrderNumSum = () => {\n    if ([\"admin\", \"account\", \"sales\"].includes(permissions)) {\n      return (\n        <div key=\"salesOrderNumSum\" data-grid={{ w: 4, h: 10, x: 8, y: 0, minW: 2, minH: 10 }}>\n          <SalesOrderNumSum />\n        </div>\n      );\n    }\n  };\n\n  const renderSalesOrderRecent = () => {\n    if ([\"admin\", \"account\", \"sales\"].includes(permissions)) {\n      return (\n        <div key=\"salesOrderRecent\" data-grid={{ w: 12, h: 10, x: 0, y: 10, minW: 4, minH: 10 }}>\n          <SalesOrderRecent />\n        </div>\n      );\n    }\n  };\n\n  const renderPurchaseOrderRecent = () => {\n    if ([\"admin\", \"account\"].includes(permissions)) {\n      return (\n        <div key=\"purchaseOrderRecent\" data-grid={{ w: 12, h: 10, x: 0, y: 10, minW: 4, minH: 10 }}>\n          <PurchaseOrderRecent />\n        </div>\n      );\n    }\n  };\n\n  const renderDeliveryNoteWaiting = () => {\n    if ([\"admin\", \"inventory\"].includes(permissions)) {\n      return (\n        <div key=\"deliveryNoteWaiting\" data-grid={{ w: 12, h: 10, x: 0, y: 10, minW: 4, minH: 10 }}>\n          <DeliveryNoteWaiting />\n        </div>\n      );\n    }\n  };\n\n  const dashboards = [renderProfitChart(), renderProfitNumSum(), renderPurchasingForecast(), renderSalesOrderChart(), renderSalesOrderNumSum(), renderSalesOrderRecent(), renderPurchaseOrderRecent(), renderDeliveryNoteWaiting()].filter(Boolean);\n\n  return (\n    <ResponsiveReactGridLayout className=\"layout\" layouts={layouts} cols={{ lg: 12, md: 12, sm: 6, xs: 4, xxs: 2 }} rowHeight={30} onLayoutChange={onLayoutChange}>\n      {dashboards}\n    </ResponsiveReactGridLayout>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/template.8b755b7f.csv\";","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from '../../Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Profit</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst ProfitChart = () => {\n  const classes = useStyles();\n  return (\n\n      <Paper className={classes.paper}>\n        <Chart />\n      </Paper>\n\n  );\n};\n\nexport default ProfitChart;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from '../../Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Profit (Jan, 2020)</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 January, 2020\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Deposits from './Deposits';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst ProfitNumSum = () => {\n  const classes = useStyles();\n  return (\n\n      <Paper className={classes.paper}>\n        <Deposits />\n      </Paper>\n\n  );\n};\n\nexport default ProfitNumSum;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Purchasing Forecast</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Orders from './Orders';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst PurchasingForecast = () => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <Orders />\n    </Paper>\n  );\n};\n\nexport default PurchasingForecast;","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from '../../Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Sales Order</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst SalesOrderChart = () => {\n  const classes = useStyles();\n  return (\n\n      <Paper className={classes.paper}>\n        <Chart />\n      </Paper>\n  );\n}\n\nexport default SalesOrderChart;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from '../../Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Total Sales</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Deposits from './Deposits';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst SalesOrderNumSum = () => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <Deposits />\n    </Paper>\n  );\n};\n\nexport default SalesOrderNumSum;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Sales Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Orders from './Orders';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst SalesOrderRecent = () => {\n  const classes = useStyles();\n  return (\n\n      <Paper className={classes.paper}>\n        <Orders />\n      </Paper>\n\n  );\n};\n\nexport default SalesOrderRecent;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Purchase Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Orders from './Orders';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst PurchaseOrderRecent = () => {\n  const classes = useStyles();\n  return (\n\n      <Paper className={classes.paper}>\n        <Orders />\n      </Paper>\n\n  );\n}\n\nexport default PurchaseOrderRecent;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Delivery Notes</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Orders from './Orders';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    height: 'calc(100% - 32px)',\n  },\n}));\n\nconst DeliveryNoteWaiting = () => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <Orders />\n    </Paper>\n  );\n};\n\nexport default DeliveryNoteWaiting;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h1\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n"],"sourceRoot":""}